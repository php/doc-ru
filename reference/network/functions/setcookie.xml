<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5c1ccc6e24e5d470e75ef0a5887c2ff583266375 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.setcookie" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>setcookie</refname>
  <refpurpose>Отправляет cookie</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>setcookie</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expires_or_options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>path</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>domain</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>secure</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>httponly</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>Альтернативная сигнатура доступна с PHP 7.3.0 (именованные параметры не поддерживаются):</para>
  <methodsynopsis>
   <type>bool</type><methodname>setcookie</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>setcookie</function> задаёт значение cookie, которое будет отправлено клиенту вместе
   с другими HTTP-заголовками. Как и другие заголовки, файл cookie должен передаваться
   <emphasis>до</emphasis> того, как будут выведены любые другие данные скрипта (это
   ограничение протокола). Для этого нужно вызывать функцию
   до остального вывода, включая вывод тегов <literal>&lt;html&gt;</literal>
   и <literal>&lt;head&gt;</literal>, а также пустые строки и пробельные символы.
  </para>
  <para>
   После установки cookie к нему можно будет получить доступ
   через суперглобальную переменную <varname>$_COOKIE</varname>
   при следующей загрузке страницы.
   Значения cookie также может содержать суперглобальная переменная <varname>$_REQUEST</varname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Стандарт <link xlink:href="&url.rfc;6265">RFC 6265</link> даёт конкретные указания о том,
   как нужно интерпретировать каждый из параметров
   <function>setcookie</function>.
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Название cookie.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Значение cookie. Это значение будет сохранено на клиентском компьютере; не
       записывайте в cookie секретные данные. Значение, присвоенное cookie c именем
       <parameter>name</parameter>, допустим, <literal>'cookiename'</literal>, будет
       доступно через <varname>$_COOKIE['cookiename']</varname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expires_or_options</parameter></term>
     <listitem>
      <para>
       Время истечение срока действия cookie. Это метка времени Unix, то есть
       количество секунд с начала эпохи.
       Один из способов установить значение — добавить количество секунд до истечения срока действия cookie
       к результату вызова функции <function>time</function>.
       Например, выражение <literal>time() + 60 * 60 * 24 * 30</literal> установит
       срок действия cookie, который закончится через 30 дней.
       Другой вариант — вызвать функцию <function>mktime</function>.
       Если задать <literal>0</literal> или пропустить аргумент, срок действия cookie
       закончится с окончанием сессии (при закрытии браузера).
      </para>
      <para>
       <note>
        <para>
         Можно заметить, что параметр <parameter>expires_or_options</parameter> принимает в качестве
         значения метку времени Unix, а хранит его в формате
         <literal>Wdy, DD-Mon-YYYY HH:MM:SS GMT</literal>, причина этому то, что PHP делает это
         преобразование автоматически.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Путь на сервере, по которому будут доступны значения cookie. Если задать
       <literal>«/»</literal>, cookie будут доступны во всем домене
       <parameter>domain</parameter>. Если задать <literal>«/foo/»</literal>,
       cookie будут доступны только из директории <literal>/foo/</literal>
       и её поддиректорий (например, <literal>/foo/bar/</literal>) домена
       <parameter>domain</parameter>. Значение по умолчанию —
       текущая директория, в которой PHP устанавливает cookie.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>domain</parameter></term>
     <listitem>
      <para>
       Домен или поддомен, которому доступны cookie. Задание поддомена
       (например, <literal>«www.example.com»</literal>) сделает cookie доступными в нём
       и во всех поддоменах (например, w2.www.example.com). Чтобы
       сделать cookie доступными для всего домена, включая поддомены, нужно просто
       указать имя домена (то есть <literal>«example.com»</literal>).
      </para>
      <para>
       Старые браузеры, следующие устаревшему стандарту <link
       xlink:href="&url.rfc;2109">RFC 2109</link>, могут требовать <literal>.</literal> перед
       доменом, чтобы включались все поддомены.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>secure</parameter></term>
     <listitem>
      <para>
       Указывает на то, что значение cookie должно передаваться от клиента
       по защищённому соединению HTTPS. Если задано &true;, cookie от клиента
       будут переданы на сервер, только если установлено защищённое соединение.
       При передаче cookie от сервера клиенту программист веб-сервера должен следить за тем,
       чтобы cookie этого типа передавались по защищённому каналу (например,
       с учётом значения суперглобальной переменной <varname>$_SERVER["HTTPS"]</varname>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>httponly</parameter></term>
     <listitem>
      <para>
       Если задано &true;, cookie будут доступны только через HTTP-протокол.
       То есть cookie не будут доступны скриптовым языкам наподобие
       JavaScript. Было высказано предположение, что этот параметр в состоянии
       эффективно уменьшить кражу личных данных через XSS-атаку (хотя
       он поддерживается не всеми браузерами),
       но это утверждение часто оспаривается. Может принимать
       значения &true; или &false;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Ассоциативный массив (<type>array</type>), который может содержать любой из ключей:
       <literal>expires</literal>, <literal>path</literal>, <literal>domain</literal>,
       <literal>secure</literal>, <literal>httponly</literal> и <literal>samesite</literal>.
       Если в массиве окажется другой ключ, будет выдана ошибка уровня <constant>E_WARNING</constant>.
       Значения имеют тот же смысл, который описан для параметров с тем же именем.
       Значение элемента <literal>samesite</literal> должно быть либо <literal>None</literal>,
       либо <literal>Lax</literal> или <literal>Strict</literal>.
       Если какая-то из разрешённых опций не указана, её значения по умолчанию
       совпадают с значениями по умолчанию явных параметров.
       Если элемент <literal>samesite</literal> не указан, функция не установит cookie-атрибут SameSite.
      </para>
      <para>
       <note>
        <para>
         To set a cookie that includes attributes that aren't among the keys listed,
         use <function>header</function>.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Если перед вызовом функции клиенту уже передавался какой-либо вывод (теги,
   пустые строки, пробелы, текст и т.п.),
   <function>setcookie</function> потерпит неудачу и вернёт &false;. Если
   <function>setcookie</function> успешно отработает, то вернёт &true;.
   Это, однако, не означает, что клиентское приложение (браузер) правильно приняло
   и обработало cookie.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Формат даты отправляемых cookie теперь <literal>«D, d M Y H:i:s \G\M\T»</literal>;
        ранее он был <literal>«D, d-M-Y H:i:s T»</literal>.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        Добавлена альтернативная подпись, поддерживающая массив опций <parameter>options</parameter>.
        Эта подпись поддерживает также настройку cookie-атрибута SameSite.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Следующие примеры иллюстрируют ряд способов отправки cookies.
   <example>
    <title>Пример использования <function>setcookie</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$value = 'что-то откуда-то';

setcookie("TestCookie", $value);
setcookie("TestCookie", $value, time()+3600);  /* срок действия 1 час */
setcookie("TestCookie", $value, time()+3600, "/~rasmus/", "example.com", 1);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Стоит отметить, что значение cookie перед отправкой клиенту подвергается
   URL-кодированию. При обратном получении значение cookie декодируется и
   помещается в переменную, с тем же именем, что и имя cookie. Если вы не хотите,
   чтобы значения кодировались, используйте функцию
   <function>setrawcookie</function>. Посмотреть содержимое
   наших тестовых cookie можно, запустив один из следующих примеров:
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// Вывести одно конкретное значение cookie
echo $_COOKIE["TestCookie"];

// В целях тестирования и отладки может пригодиться вывод всех cookie
print_r($_COOKIE);
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   <example>
    <title>Пример удаления cookie посредством <function>setcookie</function></title>
    <para>
     Чтобы удалить cookie достаточно в качестве срока действия указать какое-либо
     время в прошлом. Это запустит механизм браузера, удаляющий истёкшие cookie.
     В примерах ниже показано, как удалить cookie, заданные в предыдущих примерах:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// установка даты истечения срока действия на час назад
setcookie("TestCookie", "", time() - 3600);
setcookie("TestCookie", "", time() - 3600, "/~rasmus/", "example.com", 1);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>setcookie</function> и массивы</title>
    <para>
     Имеется возможность помещать в cookie массивы. Для этого каждому cookie нужно
     дать имя в соответствии с правилами именования массивов. Такая возможность
     позволяет поместить столько значений, сколько имеется элементов в массиве.
     При обратном получении все эти значения будут помещены в массив с
     именем этого cookie:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// отправка cookie
setcookie("cookie[three]", "cookiethree");
setcookie("cookie[two]", "cookietwo");
setcookie("cookie[one]", "cookieone");

// после перезагрузки страницы, выведем cookie
if (isset($_COOKIE['cookie'])) {
    foreach ($_COOKIE['cookie'] as $name => $value) {
        $name = htmlspecialchars($name);
        $value = htmlspecialchars($value);
        echo "$name : $value <br />\n";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
three : cookiethree
two : cookietwo
one : cookieone
]]>
    </screen>
   </example>
   <note>
    <simpara>
     Указание символов-разделителей наподобие <literal>[</literal> и <literal>]</literal>
     в составе имени cookie не соответствует 4-му разделу стандарта RFC 6265, но должно
     поддерживаться агентами пользователя, как указано в разделе 5 стандарта RFC 6265.
    </simpara>
   </note>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Разрешено буферизировать вывод для отправки вывода до вызова этой функции,
    при этом вывод в браузер буферизируется на сервере до тех пор, пока не будет отпрален.
    Это делают вызовом в скрипте функций
    <function>ob_start</function> и <function>ob_end_flush</function>,
    либо включают директиву конфигурации <literal>output_buffering</literal> в файле
    &php.ini; или в файлах конфигурации сервера.
   </para>
  </note>
  <para>
   Общие замечания:
   <itemizedlist>
    <listitem>
     <simpara>
      Cookie станут видимыми только после перезагрузки страницы, для которой
      они должны быть видны. Для проверки, правильно ли установлены cookie,
      их проверяют при следующей загрузке страницы до истечения их срока
      действия. Срок действия cookie задают в параметре
      <parameter>expires_or_options</parameter>. Хороший способ отладить наличие файлов cookie —
      просто вызывать функцию <literal>print_r($_COOKIE);</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      При удалении cookie должны быть заданы те же параметры, что и при
      установке. Если в качестве значения задать пустую строку,
      а остальные параметры соответствуют предыдущему вызову функции setcookie,
      то cookie c заданным именем будет удалён на удалённом клиенте.
      Внутренне это выглядит так: cookie будет присвоено значение
      <literal>«deleted»</literal>, а срок действия переносится на год в прошлое.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Поскольку установка значения &false; приведёт к удалению cookie, не нужно
      задавать cookie логические значения. Вместо этого можно указать
      <emphasis>0</emphasis> для &false; и <emphasis>1</emphasis> для &true;.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Имена cookie разрешено устанавливать массивом имён, которые будут доступны в PHP-скрипте
      как массивы, но в системе пользователя они будут храниться в виде
      отдельных записей. Для задания cookie c несколькими именами и значениями
      рекомендовано вызывать функцию <function>explode</function>. Не рекомендовано
      пользоваться для этих целей функцией <function>serialize</function>, поскольку это
      нарушает безопасность.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   Множественные вызовы функции <function>setcookie</function>
   выполняются в порядке вызова.
  </simpara>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>header</function></member>
    <member><function>setrawcookie</function></member>
    <member><link linkend="features.cookies">раздел cookies</link></member>
    <member><link xlink:href="&url.rfc;6265">RFC 6265</link></member>
    <member><link xlink:href="&url.rfc;2109">RFC 2109</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
