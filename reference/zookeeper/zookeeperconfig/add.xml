<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299d1daf07b166ec08d7f395e2d1a145a59751d9 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="zookeeperconfig.add" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZookeeperConfig::add</refname>
  <refpurpose>Добавляет серверы в ансамбль</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="oop">
   <modifier>public</modifier>
   <type>void</type><methodname>ZookeeperConfig::add</methodname>
   <methodparam><type>string</type><parameter>members</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>version</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">stat</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>members</parameter></term>
    <listitem>
     <para>
      Разделённый запятыми список серверов для добавления в ансамбль. Каждый из них имеет строку конфигурации для добавляемого сервера (как показано в файле конфигурации), только для основных кворумов.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>version</parameter></term>
    <listitem>
     <para>
      Ожидаемая версия узла. Функция завершится с ошибкой, если фактическая версия узла не соответствует ожидаемой версии. Если используется -1, проверка версии не будет выполняться.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>stat</parameter></term>
    <listitem>
     <para>
      Если не NULL, будет содержать значение stat для пути при возврате.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод генерирует <classname>ZookeeperException</classname> и его производные, когда число параметров или типы неверны или не удаётся сохранить значение в узле.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="zookeeperconfig.add.example.basic">
   <title>Пример использования <methodname>ZookeeperConfig::add</methodname></title>
   <para>
    Добавление серверов.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$client = new Zookeeper();
$client->connect('localhost:2181');
$client->addAuth('digest', 'timandes:timandes');
$zkConfig = $client->getConfig();
$zkConfig->set("server.1=localhost:2888:3888:participant;0.0.0.0:2181");
$zkConfig->add("server.2=localhost:2889:3889:participant;0.0.0.0:2182");
$r = $zkConfig->get();
if ($r)
  echo $r;
else
  echo 'Ошибка';
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
server.1=localhost:2888:3888:participant;0.0.0.0:2181
server.2=localhost:2889:3889:participant;0.0.0.0:2182
version=0xca01e881a2
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>ZookeeperConfig::get</methodname></member>
   <member><methodname>ZookeeperConfig::set</methodname></member>
   <member><methodname>ZookeeperConfig::remove</methodname></member>
   <member><classname>ZookeeperException</classname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
