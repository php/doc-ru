<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bd2ce37841f080284a74968e365b5155ed04f08a Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xml:id="function.mqseries-connx" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mqseries_connx</refname>
  <refpurpose>MQSeries MQCONNX</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>mqseries_connx</methodname>
   <methodparam><type>string</type><parameter>qManagerName</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">connOptions</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">hconn</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">compCode</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">reason</parameter></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>mqseries_connx</function> (MQCONNX) открывает соединение с менеджером очередей.
   Она возвращает обработчик соединения, используемый всеми остальными функциями модуля.
  </para>
  <para>
   Вызов функции <function>mqseries_connx</function> аналогичен вызову
   <function>mqseries_conn</function> (MQCONN), за исключением того, что MQCONNX
   позволяет задать опции, определяющие режим работы с менеджером.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>qManagerName</parameter>
     </term>
     <listitem>
      <para>Имя менеджера очередей.</para>
      <para>Имя менеджера очередей с которым устанавливается соединение.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>connOps</parameter>
     </term>
     <listitem>
      <para>Опции, определяющие работу функций</para>
      <para>Смотрите структуру MQCNO.</para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <parameter>hConn</parameter>
     </term>
     <listitem>
      <para>Обработчик соединения.</para>
      <para>Представляет открытое соединение с менеджером очередей.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>compCode</parameter>
     </term>
     <listitem>
      <para>Код завершения.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>reason</parameter>
     </term>
     <listitem>
      <para>Код причины, квалифицирующий compCode.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>&return.void;</para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования
     <function>mqseries_connx</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php
    $mqcno = array(
        'Version' => MQSERIES_MQCNO_VERSION_2,
        'Options' => MQSERIES_MQCNO_STANDARD_BINDING,
        'MQCD' => array('ChannelName' => 'MQNX9420.CLIENT',
        'ConnectionName' => 'localhost',
        'TransportType' => MQSERIES_MQXPT_TCP)
    );

    mqseries_connx('MQNX9420', $mqcno, $conn, $comp_code,$reason);
    if ($comp_code !== MQSERIES_MQCC_OK) {
        printf("Connx CompCode:%d Reason:%d Text:%s<br>\n", $comp_code, $reason, mqseries_strerror($reason));
        exit;
    }

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Пример использования
     <function>mqseries_connx</function>
     с использованием SSL и URL ответчика OCSP
    </title>
    <programlisting role="php">
<![CDATA[
<?php
    $mqcno = array(
        'Version' => 4, //MQCNO_VERSION_4
        'Options' => MQSERIES_MQCNO_STANDARD_BINDING,
        'MQCD' => array(
            'Version' => 7, //MQCD_VERSION_7
            'ConnectionName' => 'localhost',
            'TransportType' => MQSERIES_MQXPT_TCP,
            'ChannelName' => 'CONNECTIONCHANNEL',
            'SSLCipherSpec' => 'NULL_SHA'
        ),
        'MQSCO' => array(
            'KeyRepository' => '/var/mqm/qmgrs/QUEUEMGR/ssl/key', //Local path where the SSL key repository can be found
            'MQAIR' => array(
                'Version' => 2, //MQAIR_VERSION_2
                'AuthInfoType' => 2, //MQAIT_OCSP
                'OCSPResponderURL' => 'http://dummy.OCSP.responder'
            )
        )
    );

    mqseries_connx('QUEUEMGR', $mqcno, $conn, $comp_code,$reason);
    if ($comp_code !== MQSERIES_MQCC_OK) {
        printf("Connx CompCode:%d Reason:%d Text:%s<br>\n", $comp_code, $reason, mqseries_strerror($reason));
        exit;
    }

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mqseries_disc</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->
