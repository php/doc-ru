<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331fbfeac522d4ad00de1e043cc11610d66b88f9 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->

<refentry xml:id="yar-concurrent-client.loop" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Yar_Concurrent_Client::loop</refname>
  <refpurpose>Запуск всех зарегистрированный вызовов</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>bool</type><methodname>Yar_Concurrent_Client::loop</methodname>
   <methodparam choice="opt"><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>error_callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Запускает все зарегистрированные вызовы.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>callback</parameter></term>
    <listitem>
     <para>
      Если задана функция обратного вызова, то она будет запущена
      после запуска всех запросов но до получения ответов от них
      с параметром $callinfo равным NULL.
     </para>
     <para>
      Далее, если функция обратного вызова не была задана при регистрации
      вызова, то для обработки результата будет вызвана эта функция.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>error_callback</parameter></term>
    <listitem>
     <para>
      Если этот параметр задан, то Yar запустит эту функцию в случае возникновения ошибки.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>

  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>Yar_Concurrent_Client::loop</function></title>
   <programlisting role="php">
<![CDATA[
<?php
function callback($retval, $callinfo) {
     if ($callinfo == NULL) {
        echo "Так, все запросы запущены, но пока ни одного ответа\n";
     } else {
        echo "Это ответ от удалённого запроса. Имя метода", $callinfo["method"],
             ". Был зарегистрирован " , $callinfo["sequence"] , "\n";
        var_dump($retval);
     }
}

function error_callback($type, $error, $callinfo) {
    error_log($error);
}

Yar_Concurrent_Client::call("http://host/api/", "some_method", array("parameters"), "callback");

//если функция обратного вызова не задана, то будет использована определённая в цикле вызовов
Yar_Concurrent_Client::call("http://host/api/", "some_method", array("parameters"));

//этот сервер принимает упаковку JSON
Yar_Concurrent_Client::call("http://host/api/", "some_method", array("parameters"), "callback", NULL, array(YAR_OPT_PACKAGER => "json"));

//отдельно заданный тайм-аут
Yar_Concurrent_Client::call("http://host/api/", "some_method", array("parameters"), "callback", NULL, array(YAR_OPT_TIMEOUT=>1));

Yar_Concurrent_Client::loop("callback", "error_callback"); //запускаем запросы,
                                                           //параметр error_callback не обязателен
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Так, все запросы запущены, но пока ни одного ответа
Это ответ от удалённого запроса. Имя метода issome_method. Был зарегистрирован 4
string(11) "some_method"
Это ответ от удалённого запроса. Имя метода issome_method. Был зарегистрирован 1
string(11) "some_method"
Это ответ от удалённого запроса. Имя метода issome_method. Был зарегистрирован 2
string(11) "some_method"
Это ответ от удалённого запроса. Имя метода issome_method. Был зарегистрирован 3
string(11) "some_method"
]]>
   </screen>
  </example>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Yar_Concurrent_Client::call</methodname></member>
   <member><methodname>Yar_Concurrent_Client::reset</methodname></member>
   <member><methodname>Yar_Server::__construct</methodname></member>
   <member><methodname>Yar_Server::handle</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
