<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="memcache.addserver" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::addServer</refname>
  <refname>memcache_add_server</refname>
  <refpurpose>Добавляет сервер memcached в пул соединений</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::addServer</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>persistent</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>weight</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeoutms</parameter></methodparam>
  </methodsynopsis>
    <methodsynopsis>
   <type>bool</type><methodname>memcache_add_server</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>persistent</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>weight</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeoutms</parameter></methodparam>
  </methodsynopsis>

  <para>
   Метод <function>Memcache::addServer</function> добавляет сервер в пул соединений.
  </para>

  <para>
   В отличие от методов <function>Memcache::connect</function>
   и <function>Memcache::pconnect</function> при вызове этого метода сетевое соединение не устанавливается,
   пока не потребуется. Поэтому
   при добавлении большого количества серверов в пул производительность не снижается,
   поскольку, возможно, соединения не потребуются.
  </para>

  <para>
   Потребность в отказоустойчивости возникает на любом этапе в любом методе,
   и если при этом хотя бы один сервер из пула окажется доступен, пользователь не получит
   оповещения. Любой тип ошибки сокета или сервера Memcached, за исключением ошибки переполнения
   памяти, может включить протокол обеспечения отказоустойчивости. Стандартные клиентские ошибки
   наподобие добавления существующего ключа не вызовут такого поведения.
  </para>

  <note>
   <para>
    Метод добавили в модуль Memcache версии 2.0.0.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Параметр указывает на хост с запущенным сервисом memcached. Для параметра возможно установить
       значение наподобие <literal>unix:///path/to/memcached.sock</literal> для соединения с Unix-сокетом,
       но тогда для параметра <parameter>port</parameter> потребуется установить
       значение <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Параметр указывает порт, по которому доступен сервис memcached. Для соединения с Unix-сокетом
       потребуется установить для параметра значение <literal>0</literal>.
      </para>
      <para>
       Обратите внимание: значение параметра <parameter>port</parameter> по умолчанию равно значению директивы
       <link linkend="ini.memcache.default-port">memcache.default_port</link>.
       Поэтому при вызове метода рекомендуют указывать номер порта.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>persistent</parameter></term>
     <listitem>
      <para>
       Устанавливать ли постоянное соединение. Значение по умолчанию равно &true;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>weight</parameter></term>
     <listitem>
      <para>
       Необходимое количество созданных пакетов данных для этого сервера, что,
       в свою очередь, определяет вероятность выбора сервера. Вероятность
       рассчитывается относительно общего веса всех серверов.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Время ожидания в секундах для подключения к демону.
       Изменение значения по умолчанию в 1 секунду
       часто нивелирует преимущества кеширования на медленных соединениях.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retry_interval</parameter></term>
     <listitem>
      <para>
       Параметр управляет частотой проверки доступности отказавшего сервера, значение по умолчанию
       равно 15 секундам.
       Со значением "-1" попытки проверить доступность сервера
       не выполняются.
       Ни этот параметр, ни параметр <parameter>persistent</parameter>
       не оказывают никакого влияния,
       если модуль загружен динамически через функцию
       <function>dl</function>.
      </para>
      <para>
       Каждая провалившаяся структура соединения содержит своё значение
       времени ожидания, и, пока оно не превышено, структура пропускается, после чего
       попробует выбрать другой сервер для обслуживания запроса. После
       истечения времени ожидания соединение либо удачно переустанавливается, либо
       помечается провалившимся и ожидает еще столько секунуд,
       сколько указали в параметре <parameter>retry_interval</parameter>.
       Обычно эффект заключается в том, что каждый процесс веб-сервера
       ожидает секунд при обслуживании
       запроса, сколько указали в параметре <parameter>retry_interval</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       Параметр определяет, помечать ли сервер флагом "онлайн". Одновременная установка
       значения &false; для этого параметра и значения -1 для параметра <parameter>retry_interval</parameter>
       оставит отказавший сервер в пуле, чтобы не влиять на алгоритм распределения
       ключей.
       Запрос к этому серверу либо запустит механизм
       отказоустойчивости, либо
       сразу же прервётся с ошибкой, в зависимости от настройки
       директивы <parameter>memcache.allow_failover</parameter>. Значение по умолчанию равно &true; —
       сервер активен и готов принимать запросы.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>failure_callback</parameter></term>
     <listitem>
      <para>
       Пользовательская callback-функция, которая запустится
       при ошибке. Эта функция вызывается
       до запуска механизма отказоустойчивости. Функция принимает два
       параметра — имя хоста и порт отказавшего сервера.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeoutms</parameter></term>
     <listitem>
      <para>

      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
 <para>
  <example>
   <title>Пример добавления сервера в пул соединений методом <function>Memcache::addServer</function></title>
   <programlisting role="php">
<![CDATA[
<?php

/* Объектно-ориентированный API */
$memcache = new Memcache;
$memcache->addServer('memcache_host', 11211);
$memcache->addServer('memcache_host2', 11211);

/* Процедурный API */
$memcache_obj = memcache_connect('memcache_host', 11211);
memcache_add_server($memcache_obj, 'memcache_host2', 11211);

?>
]]>
    </programlisting>
   </example>
 </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    При пропуске параметра <parameter>port</parameter> метод извлекает значение ini-директивы PHP
    <link linkend="ini.memcache.default-port">memcache.default_port</link>.
    При изменении значения директивы в коде приложения поведение метода становится непредсказуемым. Поэтому лучше явно указывать порт при вызове метода.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::connect</function></member>
    <member><function>Memcache::pconnect</function></member>
    <member><function>Memcache::close</function></member>
    <member><function>Memcache::setServerParams</function></member>
    <member><function>Memcache::getServerStatus</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
