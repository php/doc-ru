<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b8758b0605e80c4e3610137b7502a6abeea5c69b Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->

<refentry xml:id="memcache.setserverparams" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::setServerParams</refname>
  <refpurpose>Изменяет параметры сервера и статус во время выполнения</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::setServerParams</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::setServerParams</function> изменяет параметры сервера во время выполнения.
   Вы также можете использовать функцию <function>memcache_set_server_params</function>.
  </para>

  <note>
   <para>
     Эта функция была добавлена в Memcache версии 2.1.0.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Указывает на хост, на котором memcached прослушивает соединения.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Указывает на порт, на котором memcached прослушивает соединения.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Значение в секундах, которое будет использоваться для подключения к домену.
       Подумайте дважды, прежде чем менять значение по умолчанию в 1 секунду -
       вы можете потерять все преимущества кеширования, если ваше соединение
       слишком медленное.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retry_interval</parameter></term>
     <listitem>
      <para>
       Управляет частотой проверки доступности отказавшего сервера, по умолчанию
       15 секунд.
       Если задать значение "-1", то попыток проверить доступность сервера
       предприниматься не будет.
       Ни этот параметр, ни параметр <parameter>persistent</parameter> не
       оказывают никакого влияния,
       если модуль загружен динамически через функцию
       <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       Определяет, должен ли сервер помечен флагом как "онлайн". Установка этого
       параметра в &false; и <parameter>retry_interval</parameter> в -1 позволит
       сохранить сервер в пуле, но не использовать его в алгоритме распределения
       ключей.
       Запрос к этому серверу либо запустит механизм обеспечения
       отказоустойчивости, либо
       сразу же прервётся с ошибкой, в зависимости от настройки
       <parameter>memcache.allow_failover</parameter>. По умолчанию равно &true;,
       что означает, что сервер активен и готов принимать запросы.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>failure_callback</parameter></term>
     <listitem>
      <para>
       Позволяет пользователю задать callback-функцию, которая запустится
       в случае какой-либо ошибки. Эта функция будет вызвана раньше, чем будет
       запущен механизм обеспечения отказоустойчивости. Функция принимает два
       параметра - имя хоста и порт отказавшего сервера.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>Memcache::setServerParams</function></title>
    <programlisting role="php">
<![CDATA[
<?php

function _callback_memcache_failure($host, $port) {
    print "неудачное подключение memcache - '$host:$port'";
}

/* объектно-ориентированное API */

$memcache = new Memcache;

// Добавить сервер в офлайн-режим
$memcache->addServer('memcache_host', 11211, false, 1, 1, -1, false);

// Перевести сервер обратно в онлайн
$memcache->setServerParams('memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

/* процедурное API */

$memcache_obj = memcache_connect('memcache_host', 11211);
memcache_set_server_params($memcache_obj, 'memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::addServer</function></member>
    <member><function>Memcache::getServerStatus</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
