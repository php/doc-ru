<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c1f37a6c270aadbbb3da56a3973ffd62197adf2b Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.preg-replace-callback" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_replace_callback</refname>
  <refpurpose>Выполняет поиск по регулярному выражению и заменяет совпадения callback-функцией</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type><type>null</type></type><methodname>preg_replace_callback</methodname>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>pattern</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Поведение функции во многом напоминает поведение функции
   <function>preg_replace</function>, за исключением передачи
   <parameter>callback</parameter>-функции вместо
   параметра <parameter>replacement</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Искомый шаблон: строка или массив строк.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Callback-функция для вызова и передачи
       массива совпадений, которые функция нашла в строке <parameter>subject</parameter>.
       Сигнатура callback-функции предусматривает возврат изменённой строки:
      </para>
      <para>
       <methodsynopsis>
        <type>string</type><methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>array</type><parameter>matches</parameter></methodparam>
       </methodsynopsis>
      </para>
      <para>
       При вызове функции <function>preg_replace_callback</function>
       <parameter>callback</parameter>-функцию часто вызывают однократно,
       поэтому для объявления обратного вызова внутри вызова функции <function>preg_replace_callback</function>
       объявляют <link linkend="functions.anonymous">анонимную функцию</link>.
       При таком способе организации кода информация о вызове собирается в одном месте
       и не загромождает текущее пространство имён
       названием callback-функции, которая не вызывается в другом месте.
      </para>
      <para>
       <example>
        <title>Пример вызова функции <function>preg_replace_callback</function> с анонимной callback-функцией</title>
        <programlisting role="php">
<![CDATA[
<?php

/* Фильтр командной строки в стиле Unix-систем
 * для преобразования заглавных букв в начале параграфа в строчные */
$fp = fopen("php://stdin", "r") or die("не удалось прочесть stdin");
while (!feof($fp)) {
    $line = fgets($fp);

    $line = preg_replace_callback(
        '|<p>\s*\w|',
        function ($matches) {
            return strtolower($matches[0]);
        },
        $line
    );

    echo $line;
}

fclose($fp);

?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       Строка или массив строк для поиска и замены.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Максимально возможное количество замен для каждого шаблона
       в каждой строке <parameter>subject</parameter>. По умолчанию значение
       равно <literal>-1</literal> (без ограничений).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       При вызове с этим параметром переменная заполняется количеством
       замен, которые выполнила функция.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Параметр <parameter>flags</parameter> принимает комбинацию флагов
       <constant>PREG_OFFSET_CAPTURE</constant>
       и <constant>PREG_UNMATCHED_AS_NULL</constant>, которые влияют
       на формат массива совпадений.
       Дополнительную информацию даёт описание функции <function>preg_match</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция <function>preg_replace_callback</function> возвращает массив,
   если в параметр <parameter>subject</parameter> передали массив,
   иначе возвращает строку. Функция возвращает значение &null;, если возникла ошибка.
  </para>
  <para>
   Функция возвращает новую строку, если нашла совпадения,
   иначе возвращает строку <parameter>subject</parameter> без изменений.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pcre.pattern.warning;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Добавили параметр <parameter>flags</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>preg_replace_callback</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Текст написали в 2002 году
// и требуется обновить даты на 2003 год
$text = "День смеха отмечали 01/04/2002\n";
$text.= "Последнее Рождество отмечали 24/12/2001\n";

// Callback-функция
function next_year($matches)
{
    // Стандартно: $matches[0] — полное вхождение шаблона,
    // $matches[1] — вхождение первой подмаски
    // в круглых скобках '(...)' и так далее...
  return $matches[1].($matches[2]+1);
}

echo preg_replace_callback(
    "|(\d{2}/\d{2}/)(\d{4})|",
    "next_year",
    $text,
);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
День смеха отмечали 01/04/2003
Последнее Рождество отмечали 24/12/2002
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Пример рекурсивной обработки BB-кода функцией <function>preg_replace_callback</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$input = "верх [indent] глубже [indent] ещё глубже [/indent] глубже [/indent] верх";

function parseTagsRecursive($input)
{

    $regex = '#\[indent]((?:[^[]|\[(?!/?indent])|(?R))+)\[/indent]#';

    if (is_array($input)) {
        $input = '<div style="margin-left: 10px">'.$input[1].'</div>';
    }

    return preg_replace_callback($regex, 'parseTagsRecursive', $input);
}

$output = parseTagsRecursive($input);

echo $output;

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">Регулярные PCRE-выражения</link></member>
    <member><function>preg_replace_callback_array</function></member>
    <member><function>preg_quote</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_last_error</function></member>
    <member><link linkend="functions.anonymous">Анонимные функции</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
