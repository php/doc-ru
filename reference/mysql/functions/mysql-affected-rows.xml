<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 65e697ff671608989432a6e6bf8ae8128b2be2c7 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xml:id="function.mysql-affected-rows" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_affected_rows</refname>
  <refpurpose>Возвращает число затронутых прошлой операцией рядов</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_affected_rows</function></member>
    <member><methodname>PDOStatement::rowCount</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mysql_affected_rows</methodname>
   <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Возвращает количество рядов, затронутых последним INSERT, UPDATE,
   REPLACE или DELETE запросом, связанным с дескриптором
   <parameter>link_identifier</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает количество изменённых записей в случае успешного выполнения, и -1
   в случае если последний запрос не удался.
  </para>
  <para>
   Если последний запрос был DELETE без указания WHERE и, соответственно,
   таблица была очищена, функция вернёт ноль во всех версиях MySQL
   до 4.1.2.
  </para>
  <para>
   При использовании UPDATE, MySQL не обновит колонки, уже содержащие новое
   значение. Вследствие этого, функция <function>mysql_affected_rows</function>
   не всегда возвращает количество рядов, подошедших под условия, только
   количество рядов, обновлённых запросом.
  </para>
  <para>
   Запрос REPLACE сначала удаляет запись с указанным первичным ключом,
   а потом вставляет новую. Данная функция возвращает количество
   удалённых записей вместе с количеством вставленных.
  </para>
  <para>
   В случае использования запросов типа "INSERT ... ON DUPLICATE KEY UPDATE", возвращаемое значение будет равно <literal>1</literal> в случае, если была произведена вставка, или <literal>2</literal> при обновлении существующего ряда.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>mysql_affected_rows</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}
mysql_select_db('mydb');

/* здесь функция вернёт корректное число удалённых записей */
mysql_query('DELETE FROM mytable WHERE id < 10');
printf("Удалено записей: %d\n", mysql_affected_rows());

/* если WHERE всегда возвращает false, то функция возвращает 0 */
mysql_query('DELETE FROM mytable WHERE 0');
printf("Удалено записей: %d\n", mysql_affected_rows());
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Удалено записей: 10
Удалено записей: 0
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Пример использования <function>mysql_affected_rows</function> с транзакциями</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}
mysql_select_db('mydb');

/* Обновляем ряды */
mysql_query("UPDATE mytable SET used=1 WHERE id < 10");
printf ("Обновлено записей: %d\n", mysql_affected_rows());
mysql_query("COMMIT");
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Обновлено записей: 10
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Транзакции</title>
   <para>
    При использовании транзакций
    <function>mysql_affected_rows</function> нужно вызывать
    после запросов INSERT, UPDATE, DELETE, но не после
    COMMIT.
   </para>
  </note>
  <note>
   <title>Запросы SELECT</title>
   <para>
    Чтобы получить количество рядов, возвращённых SELECT-запросом,
    используйте функцию <function>mysql_num_rows</function>.
   </para>
  </note>
  <note>
   <title>Каскадные внешние ключи</title>
   <para>
    <function>mysql_affected_rows</function> не подсчитывает ряды,
    неявно изменённые ограничениями ON DELETE CASCADE и/или
    ON UPDATE CASCADE.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_num_rows</function></member>
    <member><function>mysql_info</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
