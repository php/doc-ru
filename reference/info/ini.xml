<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ada1d79de35239334b68d0120b011530e31244ff Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Настройки PHP/Параметры конфигурации информации</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.assert.active">assert.active</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Удалено в PHP 8.0.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>
       До PHP 8.0.0 значение по умолчанию было <literal>"0"</literal>.
       Устарело с PHP 8.3.0
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>&removed.php.future;</entry>
     </row>
     <row>
      <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
      <entry>"30"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
      <entry>"-1"</entry>
      <entry>PHP_INI_PERDIR</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
      <entry>"64"</entry>
      <entry>PHP_INI_PERDIR</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
      <entry>1000</entry>
      <entry>PHP_INI_PERDIR</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Включение выполнение <function>assert</function>.
      <link linkend="ini.zend.assertions">zend.assertions</link> следует использовать
      вместо этого для управления поведением функции <function>assert</function>.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Завершение работы скрипта при провале проверки утверждений.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Вызов предупреждений PHP для каждой проваленной проверки утверждения.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Пользовательская функция, вызываемая при провале проверки утверждений.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>bool</type>
    </term>
    <listitem>
     &warn.feature.removed-8-0-0;
     <para>
      Используйте эту настройку функции <function>error_reporting</function>
      во время выполнения проверки утверждений. При включении настройки сообщения
      об ошибках во время проверки утверждений показываться не будут (неявный
      вызов error_reporting(0)). Если настройка выключена, ошибки будут выдаваться
      в соответствии с настройками <function>error_reporting</function>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Выбрасывает исключение <classname>AssertionError</classname> в случае неудачной проверки утверждения.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
     <parameter>enable_dl</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Директива позволяет включать и выключать динамическую подгрузку модулей
      PHP с помощью функции <function>dl</function>.
     </para>
     <para>
      Главной причиной, по которой требуется выключение динамической загрузки,
      является безопасность. С помощью динамической загрузки можно обойти все
      <link linkend="ini.open-basedir">open_basedir</link> ограничения. По
      умолчанию динамическая загрузка разрешена.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Эта директива задаёт максимальное время в секундах, в течение которого
      скрипт должен полностью загрузиться. Если этого не происходит, парсер
      завершает работу скрипта. Этот механизм помогает предотвратить зависание сервера
      из-за плохо написанного скрипта. По умолчанию на загрузку даётся
      <literal>30</literal> секунд. Если PHP запущен из
      <link linkend="features.commandline">командной строки</link>, это значение
      по умолчанию равно <literal>0</literal>.
     </para>
     <para>
      В системах, отличных от Windows, на максимальное время выполнения не влияют системные вызовы, потоковые
      операции и т.п. За дополнительной информацией обращайтесь к документации к
      функции <function>set_time_limit</function>.
     </para>
     <para>
      Веб-серверы обычно имеют свои настройки времени ожидания, по превышении которого сами
      завершают выполнение скрипта PHP. В Apache есть директива
      <literal>Timeout</literal>, в IIS есть функция CGI timeout. В обоих случаях
      по умолчанию установлено 300 секунд. Точные значения можно узнать из
      документации к веб-серверу.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Эта директива задаёт максимальное время в секундах, в течение которого скрипт
      должен разобрать все входные данные, переданные запросами вроде POST или GET.
      Это время измеряется от момента, когда PHP вызван на сервере до
      момента, когда скрипт начинает выполняться.
      Значение по умолчанию <literal>-1</literal>, что означает, что будет использоваться
      <link linkend="ini.max-execution-time">max_execution_time</link>. Если установить
      равным <literal>0</literal>, то ограничений по времени не будет.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Задаёт максимальную глубину вложенности
      <link linkend="language.variables.external">входных переменных</link> (то есть
      <varname>$_GET</varname>, <varname>$_POST</varname>.)
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Сколько <link linkend="language.variables.external">входных переменных</link>
      может быть принято в одном запросе (ограничение накладывается на каждую из
      глобальных переменных $_GET, $_POST и $_COOKIE отдельно).
      Использование этой директивы снижает
      вероятность сбоев в случае атак с использованием хеш-коллизий. Если входных
      переменных больше, чем задано директивой, выбрасывается предупреждение
      <constant>E_WARNING</constant>, а все последующие переменные в запросе
      игнорируются.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Включает или отключает сборщик циклических ссылок.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
