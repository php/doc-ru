<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: tmn -->
<!-- $Revision$ -->

<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;
 <note>
  <simpara>
   Данные имена констант можно использовать в файле &php.ini; но не вне PHP,
   как например в файле &httpd.conf;, где вместо них необходимо использовать значения их
   битовых масок.
  </simpara>
 </note>
 <table xml:id="errorfunc.constants.errorlevels">
  <title>Ошибки и протоколирование</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Значение</entry>
     <entry>Константа</entry>
     <entry>Описание</entry>
     <entry>Примечание</entry>
    </row>
   </thead>
   <tbody>
    <row xml:id="errorfunc.constants.errorlevels.e-error">
     <entry>1</entry>
     <entry>
      <constant>E_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Фатальные ошибки времени выполнения. Это неустранимые средствами самого
      скрипта ошибки, такие как ошибка распределения памяти и т.п.
      Выполнение скрипта в таком случае прекращается.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-warning">
     <entry>2</entry>
     <entry>
      <constant>E_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Предупреждения времени выполнения (не фатальные ошибки).
      Выполнение скрипта в таком случае не прекращается.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-parse">
     <entry>4</entry>
     <entry>
      <constant>E_PARSE</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Ошибки на этапе компиляции. Должны генерироваться
      только парсером.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-notice">
     <entry>8</entry>
     <entry>
      <constant>E_NOTICE</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Уведомления времени выполнения. Указывают на то, что во время выполнения скрипта
      произошло что-то, что может указывать на ошибку, хотя это может происходить
      и при обычном выполнении программы.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-core-error">
     <entry>16</entry>
     <entry>
      <constant>E_CORE_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Фатальные ошибки, которые происходят во время запуска РНР. Такие ошибки схожи с
      <constant>E_ERROR</constant>, за исключением того, что они генерируются ядром PHP.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-core-warning">
     <entry>32</entry>
     <entry>
      <constant>E_CORE_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Предупреждения (не фатальные ошибки), которые происходят во время начального запуска РНР.
      Такие предупреждения схожи с <constant>E_WARNING</constant>, за исключением того,
      что они генерируются ядром PHP.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-compile-error">
     <entry>64</entry>
     <entry>
      <constant>E_COMPILE_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Фатальные ошибки на этапе компиляции. Такие ошибки
      схожи с <constant>E_ERROR</constant>, за исключением того,
      что они генерируются скриптовым движком Zend.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-compile-warning">
     <entry>128</entry>
     <entry>
      <constant>E_COMPILE_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Предупреждения на этапе компиляции (не фатальные ошибки). Такие
      предупреждения схожи с <constant>E_WARNING</constant>, за
      исключением того, что они генерируются скриптовым движком Zend.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-error">
     <entry>256</entry>
     <entry>
      <constant>E_USER_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Сообщения об ошибках, сгенерированные пользователем. Такие
      ошибки схожи с <constant>E_ERROR</constant>, за исключением
      того, что они генерируются в коде скрипта средствами функции
      PHP <function>trigger_error</function>.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-warning">
     <entry>512</entry>
     <entry>
      <constant>E_USER_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Предупреждения, сгенерированные пользователем. Такие
      предупреждения схожи с <constant>E_WARNING</constant>,
      за исключением того, что они генерируются в коде скрипта
      средствами функции PHP <function>trigger_error</function>.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-notice">
     <entry>1024</entry>
     <entry>
      <constant>E_USER_NOTICE</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Уведомления, сгенерированные пользователем. Такие уведомления
      схожи с <constant>E_NOTICE</constant>, за исключением того,
      что они генерируются в коде скрипта, средствами
      функции PHP <function>trigger_error</function>.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-strict">
     <entry>2048</entry>
     <entry>
      <constant>E_STRICT</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Включаются для того, чтобы PHP предлагал изменения в коде, которые
      обеспечат лучшее взаимодействие и совместимость кода.
     </entry>
     <entry>Не включены в <constant>E_ALL</constant> вплоть до PHP 5.4.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-recoverable-error">
     <entry>4096</entry>
     <entry>
      <constant>E_RECOVERABLE_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Фатальные ошибки с возможностью обработки. Такие ошибки указывают, что,
      вероятно, возникла опасная ситуация, но при этом, скриптовый движок остаётся в стабильном состоянии.
      Если такая ошибка не обрабатывается функцией, определённой пользователем для обработки ошибок
      (смотрите <function>set_error_handler</function>), выполнение приложения прерывается, как происходит
      при ошибках <constant>E_ERROR</constant>.
     </entry>
     <entry>Начиная с PHP 5.2.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-deprecated-error">
     <entry>8192</entry>
     <entry>
      <constant>E_DEPRECATED</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Уведомления времени выполнения об использовании устаревших
      конструкций. Включаются для того, чтобы получать предупреждения
      о коде, который не будет работать в следующих версиях PHP.
     </entry>
     <entry>Начиная с PHP 5.3.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-deprecated">
     <entry>16384</entry>
     <entry>
      <constant>E_USER_DEPRECATED</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Уведомления времени выполнения об использовании устаревших
      конструкций, сгенерированные пользователем. Такие уведомления
      схожи с <constant>E_DEPRECATED</constant> за исключением того,
      что они генерируются в коде скрипта, с помощью функции PHP
      <function>trigger_error</function>.
     </entry>
     <entry>Начиная с PHP 5.3.0</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-all">
     <entry>32767</entry>
     <entry>
      <constant>E_ALL</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Все поддерживаемые ошибки и предупреждения, за исключением
      ошибок <constant>E_STRICT</constant> до PHP 5.4.0.
     </entry>
     <entry>
      32767 в PHP 5.4.x,
      30719 в PHP 5.3.x,
      6143 в PHP 5.2.x,
      2047 ранее
     </entry>
    </row>

   </tbody>
  </tgroup>
 </table>

 <para>
  Представленные выше значения (как числовые, так и символьные)
  используются для задания битовой маски, определяющей об ошибках
  какого типа будет даваться отчёт. Вы можете использовать
  <link linkend="language.operators.bitwise">побитовые операторы</link>,
  чтобы совмещать эти значения для указания определённых типов ошибок.
  Стоит отметить, что в &php.ini; допустимы только следующие
  операторы: '|', '~', '!', '^' и '&amp;'.
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
