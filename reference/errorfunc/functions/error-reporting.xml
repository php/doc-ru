<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9caac4c5cce859b4ae5d497972442fcfaa840d81 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.error-reporting" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>error_reporting</refname>
  <refpurpose>
   Задаёт, какие ошибки PHP попадут в отчёт
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>error_reporting</methodname>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>error_level</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>error_reporting</function> задаёт значение директивы
   <link linkend="ini.error-reporting">error_reporting</link> во время
   выполнения. В PHP есть много уровней ошибок. Используя эту функцию, можно
   задать уровень ошибок времени выполнения скрипта, которые попадут в отчёт.
   Если необязательный аргумент <parameter>error_level</parameter> не задан,
   <function>error_reporting</function> вернёт текущее значение уровня
   протоколирования ошибок.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>error_level</parameter></term>
     <listitem>
      <para>
       Новое значение уровня
       <link linkend="ini.error-reporting">error_reporting</link>. Это может
       быть битовая маска или именованные константы. При использовании
       именованных констант нужно будет следить за совместимостью с новыми
       версиями PHP. В новых версиях могут добавиться новые уровни ошибок,
       увеличиться диапазон целочисленных типов. Все это может привести к
       нестабильной работе при использовании старых целочисленных обозначений
       уровней ошибок.
      </para>
      <para>
       Доступные константы уровней ошибок и их описания приведены в разделе
       <link linkend="errorfunc.constants">Предопределённые константы</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает значение директивы <link linkend="ini.error-reporting">error_reporting</link>,
   которое в ней хранилось <emphasis>до того</emphasis>, как оно
   было изменено на значение параметра <parameter>error_level</parameter>.
  </para>
  <note>
   <simpara>
    Оператор <link linkend="language.operators.errorcontrol">управления ошибками</link>
    (<literal>@</literal>) изменяет значение параметра <parameter>error_level</parameter> во время обработки ошибки.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>error_level</parameter> теперь допускает значение null.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Примеры использования <function>error_reporting</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Выключение протоколирования ошибок
error_reporting(0);

// Включать в отчёт простые описания ошибок
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Включать в отчёт E_NOTICE сообщения (добавятся сообщения о
// непроинициализированных переменных или ошибках в именах переменных)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Добавлять сообщения обо всех ошибках, кроме E_NOTICE
error_reporting(E_ALL & ~E_NOTICE);

// Добавлять в отчёт все ошибки PHP
error_reporting(E_ALL);

// Добавлять в отчёт все ошибки PHP
error_reporting(-1);

// То же, что и error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <simpara>
    Если передать значение <literal>-1</literal>, будут отображаться все возможные
    ошибки, даже если в новых версиях PHP добавятся уровни или константы.
    Поведение эквивалентно передаче константы <constant>E_ALL</constant>.
   </simpara>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Директива <link linkend="ini.display-errors">display_errors</link></member>
    <member>Директива <link linkend="ini.html-errors">html_errors</link></member>
    <member>Директива <link linkend="ini.xmlrpc-errors">xmlrpc_errors</link></member>
    <member>Оператор <link linkend="language.operators.errorcontrol">управления ошибками</link></member>
    <member>Функция <function>ini_set</function> — Устанавливает значение настройи конфигурации</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
