<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7f569e1f175adf1fbd0e462eba8d6bc82214c939 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.oci-set-prefetch">
 <refnamediv>
  <refname>oci_set_prefetch</refname>
  <refpurpose>Устанавливает количество строк, которые будут автоматически
   выбраны в буфер</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_set_prefetch</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>rows</parameter></methodparam>
  </methodsynopsis>
  <para>
   Устанавливает количество строк, которые будут выбраны в буфер клиентскими
   библиотеками Oracle сразу после удачного вызова <function>oci_execute</function>
   и для каждого последующего внутреннего запроса данных к базе. Производительность
   может быть значительно увеличена для запросов, возвращающих большое
   количество строк, с помощью установки значения предварительной
   выборки больше значения по умолчанию
   <link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link>.
  </para>
  <para>
   Предварительная выборка - это эффективный механизм Oracle,
   позволяющий возвращать больше одной строки результата из базы данных
   за каждый сетевой запрос. Это даёт более рациональное использование
   сети и процессора. Буферизация строк происходит внутри OCI8, поэтому
   поведение функций выборки OCI8 никак не зависит от размера
   предварительной выборки. Например, <function>oci_fetch_row</function>
   всегда возвращает одну строку. Буфер предварительной выборки резервируется
   отдельно на каждый запрос и не используется второй раз в повторно
   запущенных запросах или в других соединениях.
  </para>
  <para>
   Перед вызовом <function>oci_execute</function> вызовите
   <function>oci_set_prefetch</function>.
  </para>
  <para>
   Смысл настройки размера предварительной выборки состоит в подборе
   удобного значения для передачи в сети и обработки в базе данных.
   Для запросов, возвращающих очень большое количество строк, общая
   производительность системы может быть лучше, если строки будут возвращаться
   в несколько приёмов (т.е. установить размер предварительной выборки
   меньше количества строк). Это позволит базе данных обрабатывать запросы
   других пользователей в течение обработки PHP-скриптом текущего
   результата запроса.
  </para>
  <para>
   Предварительная выборка запросов появилась в Oracle 8<emphasis>i</emphasis>. Предварительная
   выборка REF CURSOR появилась в Oracle 11<emphasis>g</emphasis>R2 и может быть применена
   в случае, если PHP слинкован с клиентскими библиотеками Oracle 11<emphasis>g</emphasis>R2 и старше.
   Предварительная выборка вложенных курсоров была добавлена в Oracle 11<emphasis>g</emphasis>R2 и требует
   наличия версии 11<emphasis>g</emphasis>R2 и старше как для клиентских библиотек Oracle, так и для
   используемой базы данных.
  </para>
  <para>
   Предварительная выборка не поддерживается, если запросы содержат
   LONG или LOB столбцы. Значение предварительной выборки игнорируется и,
   во всех ситуациях не поддерживающих предварительную выборку, будет
   использована построчная выборка.
  </para>
  <para>
   При использовании Oracle Database 12<emphasis>c</emphasis>,
   предварительная выборка заданная PHP может быть изменена конфигурационным файлом
   <literal>oraaccess.xml</literal> клиента Oracle. Обратитесь
   к документации Oracle за дополнительной информацией.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      &oci.arg.statement.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>rows</parameter></term>
     <listitem>
      <para>
       Количество строк предварительной выборки, &gt;= 0
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL OCI8 1.4</entry>
       <entry>
        До этой версии <parameter>rows</parameter> должен был быть &gt;= 1.
       </entry>
      </row>
      <row>
       <entry>PECL OCI8 1.3.4</entry>
       <entry>
        До этой версии предварительная выборка была ограничена к меньшему
        из значений <parameter>rows</parameter> строк и 1024
        * <parameter>rows</parameter> байт. Теперь ограничение по размеру
        байт снято.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Смена значения предварительной выборки по умолчанию для запроса</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');

$stid = oci_parse($conn, 'SELECT * FROM myverybigtable');
oci_set_prefetch($stid, 300);  // Устанавливаем перед вызовом oci_execute()
oci_execute($stid);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Смена значения предварительной выборки по умолчанию для выборки REF CURSOR</title>
    <programlisting role="php">
<![CDATA[
<?php
/*
  Создайте хранимую процедуру PL/SQL следующим образом:

  CREATE OR REPLACE PROCEDURE myproc(p1 OUT SYS_REFCURSOR) AS
  BEGIN
    OPEN p1 FOR SELECT * FROM all_objects WHERE ROWNUM < 5000;
  END;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');

$stid = oci_parse($conn, 'BEGIN myproc(:rc); END;');
$refcur = oci_new_cursor($conn);
oci_bind_by_name($stid, ':rc', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

// Меняем размер предварительной выборки перед запуском курсора.
// Предварительная выборка REF CURSOR работает в случае линковки PHP
// с клиентскими библиотеками Oracle 11gR2 и старше
oci_set_prefetch($refcur, 200);
oci_execute($refcur);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($refcur, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($refcur);
oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Если PHP OCI8 производит выборку из REF CURSOR, а затем передаёт
   REF CURSOR обратно в другую PL/SQL-процедуру  для дальнейшей обработки,
   необходимо установить размер предварительной выборки REF CURSOR в
   <constant>0</constant>, чтобы избежать "потери" рядов из результата.
   Значение предварительной выборки - это количество "лишних" рядов, полученных
   каждым внутренним запросом OCI8 к базе данных, поэтому установка его
   в <constant>0</constant> означает выборку только одного ряда за один раз.
   <example>
    <title>Установка значения предварительной выборки при передаче REF CURSOR обратно в Oracle</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/orcl');

// получение REF CURSOR
$stid = oci_parse($conn, 'BEGIN myproc(:rc_out); END;');
$refcur = oci_new_cursor($conn);
oci_bind_by_name($stid, ':rc_out', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

// Отображаем два ряда, но больше не предвыбираем других рядов, иначе
// эти ряды не будут переданы обратно в  myproc_use_rc().
// Нулевое значение предварительной выборки было разрешено в версии PHP 5.3.2 и PECL OCI8 1.4
oci_set_prefetch($refcur, 0);
oci_execute($refcur);
$row = oci_fetch_array($refcur);
var_dump($row);
$row = oci_fetch_array($refcur);
var_dump($row);

// передаём REF CURSOR в myproc_use_rc() для дальнейшей обработки результата
$stid = oci_parse($conn, 'begin myproc_use_rc(:rc_in); end;');
oci_bind_by_name($stid, ':rc_in', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     Директива <link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
