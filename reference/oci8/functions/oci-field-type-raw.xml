<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ed6de1ae20ce16c0c7be0b3fef282b6065bebfac Maintainer: bfl Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->
<refentry xml:id="function.oci-field-type-raw" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_field_type_raw</refname>
  <refpurpose>Возвращает исходный тип поля Oracle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>oci_field_type_raw</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>column</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает тип "SQLT" Oracle поля <parameter>column</parameter>.
  </para>
  <para>
   Если вы хотите получить тип поля, то
   <function>oci_field_type</function> подойдёт вам больше.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Идентификатор допустимого OCI запроса.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>column</parameter></term>
     <listitem>
      <para>
       Может быть номером поля (нумерация начинается с 1) или именем.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает исходный тип Oracle в виде числа&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>oci_field_type_raw</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Создать таблицу:
//   CREATE TABLE mytab (number_col NUMBER, varchar2_col varchar2(1), clob_col CLOB, date_col DATE);

$conn = oci_connect("hr", "hrpwd", "localhost/XE");
if (!$conn) {
    $m = oci_error();
    trigger_error(htmlentities($m['message']), E_USER_ERROR);
}

$stid = oci_parse($conn, 'select * from mytab');
oci_execute($stid, OCI_DESCRIBE_ONLY);  // используйте OCI_DESCRIBE_ONLY, если не получаете данных
$n = oci_num_fields($stid);
for ($i = 1; $i <= $n; ++$i) {
    echo oci_field_name($stid, $i) . " - исходный тип: " . oci_field_type_raw($stid, $i) . "<br>\n";
}

// Выведет:
//    NUMBER_COL - исходный тип: 2
//    VARCHAR2_COL - исходный тип: 1
//    CLOB_COL - исходный тип: 112
//    DATE_COL - исходный тип: 12

oci_free_statement($stid);
oci_close($conn);

?>]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    В версиях PHP ниже 5.0.0 эта функция называлась
    <function>ocicolumntyperaw</function>.
    В PHP 5.0.0 и выше <function>ocicolumntyperaw</function> является
    алиасом <function>oci_field_type_raw</function>, поэтому вы можете
    продолжать использовать это имя, однако это не рекомендуется.
   </para>
  </note>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
