<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a714378ed87cdbdbde3b10ded183e8df7b243cb4 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<chapter xml:id="mysqli.persistconns" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

 <title>Модуль mysqli и постоянные соединения</title>

 <para>
  Идея постоянных подключений состоит в том, чтобы соединение между клиентским процессом
  и базой данных можно было использовать повторно, особенно когда требуется
  создавать и закрывать соединения множество раз. Это бы позволило снизить
  накладные расходы на создание новых подключений каждый раз, когда они требуются,
  за счёт использования существующих кешированных подключений, свободных для
  повторного использования.
 </para>

 <para>
  В отличие от модуля mysql, в mysqli нет отдельной функции для создания
  постоянных соединений. Чтобы открыть постоянное соединение, при создании
  подключения к имени хоста нужно добавить префикс <literal>p:</literal>.
 </para>

 <para>
  При использовании постоянных соединений можно столкнуться с проблемой, которая
  заключается в том, что клиенты могут оставлять такие подключения в
  непредсказуемом состоянии. Например, клиент ставит блокировку
  на таблицу, а затем аварийно завершает работу. То есть блокировка снята не
  будет. Новый клиентский процесс, использующий это подключение повторно, получит
  его <quote>как есть</quote>, и вынужден будет провести какую-то очистку
  подключения, прежде чем начать его использовать. Соответственно, в задачи
  программиста входит ещё и проверка подобных ситуаций и внедрение кода,
  осуществляющего такую очистку.
 </para>

 <para>
  Тем не менее, в <literal>mysqli</literal> эта проблема решена. В модуле
  есть встроенный функционал, осуществляющий очистку соединений и
  переводящий их в состояние пригодное для использования. Код очистки,
  реализованный в <literal>mysqli</literal> включает следующие операции:
 </para>

 <itemizedlist>

  <listitem>
   <para>
    Откат активных транзакций
   </para>
  </listitem>

  <listitem>
   <para>
    Закрытие и удаление временных таблиц
   </para>
  </listitem>

  <listitem>
   <para>
    Снятие блокировки с таблиц
   </para>
  </listitem>

  <listitem>
   <para>
    Сброс переменных сессии
   </para>
  </listitem>

  <listitem>
   <para>
    Закрытие подготовленных запросов (всегда происходит в PHP)
   </para>
  </listitem>

  <listitem>
   <para>
    Закрытие обработчиков
   </para>
  </listitem>

  <listitem>
   <para>
    Снятие блокировок, установленных функцией <function>GET_LOCK</function>
   </para>
  </listitem>

 </itemizedlist>

 <para>
  Это позволяет быть уверенным в том, что возвращённые из пула соединения
  готовы к использованию в клиентских процессах.
 </para>

 <para>
  Модуль <literal>mysqli</literal> делает очистку соединений автоматически
  путём вызова C-API функции <literal>mysql_change_user()</literal>.
 </para>

 <para>
  Автоматическая очистка имеет свои достоинства и недостатки. Как плюс,
  программисту больше не надо заботиться об очистке соединения, все делается
  автоматически. Однако, это не лучшим образом влияет на производительность,
  скрипт <emphasis>потенциально</emphasis> может работать медленней, так как
  автоматическая чистка запускается каждый раз, когда соединение извлекается
  из пула.
 </para>

 <para>
  Есть возможность отключить автоматическую очистку соединений, если скомпилировать
  PHP с директивой <constant>MYSQLI_NO_CHANGE_USER_ON_PCONNECT</constant>.
 </para>

 <note>
  <para>
   Постоянные соединения поддерживаются модулем <literal>mysqli</literal>
   как при работе с родным MySQL-драйвером, так и при работе с клиентской
   библиотекой MySQL.
  </para>
 </note>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
