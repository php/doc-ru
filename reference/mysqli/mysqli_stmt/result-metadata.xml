<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7e5d0d1bb69180c9de1992edf9613215c975fa57 Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="mysqli-stmt.result-metadata" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_stmt::result_metadata</refname>
  <refname>mysqli_stmt_result_metadata</refname>
  <refpurpose>
   Возвращает метаданные результирующей таблицы подготавливаемого запроса
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli_stmt::result_metadata</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli_stmt_result_metadata</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>
  <para>
   Если запрос, переданный в <function>mysqli_prepare</function>, генерирует
   результирующую таблицу, <function>mysqli_stmt_result_metadata</function>
   возвращает объект, с помощью которого можно получить описание этого
   результирующего набора. В частности, можно получить количество полей и
   описание каждого отдельного поля.
  </para>
  <note>
   <para>
    Полученный объектный указатель можно передавать в качестве аргумента в
    функции обработки метаданных результирующих таблиц, как например:
    <itemizedlist>
     <listitem><para><function>mysqli_num_fields</function></para></listitem>
     <listitem><para><function>mysqli_fetch_field</function></para></listitem>
     <listitem><para><function>mysqli_fetch_field_direct</function></para></listitem>
     <listitem><para><function>mysqli_fetch_fields</function></para></listitem>
     <listitem><para><function>mysqli_field_count</function></para></listitem>
     <listitem><para><function>mysqli_field_seek</function></para></listitem>
     <listitem><para><function>mysqli_field_tell</function></para></listitem>
     <listitem><para><function>mysqli_free_result</function></para></listitem>
    </itemizedlist>
   </para>
  </note>
  <para>
   После завершения работы с этим объектом, занимаемую им память необходимо
   освободить. Сделать это можно, передав объектный указатель в функцию
   <function>mysqli_free_result</function>.
  </para>
  <note>
   <para>
    Результирующий набор, возвращаемый из
    <function>mysqli_stmt_result_metadata</function>, содержит только метаданные.
    В нем не будет строк выборки. Результаты запроса можно получить с помощью
    функции <function>mysqli_stmt_fetch</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.stmt.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает объект или &false; случае ошибки.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "test");

$mysqli->query("DROP TABLE IF EXISTS friends");
$mysqli->query("CREATE TABLE friends (id int, name varchar(20))");

$mysqli->query("INSERT INTO friends VALUES (1,'Hartmut'), (2, 'Ulf')");

$stmt = $mysqli->prepare("SELECT id, name FROM friends");
$stmt->execute();

/* получаем результирующий набор метаданных */
$result = $stmt->result_metadata();

/* извлекаем информацию о столбце из метаданных */
$field = $result->fetch_field();

printf("Имя столбца: %s\n", $field->name);

/* закрываем результирующий набор */
$result->close();

/* закрываем подключение */
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "test");

mysqli_query($link, "DROP TABLE IF EXISTS friends");
mysqli_query($link, "CREATE TABLE friends (id int, name varchar(20))");

mysqli_query($link, "INSERT INTO friends VALUES (1,'Hartmut'), (2, 'Ulf')");

$stmt = mysqli_prepare($link, "SELECT id, name FROM friends");
mysqli_stmt_execute($stmt);

/* получаем результирующий набор метаданных */
$result = mysqli_stmt_result_metadata($stmt);

/* извлекаем информацию о столбце из метаданных */
$field = mysqli_fetch_field($result);

printf("Имя столбца: %s\n", $field->name);

/* закрываем результирующий набор */
mysqli_free_result($result);

/* закрываем подключение */
mysqli_close($link);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_free_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
