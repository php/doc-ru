<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 22eb6b0686ff2e259687cd7927e0cad1c4cf2eb6 Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="mysqli.multi-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::multi_query</refname>
  <refname>mysqli_multi_query</refname>
  <refpurpose>Выполняет один или несколько запросов к базе данных</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli::multi_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type>bool</type><methodname>mysqli_multi_query</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   Запускает на выполнение один или несколько запросов, перечисленных через
   точку с запятой.
  </para>
  <para>
   Запросы отправляются асинхронно за один вызов базы данных, но база данных обрабатывает их последовательно.
   <methodname>mysqli_multi_query</methodname> ожидает завершения первого запроса, прежде чем вернуть управление PHP.
   Затем сервер MySQL обработает следующий запрос в последовательности.
   Как только следующий результат будет готов, MySQL будет ждать следующего выполнения <function>mysqli_next_result</function> из PHP.
  </para>
  <para>
   Для обработки нескольких запросов рекомендуется использовать <link linkend="control-structures.do.while">do-while</link>.
   Соединение будет занято до тех пор, пока все запросы не будут завершены и их результаты не будут загружены в PHP.
   Никакой другой оператор не может быть выдан в том же соединении, пока не будут обработаны все запросы.
   Чтобы перейти к следующему запросу в последовательности, используйте <function>mysqli_next_result</function>.
   Если следующий результат ещё не готов, mysqli будет ждать ответа от сервера MySQL.
   Чтобы проверить, есть ли ещё результаты, используйте <function>mysqli_more_results</function>.
  </para>
  <para>
   Для запросов, которые производят набор результатов, таких как
   <literal>SELECT, SHOW, DESCRIBE</literal> или
   <literal>EXPLAIN</literal>, <function>mysqli_use_result</function> или <function>mysqli_store_result</function>
   может использоваться для получения набора результатов.
   Для запросов, которые не производят набор результатов, те же функции могут использоваться для получения информации,
   такой как количество затронутых строк.
  </para>
  <tip>
   <para>
    Выполнение запросов <literal>CALL</literal> для хранимых процедур может дать несколько наборов результатов.
    Если хранимая процедура содержит запросы <literal>SELECT</literal>,
    наборы результатов возвращаются в том порядке, в котором они создаются при выполнении процедуры.
    В общем, вызывающая функция не может знать, сколько наборов результатов вернёт процедура,
    и должна быть готова получить несколько результатов.
    Конечный результат процедуры - это результат статуса, который не включает набор результатов.
    Статус показывает, была ли процедура успешной или произошла ошибка.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       Строка, содержащая запросы, которые нужно выполнить.
       Несколько запросов следует разделять точкой с запятой.
      </para>
      &mysqli.sqlinjection.warning;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &false;, если первое выражение вызвало ошибку. Чтобы получить доступ
   к ошибкам остальных подзапросов, нужно сначала вызвать функцию
   <function>mysqli_next_result</function>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <methodname>mysqli::multi_query</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT CURRENT_USER();";
$query .= "SELECT Name FROM City ORDER BY ID LIMIT 20, 5";

/* выполнение нескольких запросов */
$mysqli->multi_query($query);
do {
    /* сохранить набор результатов в PHP */
    if ($result = $mysqli->store_result()) {
        while ($row = $result->fetch_row()) {
            printf("%s\n", $row[0]);
        }
    }
    /* вывести разделитель */
    if ($mysqli->more_results()) {
        printf("-----------------\n");
    }
} while ($mysqli->next_result());
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT CURRENT_USER();";
$query .= "SELECT Name FROM City ORDER BY ID LIMIT 20, 5";

/* выполнение нескольких запросов */
mysqli_multi_query($link, $query);
do {
    /* сохранить набор результатов в PHP */
    if ($result = mysqli_store_result($link)) {
        while ($row = mysqli_fetch_row($result)) {
            printf("%s\n", $row[0]);
        }
    }
    /* вывести разделитель */
    if (mysqli_more_results($link)) {
        printf("-----------------\n");
    }
} while (mysqli_next_result($link));
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
my_user@localhost
-----------------
Amersfoort
Maastricht
Dordrecht
Leiden
Haarlemmermeer
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_use_result</function></member>
    <member><function>mysqli_store_result</function></member>
    <member><function>mysqli_next_result</function></member>
    <member><function>mysqli_more_results</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
