<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c44475e1fafcbee203ed4935a6d5d7a01379fcdc Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.define" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>define</refname>
  <refpurpose>Определяет именованную константу</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>define</methodname>
   <methodparam><type>string</type><parameter>constant_name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_insensitive</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Определяет именованную константу во время выполнения.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>constant_name</parameter></term>
     <listitem>
      <para>
       Имя константы.
      </para>
      <note>
       <para>
        Возможно определить константы с помощью функции
        <function>define</function> зарезервированными или
        даже некорректными именами, значения которых могут быть (только) получены
        через функцию
        <function>constant</function>. Однако, делать это не рекомендуется.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Значение константы. В PHP 5 <parameter>value</parameter> должно быть
       скалярным значением (<type>int</type>, <type>float</type>,
       <type>string</type>, <type>bool</type> или &null;).
       В PHP 7 также возможно использовать тип <type>array</type>.
      </para>
      <warning>
       <para>
        Хотя возможно определить константы с типом <type>resource</type>, не
        рекомендуется это делать, поскольку может привести к
        непредсказуемому поведению.
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_insensitive</parameter></term>
     <listitem>
      <para>
       Если параметр установлен как &true;, то константа будет определена
       без учёта регистра. По умолчанию константа чувствительна к регистру, то
       есть <literal>CONSTANT</literal> и <literal>Constant</literal>
       представляют разные значения.
      </para>
      <warning>
       <simpara>
        Начиная с PHP 7.3.0, определение нечувствительных к регистру констант
        объявлено устаревшим.
       </simpara>
      </warning>
      <note>
       <para>
        Нечувствительные к регистру константы хранятся в нижнем регистре.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.3.0</entry>
       <entry>
        Параметр <parameter>case_insensitive</parameter> объявлен устаревшим и будет удалён в версии 8.0.0.
       </entry>
      </row>
      <row>
       <entry>7.0.0</entry>
       <entry>
        Допустимы значения типа <type>array</type>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Определение констант</title>
    <programlisting role="php">
<![CDATA[
<?php
define("CONSTANT", "Hello world.");
echo CONSTANT; // выводит "Hello world."
echo Constant; // выводит "Constant" и выдаёт уведомление.

define("GREETING", "Hello you.", true);
echo GREETING; // выводит "Hello you."
echo Greeting; // выводит "Hello you."

// Начиная с PHP 7
define('ANIMALS', array(
    'собака',
    'кошка',
    'птица'
));
echo ANIMALS[1]; // выводит "кошка"

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Определение констант зарезервированными именами</title>
    <para>
     Этот пример демонстрирует <emphasis>возможность</emphasis> определения
     константы с тем же именем, что и
     <link linkend="language.constants.predefined">магическая константа</link>.
     Поскольку это, очевидно, сбивающее с толку поведение, не рекомендуется делать
     это на практике.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(defined('__LINE__'));
var_dump(define('__LINE__', 'test'));
var_dump(constant('__LINE__'));
var_dump(__LINE__);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(false)
bool(true)
string(4) "test"
int(5)
]]>
    </screen>
     </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>defined</function></member>
    <member><function>constant</function></member>
    <member>Смотрите раздел <link linkend="language.constants">Константы</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
