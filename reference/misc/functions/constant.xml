<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8669246db504c414a0c0224c359929435ea922be Maintainer: aur Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->
<refentry xml:id="function.constant" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>constant</refname>
  <refpurpose>Возвращает значение константы</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>constant</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Возвращает значение константы, указанной в параметре
   <parameter>name</parameter>.
  </simpara>
  <simpara>
   Функция <function>constant</function> полезна, если вам необходимо
   получить значение константы, но неизвестно её имя. Например, если оно хранится
   в переменной или возвращается функцией.
  </simpara>
  <simpara>
   Данная функция также работает с <link
   linkend="language.oop5.constants">константами классов</link>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Имя константы.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает значение константы или &null;, если константа не
   определена.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Если константа не определена, генерируется ошибка
   уровня <constant>E_WARNING</constant>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример функции <function>constant</function></title>
    <programlisting role="php">
<![CDATA[
<?php

define("MAXSIZE", 100);

echo MAXSIZE;
echo constant("MAXSIZE"); // результат аналогичен предыдущему выводу


interface bar {
    const test = 'foobar!';
}

class foo {
    const test = 'foobar!';
}

$const = 'test';

var_dump(constant('bar::'. $const)); // string(7) "foobar!"
var_dump(constant('foo::'. $const)); // string(7) "foobar!"

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>define</function></member>
    <member><function>defined</function></member>
    <member>Смотрите раздел <link linkend="language.constants">Константы</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
