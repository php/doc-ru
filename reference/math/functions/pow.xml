<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fc174e8d6162091550edde46159917ee7e5a2e73 Maintainer: das Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pow" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pow</refname>
  <refpurpose>Возводит в степень</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
   <type class="union"><type>int</type><type>float</type><type>object</type></type><methodname>pow</methodname>
   <methodparam><type>mixed</type><parameter>num</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>exponent</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает число <parameter>num</parameter> в степени <parameter>exponent</parameter>.
  </para>
  <note>
   <para>
    Допустимо указывать оператор
    <link linkend="language.operators.arithmetic">**</link> вместо вызова функции.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>num</parameter></term>
     <listitem>
      <para>
       Основание.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>exponent</parameter></term>
     <listitem>
      <para>
       Показатель степени.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает основание <parameter>num</parameter> в степени <parameter>exponent</parameter>.
   Если оба аргумента — неотрицательные целые и результат можно представить как целое число,
   то функция возвращает целое число (<type>int</type>). В противном случае
   функция возвращает число с плавающей точкой (<type>float</type>).
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Примеры использования функции <function>pow</function></title>
    <programlisting role="php">
<![CDATA[
<?php

var_dump(pow(2, 8)); // int(256)
echo pow(-1, 20); // 1
echo pow(0, 0); // 1
echo pow(10, -1); // 0.1

echo pow(-1, 5.5); // NAN

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Функция преобразует входные значения, даже нескалярные, в числовые,
    что иногда даёт <emphasis>странный</emphasis> результат.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exp</function></member>
    <member><function>sqrt</function></member>
    <member><function>bcpow</function></member>
    <member><function>gmp_pow</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
