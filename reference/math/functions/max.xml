<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 26a93ee76caae16995bc663220131d685f3b5c0b Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.max" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>max</refname>
  <refpurpose>Возвращает наибольшее значение</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>max</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <simpara>Альтернативная сигнатура (не поддерживается с именованными аргументами):</simpara>
  <methodsynopsis>
   <type>mixed</type><methodname>max</methodname>
   <methodparam><type>array</type><parameter>value_array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Если первый и единственный параметр - массив, то <function>max</function> возвратит
   наибольшее значение из этого массива. Если переданы хотя бы два параметра,
   <function>max</function> вернёт наибольший из них.
  </para>
  <note>
   <para>
    Значения разных типов будут сравниваться в соответствии со <link
    linkend="language.operators.comparison">стандартными правилами сравнения</link>.
    К примеру, нечисловая строка (<type>string</type>) будет сравниваться с целым числом
    (<type>int</type>) так, как будто это <literal>0</literal>, а множество
    нечисловых строк (<type>string</type>) будут сравниваться алфавитно-цифровым
    порядком. Выбранное значение будет возвращено без конвертации типа.
   </para>
  </note>
  <caution>
   <simpara>
    Будьте осторожны при передаче аргументов разных типов, поскольку результат
    <function>max</function> может вас удивить.
   </simpara>
  </caution>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Любое поддающееся <link linkend="language.operators.comparison">сравнению</link>
       значение.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Любые поддающиеся <link linkend="language.operators.comparison">сравнению</link>
       значения.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value_array</parameter></term>
     <listitem>
      <para>
       Массив, содержащий значения.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>max</function> вернёт значение "наибольшего" из элементов массива, в
   соответствии со стандартными правилами сравнения. Если несколько разнотипных
   значений посчитаются идентичными  (например <literal>0</literal> и
   <literal>'abc'</literal>), функция вернёт первое из них.
  </para>
  <para>
   Если передан один пустой массив, то функция вернёт &false; и вызовет ошибку
   уровня <constant>E_WARNING</constant>.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>max</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo max(1, 3, 5, 6, 7);  // 7
echo max(array(2, 4, 5)); // 5

// 'hello' будет представлено как числое значение значение 0.
// Оба параметра имеют одинаковое значение, поэтому результат
// определяется порядком, в котором параметры переданы
echo max(0, 'hello');     // 0
echo max('hello', 0);     // hello

// Здесь сравниваются -1 < 0, так что 'hello' больше
echo max('hello', -1);    // hello

// В данном случае 0 больше, чем -1, поэтому результат равен 'hello'.
echo max(-1, 'hello');    // hello

// При сравнении массивов, разной длины - max вернёт более длинный
$val = max(array(2, 2, 2), array(1, 1, 1, 1)); // array(1, 1, 1, 1)

// При сравнении массивов одинаковой длины - max будет сравнивать их поэлементно
// слева направо, в данном примере 2 == 2, но 4 < 5
$val = max(array(2, 4, 8), array(2, 5, 1)); // array(2, 5, 1)

// Если передан массив и не массив, в результате всегда будет возвращён массив
$val = max('string', array(2, 5, 7), 42);   // array(2, 5, 7)

// Если один из аргументов NULL или булево значение, то сравнение с другими
// значениями будет происходить по правилу FALSE < TRUE, вне зависимости от того
// какого типа параметры переданы.
// В примере ниже, -10 трактуется как TRUE
$val = max(-10, FALSE); // -10

// 0 всегда трактуется как FALSE, значит он "меньше чем" TRUE
$val = max(0, TRUE); // TRUE
?>
]]>
    </programlisting>
    </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>min</function></member>
    <member><function>count</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
