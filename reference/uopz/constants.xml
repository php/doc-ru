<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->

<appendix xml:id="uopz.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  Следующие опкоды определяются как константы с помощью uopz до версии 5.0.0:
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.zend-exit">
    <term>
     <constant>ZEND_EXIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается с помощью exit() and die(), не принимает аргументов. Возвращает логический &true; для выхода, &false; для продолжения
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-new">
    <term>
     <constant>ZEND_NEW</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается конструкцией объекта, получает класс создаваемого объекта в качестве единственного аргумента
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-throw">
    <term>
     <constant>ZEND_THROW</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается конструкцией throw, получает класс выбрасываемого исключения в качестве единственного аргумента
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-fetch-class">
    <term>
     <constant>ZEND_FETCH_CLASS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается во время композиции, получает имя получаемого в качестве единственного аргумента
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-add-trait">
    <term>
     <constant>ZEND_ADD_TRAIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается во время композиции, получает класс добавляемого трейта первым аргументом, и имя трейта в качестве второго аргумента
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-add-interface">
    <term>
     <constant>ZEND_ADD_INTERFACE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается во время композиции, получает класс добавляемого интерфейса первым аргументом, и имя интерфейса в качестве второго аргумента
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-instanceof">
    <term>
     <constant>ZEND_INSTANCEOF</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вызывается оператором instanceof, получает проверяемый объект первым аргументом и имя класса, который должен быть в объекте в качестве второго аргумента
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  Следующие константы управляют поведением виртуальной машины после вызова обработчика пользователя, будьте предельно осторожны!
  Эти константы удалены с uopz версии 5.0.0.
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.zend-user-opcode-continue">
    <term>
     <constant>ZEND_USER_OPCODE_CONTINUE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Продвинуть 1 опкод и продолжить
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-enter">
    <term>
     <constant>ZEND_USER_OPCODE_ENTER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Ввести новый new op_array без рекурсии
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-leave">
    <term>
     <constant>ZEND_USER_OPCODE_LEAVE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Вернуть вызывающий op_array внутри того же исполнителя
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-dispatch">
    <term>
     <constant>ZEND_USER_OPCODE_DISPATCH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отправить в исходный обработчик опкода
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-dispatch-to">
    <term>
     <constant>ZEND_USER_OPCODE_DISPATCH_TO</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отправить на конкретный обработчик (посредством бинарного OR с константой опкода ZEND)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-return">
    <term>
     <constant>ZEND_USER_OPCODE_RETURN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Выйти из исполнителя (возврат из функции)
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  Следующие модификаторы регистрируются как константы uopz
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.zend-acc-public">
    <term>
     <constant>ZEND_ACC_PUBLIC</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить функцию как общедоступную, по умолчанию
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-protected">
    <term>
     <constant>ZEND_ACC_PROTECTED</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить функцию как защищённую
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-private">
    <term>
     <constant>ZEND_ACC_PRIVATE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить функцию как закрытую
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-static">
    <term>
     <constant>ZEND_ACC_STATIC</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить функцию как статическую
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-final">
    <term>
     <constant>ZEND_ACC_FINAL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить функцию как окончательную
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-abstract">
    <term>
     <constant>ZEND_ACC_ABSTRACT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить функцию как абстрактную
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-class">
    <term>
     <constant>ZEND_ACC_CLASS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Фиктивная регистрация для согласованности, запись класса по умолчанию.
      Удалено в uopz 5.0.0.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-interface">
    <term>
     <constant>ZEND_ACC_INTERFACE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить класс как интерфейс. Удалено в uopz 5.0.0.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-trait">
    <term>
     <constant>ZEND_ACC_TRAIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Отметить класс как трейт. Удалено в uopz 5.0.0.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-fetch">
    <term>
     <constant>ZEND_ACC_FETCH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Используется только для получения флагов. Удалено в uopz 5.0.0.
     </simpara>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
