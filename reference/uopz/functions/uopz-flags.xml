<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a733bff5ff4a008364f0a90d7443b6b945b6cc18 Maintainer: lex Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.uopz-flags" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>uopz_flags</refname>
  <refpurpose>Получить или установить флаги для функции или класса</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>uopz_flags</methodname>
   <methodparam><type>string</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>PHP_INT_MAX</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>int</type><methodname>uopz_flags</methodname>
   <methodparam><type>string</type><parameter>class</parameter></methodparam>
   <methodparam><type>string</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>PHP_INT_MAX</initializer></methodparam>
  </methodsynopsis>
  <para>
   Получить или установить флаги для записи функции или класса во время выполнения
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>class</parameter></term>
    <listitem>
     <para>
      Имя класса
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>function</parameter></term>
    <listitem>
     <para>
      Имя функции. Если задан <parameter>class</parameter> и пустая строка
      передана как <parameter>function</parameter>, <function>uopz_flags</function>
      получает или устанавливает флаги записи класса.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      Корректный набор флагов ZEND_ACC_.
      Если не заданы, <function>uopz_flags</function> используется как геттер.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   При установке новых флагов, возвращает старые флаги, иначе возвращает текущие флаги
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   Начиная с PHP 7.4.0, если передан параметр <parameter>flags</parameter>,
   <function>uopz_extends</function> выбрасывает <classname>RuntimeException</classname>,
   если <link linkend="book.opcache">OPcache</link> включён
   и запись класса либо <parameter>class</parameter>,
   либо <parameter>parent</parameter> (если это признак) неизменны.
  </simpara>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>PECL uopz 5.0.0</entry>
      <entry>
       Параметр <parameter>flags</parameter> теперь необязательный. Ранее
       <constant>ZEND_ACC_FETCH</constant> должен был передаваться, чтобы <function>uopz_flags</function>
       использовался как геттер.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>uopz_flags</function></title>
   <programlisting role="php">
<![CDATA[
<?php
class Test {
    public function method() {
        return __CLASS__;
    }
}

$flags = uopz_flags("Test", "method");

var_dump((bool) (uopz_flags("Test", "method") & ZEND_ACC_PRIVATE));
var_dump((bool) (uopz_flags("Test", "method") & ZEND_ACC_STATIC));

var_dump(uopz_flags("Test", "method", $flags|ZEND_ACC_STATIC|ZEND_ACC_PRIVATE));

var_dump((bool) (uopz_flags("Test", "method") & ZEND_ACC_PRIVATE));
var_dump((bool) (uopz_flags("Test", "method") & ZEND_ACC_STATIC));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
bool(false)
int(1234567890)
bool(true)
bool(true)
]]>
   </screen>
  </example>
  <example>
   <title>"Отменить final" класса</title>
   <programlisting role="php">
<![CDATA[
<?php
final class MyClass
{
}

$flags = uopz_flags(MyClass::class, '');
uopz_flags(MyClass::class, '', $flags & ~ZEND_ACC_FINAL);
var_dump((new ReflectionClass(MyClass::class))->isFinal());
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
