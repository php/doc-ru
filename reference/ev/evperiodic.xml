<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8d666e819852f6b0561b40fcf8689b747568865c Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<phpdoc:classref xml:id="class.evperiodic" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс EvPeriodic</title>
 <titleabbrev>EvPeriodic</titleabbrev>
 <partintro>
  <!-- {{{ EvPeriodic intro -->
  <section xml:id="evperiodic.intro">
   &reftitle.intro;
   <para>
    Периодические наблюдатели также, своего рода, таймеры, но гораздо более непостоянные.
   </para>
   <para>
    В отличие от
    <classname>EvTimer</classname>
    , наблюдатели
    <classname>EvPeriodic</classname> базируются не на реальном времени (или
    относительном времени, физически прошедшем), а на "системном" (том,
    которое показывается на ваших часах). Разница в том, что такое время
    может идти быстрее или медленнее "реального", или вообще скакать, в момент
    перехода на зимнее/летнее время или просто ручного изменения времени.
   </para>
   <para>
    Наблюдатель <classname>EvPeriodic</classname> можно сконфигурировать на
    срабатывание после определённого времени. Например, если наблюдатель
    <classname>EvPeriodic</classname> сконфигурирован сработать
    <emphasis>"в 10 секунд"</emphasis>
    (т.е.
    <methodname>EvLoop::now</methodname>
    +
    <constant>10.0</constant> секунд по "системному" времени, а не через 10 секунд!)
    и сразу после этого системное время сбросили на
    <emphasis>первое Января прошлого года</emphasis>, то наблюдатель сработает
    через год или больше, ровно в тот момент, когда системное время будет равно заданному.
    В то время как <classname>EvTimer</classname> просто сработает через
    <constant>10</constant> секунд после запуска.
   </para>
   <para>
    Также как и с таймерами, callback-функция гарантированно сработает
    после наступления необходимого времени. Если несколько таймеров будут
    готовы сработать в одной и той же итерации событийного цикла, то
    первыми сработают те, которые должны сработать раньше по времени.
    (это более не распространяется на ситуации, когда callback-функции рекурсивно
    вызывают <methodname>EvLoop::run</methodname>).
   </para>
  </section>
  <!-- }}} -->
  <section xml:id="evperiodic.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvPeriodic</classname>
    </ooclass>
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvPeriodic</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evperiodic.props.offset">offset</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evperiodic.props.interval">interval</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evperiodic')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
  </section>
  <!-- {{{ EvPeriodic properties -->
  <section xml:id="evperiodic.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evperiodic.props.offset">
     <term>
      <varname>offset</varname>
     </term>
     <listitem>
      <para>
       При повторении этот параметр содержит значение смещения, в противном
       случае - абсолютное время (значение смещения передаётся в
       <methodname>EvPeriodic::set</methodname>
       , хотя
       <emphasis>libev</emphasis>
       может его поменять для лучшей численной стабильности).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evperiodic.props.interval">
     <term>
      <varname>interval</varname>
     </term>
     <listitem>
      <para>
       Текущее значение интервала. Может быть изменено в любое время, но
       изменения вступят в силу только после срабатывания наблюдателя, либо
       при вызове <methodname>EvPeriodic::again</methodname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <!-- }}} -->
 </partintro>

 &reference.ev.entities.evperiodic;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
