<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8d666e819852f6b0561b40fcf8689b747568865c Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->
<phpdoc:classref xml:id="class.evidle" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс EvIdle</title>
 <titleabbrev>EvIdle</titleabbrev>
 <partintro>
  <!-- {{{ EvIdle intro -->
  <section xml:id="evidle.intro">
   &reftitle.intro;
   <para>
    Наблюдатели <classname>EvIdle</classname>
    вызывают события тогда, когда никакие другие события такого же или более высокого
    приоритета не находятся в ожидании (<classname>EvPrepare</classname>,
    <classname>EvCheck</classname> и другие наблюдатели
    <classname>EvIdle</classname> не считаются за получающие
    <emphasis>события</emphasis>).
   </para>
   <para>
    Таким образом этот процесс занят обработкой сокетов или ожиданий (или даже сигналов)
    такого же или более высокого приоритета до тех пор, пока он не будет активирован.
    Но когда процесс находится в режиме ожидания (или в очереди только наблюдатели
    с более низким приоритетом), наблюдатели <classname>EvIdle</classname>
    будут вызываться единожды за итерацию цикла событий - пока не будут остановлены
    или пока процессом не будут получены новые сообщения и он не будет занят
    более приоритетными задачами.
   </para>
   <para>
    Помимо поддержания неблокирующего процесса (который полезен в некоторых случаях),
    наблюдатели <classname>EvIdle</classname>
    являются хорошим местом для выполнения
    <emphasis>"псевдо-фоновой обработки"</emphasis>
    или задержки обработки данных до момента, пока цикл событий не обработает все
    исключительные события.
   </para>
   <para>
    Наиболее заметный эффект проявляется в том, что пока <emphasis>спящие</emphasis>
    наблюдатели активны, процесс <emphasis>не</emphasis>
    будет блокироваться в процессе ожидания новых событий.
   </para>
  </section>
  <!-- }}} -->
  <section xml:id="evidle.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvIdle</classname>
    </ooclass>
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvIdle</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    <!--<classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>-->
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evidle')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
  </section>
  <!-- }}} -->
 </partintro>

 &reference.ev.entities.evidle;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
