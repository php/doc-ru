<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7ce29cc163c773d1623cad6b3b64ab652d22a3fb Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<chapter  xml:id="ev.periodic-modes" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Режимы работы периодических наблюдателей</title>
 <para>
  Наблюдатели <classname>EvPeriodic</classname> работают в разных режимах
  в зависимости от значения параметров <parameter>offset</parameter>,
  <parameter>interval</parameter> и <parameter>reschedule_cb</parameter>.
 </para>
 <orderedlist>
  <listitem>
   <para>
    <emphasis>Абсолютный таймер</emphasis>.
    В этом режиме <parameter>interval</parameter> = <constant>0</constant>,
    <parameter>reschedule_cb</parameter> = &null;. Таймер просто сработает один раз
    в заданное в <parameter>offset</parameter> время.
    Он не компенсирует скачки времени и если указанно сработать в
    <emphasis>1 Января 2014</emphasis>, то он сработает когда системное
    время будет равно или больше этого значения.
   </para>
  </listitem>
  <listitem>
   <para>
    <emphasis>Таймер с фиксированным интервалом</emphasis>.
    В этом режиме <parameter>interval</parameter> &gt; <constant>0</constant>, а
    <parameter>reschedule_cb</parameter> = &null;. Каждое последующее срабатывание
    будет ровно через <parameter>offset</parameter> + <constant>N</constant>
    * <parameter>interval</parameter> (где <constant>N</constant> - целое число), не
    взирая на скачки времени.
   </para>
   <para>
    Это можно использовать для создания таймеров, которые не расходятся с системным временем:
    <programlisting role="php">
<![CDATA[
<?php
$hourly = EvPeriodic(0, 3600, NULL, function () {
  echo "один раз в час\n";
});
?>
]]>
    </programlisting>
    Это не означает, что между срабатываниями будет всегда ровно
    <constant>3600</constant> секунд. Это означает, что callback-функция будет
    вызвана только когда системные часы покажут полный час
    (<emphasis>UTC</emphasis>).
   </para>
   <para>
    В этом режиме, <classname>EvPeriodic</classname> будет пытаться запустить
    callback-функцию в следующее доступное время, когда
    <varname>time</varname> = <parameter>offset</parameter> (<literal>mod</literal>
    <parameter>interval</parameter>), независимо от скачков времени.
   </para>
  </listitem>
  <listitem>
   <para>
    <emphasis>Режим ручного переопределения времени срабатывания</emphasis>.
    В этом режиме <parameter>reschedule_cb</parameter> является
    корректным параметром типа <type>callable</type>.
   </para>
   <para>
    <parameter>interval</parameter> и
    <parameter>offset</parameter> игнорируются. Вместо этого, при
    каждом срабатывании, наблюдатель запускает callback-функцию
    (<parameter>reschedule_cb</parameter>) с двумя аргументами,
    ссылкой на наблюдателя и временем.
   </para>
   <para>
    Эта callback-функция никогда <emphasis>не должна</emphasis>
    останавливать или уничтожать этот, или какой-либо другой
    периодический наблюдатель и <emphasis>не должна</emphasis>
    вызывать функции и методы событийного цикла. Для остановки
    можно вернуть очень большое число, например, <constant>1e30</constant>,
    и остановить наблюдатель за пределами этой функции.
    Для этого можно использовать наблюдателей <classname>EvPrepare</classname>.
   </para>
   <para>
    Эта функция должна вернуть следующее время срабатывания, основываясь на
    переданном значении времени (то есть самое маленькое значение времени
    больше или равно второму аргументу). Обычно она вызывается перед тем, как
    будет вызвана основная callback-функция наблюдателя, но может и позже.
   </para>
   <example>
    <title>Использование наблюдателя с ручным переопределением времени срабатывания</title>
    <programlisting role="php">
<![CDATA[
<?php
// Срабатывать каждые 10.5 секунд

function reschedule_cb ($watcher, $now) {
   return $now + (10.5. - fmod($now, 10.5));
}

$w = new EvPeriodic(0., 0., "reschedule_cb", function ($w, $revents) {
   echo time(), PHP_EOL;
});

Ev::run();
?>
]]>
    </programlisting>
   </example>
  </listitem>
 </orderedlist>
</chapter><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
