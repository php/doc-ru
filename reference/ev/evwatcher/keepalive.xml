<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8d666e819852f6b0561b40fcf8689b747568865c Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="evwatcher.keepalive" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvWatcher::keepalive</refname>
  <refpurpose>Настраивает, будет ли возвращаться цикл</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>bool</type>
   <methodname>EvWatcher::keepalive</methodname>
   <methodparam choice="opt">
    <type>bool</type>
    <parameter>value</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Настраивает, будет ли возвращаться цикл.
   Если <parameter>value</parameter> поддержания установлено &false;,
   наблюдатель не будет препятствовать возврату <methodname>Ev::run</methodname> /
   <methodname>EvLoop::run</methodname>, даже если наблюдатель активен.
  </para>
  <para>
   Наблюдатели по умолчанию имеют <parameter>value</parameter>
   поддержания &true;.
  </para>
  <para>
   Очистка статуса поддержания полезна при возврате из <methodname>Ev::run</methodname> /
   <methodname>EvLoop::run</methodname> только потому, что наблюдатель нежелателен.
   Это может быть долго работающий наблюдатель UDP-сокета или около того.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>value</parameter>
    </term>
    <listitem>
     <para>
      Если <parameter>value</parameter> поддержания установлено
      &false;, наблюдатель не будет препятствовать возврату <methodname>Ev::run</methodname> /
      <methodname>EvLoop::run</methodname>, даже если наблюдатель активен.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает предыдущее состояние.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Регистрируем наблюдатель ввода-вывода для какого-либо UDP-сокета,
    но не препятствуем запуску цикла событий только из-за этого наблюдателя.</title>
   <programlisting role="php">
<![CDATA[
<?php
$udp_socket = ...
$udp_watcher = new EvIo($udp_socket, Ev::READ, function () { /* ... */ });
$udp_watcher->keepalive(FALSE);
?>
]]>
   </programlisting>
  </example>
 </refsect1>
</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
