<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8d666e819852f6b0561b40fcf8689b747568865c Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<refentry xml:id="evchild.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvChild::__construct</refname>
  <refpurpose>Создаёт объект наблюдатель EvChild</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <methodname>EvChild::__construct</methodname>
   <methodparam>
    <type>int</type>
    <parameter>pid</parameter>
   </methodparam>
   <methodparam>
    <type>bool</type>
    <parameter>trace</parameter>
   </methodparam>
   <methodparam>
    <type>callable</type>
    <parameter>callback</parameter>
   </methodparam>
   <methodparam
   choice="opt">
    <type>mixed</type>
    <parameter>data</parameter>
    <initializer>&null;</initializer>
   </methodparam>
   <methodparam
   choice="opt">
    <type>int</type>
    <parameter>priority</parameter>
    <initializer>0</initializer>
   </methodparam>
  </methodsynopsis>
  <para>
   Создаёт объект наблюдатель
   <classname>EvChild</classname>.
  </para>
  <para>
   Вызывает callback-функцию, когда пришло событие
   изменения статуса процесса с идентификатором
   <parameter>pid</parameter>
   (или любым
   <emphasis>PID</emphasis>,
   если
   <parameter>pid</parameter>
   задан как
   <constant>0</constant>
   ). Статус процесса изменяется, когда процесс завершается, либо когда
   его убивают, либо, если <parameter>trace</parameter> равно &true;, когда
   он остановлен или возобновлён. Другими словами, когда процесс получает сигнал
   <constant>SIGCHLD</constant>
   ,
   <emphasis>Ev</emphasis>
   извлекает статус exit/wait для всех изменённых/зомби дочерних процессов
   и вызывает callback-функцию.
  </para>
  <para>
   Правильно устанавливать дочернего наблюдателя после того, как
   <classname>EvChild</classname> завершился, но до запуска
   следующей итерации событийного цикла. К примеру, сначала вызывается
   <literal>fork</literal>, после чего новый дочерний процесс может выйти, и только
   после этого в родителе устанавливается наблюдатель
   <classname>EvChild</classname>
   для нового
   <emphasis>PID</emphasis>
   .
  </para>
  <para>
   Вы можете получить доступ к статусам exit/tracing и
   <parameter>pid</parameter>
   используя свойства объекта наблюдателя
   <varname>rstatus</varname>
   и
   <varname>rpid</varname>.
  </para>
  <para>
   Количество
   <emphasis>PID</emphasis>-наблюдателей
   для каждого
   <emphasis>PID</emphasis>
   не ограничено. Все они будут вызваны.
  </para>
  <para>
   Метод <methodname>EvChild::createStopped</methodname>
   не стартует(не активирует) созданного наблюдателя.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>pid</parameter>
    </term>
    <listitem>
     <para>
      Ожидает изменения статуса процесса с идентификатором PID
      (или любого процесса, если PID задан как
      <constant>0</constant>
      ).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>trace</parameter>
    </term>
    <listitem>
     <para>
      Если &false;, то активация наблюдателя происходит только при
      завершении процесса.
      Если &true;, то активация происходит также при остановке/возобновлении процесса.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>callback</parameter>
    </term>
    <listitem>
     <para>
      Смотрите
      <link linkend="ev.watcher-callbacks">Callback-функции наблюдателей</link>
      .
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>data</parameter>
    </term>
    <listitem>
     <para>
      Произвольные данные, связанные с наблюдателем.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>priority</parameter>
    </term>
    <listitem>
     <para>
      <link linkend="ev.constants.watcher-pri">Приоритет наблюдателя</link>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   В случае успешного выполнения возвращает объект EvChild.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <methodname>EvLoop::child</methodname>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
