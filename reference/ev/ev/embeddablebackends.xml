<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 88c8421cbef98b73ac59f58cc60d317c4861fd89 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->

<refentry xml:id="ev.embeddablebackends" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Ev::embeddableBackends</refname>
  <refpurpose>Возвращает набор бэкендов, которые можно встроить в прочие событийные циклы</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier>
   <modifier>public</modifier>
   <modifier>static</modifier>
   <type>int</type>
   <methodname>Ev::embeddableBackends</methodname>
   <void />
  </methodsynopsis>
  <para>
   Возвращает набор бэкендов, которые можно встроить в прочие событийные циклы.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает битовую маску, содержащую
   <link
           linkend="ev.constants.watcher-backends">флаги бэкенда</link>, объединённые
   с помощью побитового <emphasis>ИЛИ</emphasis>.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Цикл создаётся с использованием kqueue и встраивается в цикл по умолчанию</title>
   <programlisting role="php">
    <![CDATA[
<?php
/*
* Проверяем, что kqueue доступен, но не рекомендован и создаём kqueue бэкенд
* с использованием сокетов (которые обычно работают с любой реализацией kqueue).
* Сохраняем событийный цикл kqueue/socket-only в loop_socket. (Можем, опционально
* использовать флаг EVFLAG_NOENV)
*
* Пример взят с сайта
* http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#Examples_CONTENT-9
*/
$loop        = EvLoop::defaultLoop();
$socket_loop = NULL;
$embed       = NULL;

if (Ev::supportedBackends() & ~Ev::recommendedBackends() & Ev::BACKEND_KQUEUE) {
 if (($socket_loop = new EvLoop(Ev::BACKEND_KQUEUE))) {
  $embed = new EvEmbed($loop);
 }
}

if (!$socket_loop) {
 $socket_loop = $loop;
}

// Теперь используем $socket_loop для всех сокетов и $loop всего остального
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <classname>EvEmbed</classname>
   </member>
   <member>
    <methodname>Ev::recommendedBackends</methodname>
   </member>
   <member>
    <methodname>Ev::supportedBackends</methodname>
   </member>
   <member>
    <link linkend="ev.constants.watcher-backends">Флаги бэкенда</link>
   </member>
   <member>
    <link linkend="ev.examples">Примеры</link>
   </member>
  </simplelist>
 </refsect1>
</refentry>
        <!-- Keep this comment at the end of the file
        Local variables:
        mode: sgml
        sgml-omittag:t
        sgml-shorttag:t
        sgml-minimize-attributes:nil
        sgml-always-quote-attributes:t
        sgml-indent-step:1
        sgml-indent-data:t
        indent-tabs-mode:nil
        sgml-parent-document:nil
        sgml-default-dtd-file:"~/.phpdoc/manual.ced"
        sgml-exposed-tags:nil
        sgml-local-catalogs:nil
        sgml-local-ecat-files:nil
        End:
        vim600: syn=xml fen fdm=syntax fdl=2 si
        vim: et tw=78 syn=sgml
        vi: ts=1 sw=1
        -->
