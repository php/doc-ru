<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d790375863dca4df7aa449786bb110c9cd80abdf Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.evloop" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс EvLoop</title>
 <titleabbrev>EvLoop</titleabbrev>
 <partintro>
  <!-- {{{ EvLoop intro -->
  <section xml:id="evloop.intro">
   &reftitle.intro;
   <para>
    Представляет событийный цикл, который всегда отличается
    от <emphasis>цикла по умолчанию</emphasis>.
    В отличие от <emphasis>цикла по умолчанию</emphasis>,
    он не может работать с наблюдателями
    <classname>EvChild</classname>.
   </para>
   <para>
    Если доступна работа с потоками исполнения, то необходимо
    создать цикл для каждого потока используя в качестве родителя
    <emphasis>цикл по умолчанию</emphasis>.
   </para>
   <para>
    <emphasis>Событийный цикл по умолчанию</emphasis>
    инициализируется автоматически с помощью
    <emphasis>Ev</emphasis>.
    Он доступен с помощью методов класса
    <classname>Ev</classname> или с помощью метода
    <methodname>EvLoop::defaultLoop</methodname>.
   </para>
  </section>
  <!-- }}} -->
  <section xml:id="evloop.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvLoop</classname>
    </ooclass>
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>final</modifier>
      <classname>EvLoop</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.data">data</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.backend">backend</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.is-default-loop">is_default_loop</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.iteration">iteration</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.pending">pending</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.io-interval">io_interval</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.timeout-interval">timeout_interval</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.depth">depth</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evloop')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
  </section>
  <!-- {{{ EvLoop properties -->
  <section xml:id="evloop.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evloop.props.data">
     <term>
      <varname>data</varname>
     </term>
     <listitem>
      <para>
       Произвольные данные, добавленные циклу
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.backend">
     <term>
      <varname>backend</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Только чтение</emphasis>.
       <link linkend="ev.constants.watcher-backends">Флаги бэкенда</link>
       указывающие какой событийный бэкенд используется.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.is-default-loop">
     <term>
      <varname>is_default_loop</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Только чтение</emphasis>.
       Если &true;, то это цикл по умолчанию.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.iteration">
     <term>
      <varname>iteration</varname>
     </term>
     <listitem>
      <para>
       Текущий счётчик итераций. Смотри
       <methodname>Ev::iteration</methodname>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.pending">
     <term>
      <varname>pending</varname>
     </term>
     <listitem>
      <para>
       Количество ожидающих наблюдателей.
       <constant>0</constant> означает, что
       ожидающие наблюдатели отсутствуют.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.io-interval">
     <term>
      <varname>io_interval</varname>
     </term>
     <listitem>
      <para>
       Более высокие значения
       <varname>io_interval</varname>
       позволяют
       <emphasis>libev</emphasis>
       тратить больше времени для сбора событий
       <classname>EvIo</classname>,
       что позволит обработать больше событий за одну итерацию
       заплатив за это увеличенными задержками.
       Таймауты (и <classname>EvPeriodic</classname>
       и <classname>EvTimer</classname>) не будут затронуты.
       Установка в ненулевое значение добавить дополнительный
       вызов <literal>sleep()</literal> в большинство итераций цикла.
       Время сна гарантирует, что
       <emphasis>libev</emphasis>
       не будет передавать события
       <classname>EvIo</classname>
       чаще, чем один раз за этот период, в среднем.
       Для большинства программ хорошим значением
       <varname>io_interval</varname>
       будет значение около
       <constant>0.1</constant>,
       этого достаточно для большинства интерактивных серверов (не для игр).
       Обычно вы не заметите никакой разницы, если установите его
       меньше <constant>0.01</constant>, так как
       это значение будет близко к минимальному интервалу вычисляемого
       времени для большинства систем.
      </para>
      <para>
       Также читайте
       <link xlink:href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#FUNCTIONS_CONTROLLING_EVENT_LOOPS">ФУНКЦИИ УПРАВЛЕНИЯ СОБЫТИЙНЫМИ ЦИКЛАМИ</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.timeout-interval">
     <term>
      <varname>timeout_interval</varname>
     </term>
     <listitem>
      <para>
       Более высокие значения
       <varname>timeout_interval</varname>
       позволят
       <emphasis>libev</emphasis>
       тратить больше времени для сбора таймаутов за счёт увеличения
       задержек/джиттеров/неточностей (функция обратного вызова наблюдателя
       будет вызвана позже).
       Наблюдатели <classname>EvIo</classname> не будут затронуты.
       Увеличение этого значение не вызовет перерасхода ресурсов в
       <emphasis>libev</emphasis>. Также читайте
       <link xlink:href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#FUNCTIONS_CONTROLLING_EVENT_LOOPS">ФУНКЦИИ УПРАВЛЕНИЯ СОБЫТИЙНЫМИ ЦИКЛАМИ</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.depth">
     <term>
      <varname>depth</varname>
     </term>
     <listitem>
      <para>
       Глубина рекурсии. Смотрите <methodname>Ev::depth</methodname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <!-- }}} -->
 </partintro>

 &reference.ev.entities.evloop;

</phpdoc:classref><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
