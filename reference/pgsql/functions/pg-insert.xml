<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 39bb8a868935a56cfce438b0169e13c02c93211c Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-insert" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_insert</refname>
  <refpurpose>
   Заносит данные массива в таблицу базы данных
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>PgSql\Result</type><type>string</type><type>bool</type></type><methodname>pg_insert</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>table_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PGSQL_DML_EXEC</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>pg_insert</function> вставляет записи из массива
   <parameter>values</parameter> в таблицу <parameter>table_name</parameter>.
  </para>
  <para>
   Функция <function>pg_convert</function> обработает значения массива <literal>values</literal>
   с заданными флагами, если установлен параметр <literal>flags</literal>.
  </para>
  <para>
   По умолчанию функция <function>pg_insert</function> передаёт необработанные значения.
   Значения нужно экранировать или передавать в параметр <parameter>flags</parameter>
   флаг <constant>PGSQL_DML_ESCAPE</constant>.
   Опиция <constant>PGSQL_DML_ESCAPE</constant> закавычивает и экранирует
   параметры и идентификаторы. Поэтому имена таблиц и столбцов становятся
   чувствительными к регистру.
  </para>
  <para>
   Обратите внимание, что ни экранирование, ни подготовленный запрос не защищают запрос LIKE,
   JSON, массив, регулярные выражения и т. д. Эти параметры нужно обрабатывать
   в соответствии с их контекстом, т. е. экранировать или проверять значения.
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table_name</parameter></term>
     <listitem>
      <para>
       Имя таблицы для вставки данных. Количество колонок в таблице <parameter>table_name</parameter> должно
       быть не меньше, чем элементов в массиве <parameter>values</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Ассоциативный массив (<type>array</type>), в котором ключи — названия столбцов
       таблицы <parameter>table_name</parameter>, а значения — записи,
       которые нужно вставить в эти колонки.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Комбинация констант <constant>PGSQL_CONV_OPTS</constant>,
       <constant>PGSQL_DML_NO_CONV</constant>,
       <constant>PGSQL_DML_ESCAPE</constant>,
       <constant>PGSQL_DML_EXEC</constant>,
       <constant>PGSQL_DML_ASYNC</constant> и
       <constant>PGSQL_DML_STRING</constant>.
       Функция возвращает строку запроса, если в числе прочих в параметр
       <parameter>flags</parameter> передают флаг <constant>PGSQL_DML_STRING</constant>.
       Функция не вызывает функцию <function>pg_convert</function> внутренне, если установлены
       флаги <constant>PGSQL_DML_NO_CONV</constant> или <constant>PGSQL_DML_ESCAPE</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;. Или возвращает строку (<type>string</type>), если флаг <constant>PGSQL_DML_STRING</constant>
   включён в список аргументов параметра <parameter>flags</parameter>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Функция выбрасывает исключение <classname>ValueError</classname>,
   если заданная таблица недопустима.
  </para>
  <para>
   Функция выбрасывает исключения <classname>ValueError</classname>
   или <classname>TypeError</classname>, если значение или тип поля
   не соответствуют правильному типу СУБД PostgreSQL.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Функция теперь выбрасывает исключение <classname>ValueError</classname>,
       если заданная таблица недопустима;
       раньше функция выдавала ошибку уровня <constant>E_WARNING</constant>.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Функция теперь выбрасывает исключения <classname>ValueError</classname>
       или <classname>TypeError</classname>, если значение или тип поля
       не соответствуют правильному типу СУБД PostgreSQL;
       раньше функция выдавала ошибку уровня <constant>E_WARNING</constant>.
      </entry>
     </row>
     &pgsql.changelog.return-result-object;
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>pg_insert</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$dbconn = pg_connect('dbname=foo');

// Это безопасно в некоторой степени, поскольку все значения экранируются.
// Однако СУБД PostgreSQL поддерживает JSON или массив. Для этих значений это не безопасно
// ни через экранирование, ни с через подготовленный запрос.
$res = pg_insert($dbconn, 'post_log', $_POST, PGSQL_DML_ESCAPE);

if ($res) {
    echo "Данные из POST-запроса успешно внесены в журнал\n";
} else {
    echo "Пользователь прислал неверные данные\n";
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_convert</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
