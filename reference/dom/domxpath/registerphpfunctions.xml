<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: db4a10ffdc22db3b49ea7fc01c36d21180c339b8 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="domxpath.registerphpfunctions" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DOMXPath::registerPhpFunctions</refname>
  <refpurpose>
   Регистрирует PHP-функции как XPath-функции
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMXPath">
   <modifier>public</modifier> <type>void</type><methodname>DOMXPath::registerPhpFunctions</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>array</type><type>null</type></type><parameter>restrict</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Метод разрешает вызывать PHP-функции в XPath-выражениях.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>restrict</parameter></term>
     <listitem>
      <para>
       Параметр разрешает вызывать в XPath-выражениях
       только конкретные функции.
      </para>
      <para>
       Параметр принимает значения следующих типов:
       <type>string</type> — название функции, <type>array</type> — индексный массив с названиями функций
       или <type>array</type> — ассоциативный массив с названиями функций в ключах
       и <type>callable</type>-выражениями в значениях.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors" xml:id="domxpath.registerphpfunctions..errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Метод выбрасывает ошибку <exceptionname>ValueError</exceptionname>,
     если название callback-функции недопустимо.
    </simpara>
   </listitem>
   &dom.errors.compliant.common;
   <listitem>
    <simpara>
     Метод выбрасывает ошибку <exceptionname>TypeError</exceptionname>,
     если значение для обратного вызова не принадлежит типу callable.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row xml:id="domxpath.registerphpfunctions..changelog.errors">
      <entry>8.4.0</entry>
      <entry>
       При передаче недопустимых названий callback-функций метод теперь выбрасывает
       ошибку <exceptionname>ValueError</exceptionname>.
       При передаче значений, которые не принадлежат типу callable, метод теперь выбрасывает
       ошибку <exceptionname>TypeError</exceptionname>.
      </entry>
     </row>
     <row>
      <entry>8.4.0</entry>
      <entry>
       Параметр <parameter>restrict</parameter> теперь принимает <type>callable</type>-выражения,
       когда набор callback-функций, доступных для вызова из XPath-выражений,
       ограничивают путём передачи массива (<type>array</type>).
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Примеры на этой странице работают с файлом <filename>book.xml</filename>,
   который содержит следующее:
  </para>
  <para>
   <example>
    <title>book.xml</title>
    <programlisting role="xml">
<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<books>
 <book>
  <title>PHP Basics</title>
  <author>Jim Smith</author>
  <author>Jane Smith</author>
 </book>
 <book>
  <title>PHP Secrets</title>
  <author>Jenny Smythe</author>
 </book>
 <book>
  <title>XML basics</title>
  <author>Joe Black</author>
 </book>
</books>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример регистрации PHP-функции как XPath-функции методом <methodname>DOMXPath::registerPhpFunctions</methodname>
     и вызова функции через синтаксис <literal>php:functionString</literal>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument();
$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// Обязательная регистрация пространства имён с префиксом 'php'
$xpath->registerNamespace("php", "http://php.net/xpath");

// Регистрация PHP-функций без установки ограничений
$xpath->registerPhpFunctions();

// Вызов функции substr на названии книги
$nodes = $xpath->query('//book[php:functionString("substr", title, 0, 3) = "PHP"]');

echo "Метод нашёл {$nodes->length} книги, название которых начинается с 'PHP':\n";
foreach ($nodes as $node) {
    $title  = $node->getElementsByTagName("title")->item(0)->nodeValue;
    $author = $node->getElementsByTagName("author")->item(0)->nodeValue;
    echo "$title автора $author\n";
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Метод нашёл 2 книги, название которых начинается с 'PHP':
PHP Basics автора Jim Smith
PHP Secrets автора Jenny Smythe
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример регистрации PHP-функции как XPath-функции методом <methodname>DOMXPath::registerPhpFunctions</methodname>
     и вызова функции через синтаксис <literal>php:function</literal>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument();
$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// Обязательная регистрация пространства имён с префиксом 'php'
$xpath->registerNamespace("php", "http://php.net/xpath");

// Регистрация PHP-функций с установкой ограничения только на доступ к функции has_multiple
$xpath->registerPhpFunctions("has_multiple");

function has_multiple($nodes) {
    // Функция возвращает true, если список узлов содержит больше одного автора
    return count($nodes) > 1;
}
// Фильтрация книг, которые вышли в соавторстве
$books = $xpath->query('//book[php:function("has_multiple", author)]');

echo "Книги, которые написали два или больше автора:\n";
foreach ($books as $book) {
    echo $book->getElementsByTagName("title")->item(0)->nodeValue . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Книги, которые написали два или больше автора:
PHP Basics
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример регистрации анонимной PHP-функции как XPath-функции методом <methodname>DOMXPath::registerPhpFunctions</methodname>
     с установкой ограничения через массив <type>callable</type>-значений
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument();
$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// Обязательная регистрация пространства имён с префиксом 'php'
$xpath->registerNamespace("php", "http://php.net/xpath");

// Регистрация PHP-функций с установкой ограничения только на доступ к функции has_multiple
$xpath->registerPhpFunctions(["has_multiple" => fn ($nodes) => count($nodes) > 1]);

// Фильтрация книг, которые вышли в соавторстве
$books = $xpath->query('//book[php:function("has_multiple", author)]');

echo "Книги, которые написали два или больше автора:\n";
foreach ($books as $book) {
    echo $book->getElementsByTagName("title")->item(0)->nodeValue . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Книги, которые написали два или больше автора:
PHP Basics
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMXPath::registerNamespace</methodname></member>
    <member><methodname>DOMXPath::query</methodname></member>
    <member><methodname>DOMXPath::evaluate</methodname></member>
    <member><methodname>XSLTProcessor::registerPHPFunctions</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
