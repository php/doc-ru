<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 01904e809eaf0aa60e7ce0524400ddd5681c9541 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="domxpath.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMXPath::query</refname>
  <refpurpose>
   Вычисляет XPath-выражение
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMXPath">
   <modifier>public</modifier> <type>mixed</type><methodname>DOMXPath::query</methodname>
   <methodparam><type>string</type><parameter>expression</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>DOMNode</type><type>null</type></type><parameter>contextNode</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>registerNodeNS</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Метод выполняет XPath-выражение <parameter>expression</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>expression</parameter></term>
     <listitem>
      <para>
       Выражение в формате XPath, которое требуется выполнить.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>contextNode</parameter></term>
     <listitem>
      <para>
       Необязательный параметр <parameter>contextNode</parameter>
       указывают для выполнения относительных XPath-запросов.
       По умолчанию запросы выполняются относительно корневого элемента.
      </para>
     </listitem>
    </varlistentry>
    &dom.parameters.register_node_ns;
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Метод возвращает объект <classname>DOMNodeList</classname> с узлами,
   которые соответствуют XPath-выражению <parameter>expression</parameter>.
   Выражение, которое не возвращает узлы, вернёт пустой объект
   <classname>DOMNodeList</classname>.
  </para>
  <para>
   Метод <methodname>DOMXPath::query</methodname> возвращает значение &false;,
   если выражение <parameter>expression</parameter> сформировали неправильно
   или в параметр <parameter>contextNode</parameter> передали недопустимый узел.
  </para>
 </refsect1>

 <refsect1 role="errors" xml:id="domxpath.query..errors">
  &reftitle.errors;
  <simpara>
   При работе с выражением, в котором вызывают PHP-функции обратного вызова,
   возникают следующие ошибки:
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     Метод выбрасывает ошибку <exceptionname>Error</exceptionname>,
     если в выражении вызвали PHP-функцию обратного вызова, но ни одной callback-функции не регистрировали,
     или если callback-функцию с таким названием не зарегистрировали.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Метод выбрасывает ошибку <exceptionname>TypeError</exceptionname>,
     если при вызове функции из XPath-выражения синтаксисом <literal>php:function</literal>
     вместо строкового названия обработчика передают значение другого типа.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Метод выбрасывает ошибку <exceptionname>Error</exceptionname>,
     если callback-функция вместо DOM-объекта возвращает значение другого типа.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Пример получения списка книг на английском языке
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument();

// Не хотим возиться с пробелами
$doc->preserveWhiteSpace = false;

$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// Начинаем с корневого элемента
$query = '//book/chapter/para/informaltable/tgroup/tbody/row/entry[. = "en"]';

$entries = $xpath->query($query);

foreach ($entries as $entry) {
    echo "Метод нашёл книгу {$entry->previousSibling->previousSibling->nodeValue}," .
         " автор {$entry->previousSibling->nodeValue}\n"
    ;
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Метод нашёл книгу The Grapes of Wrath, автор John Steinbeck
Метод нашёл книгу The Pearl, автор John Steinbeck
]]>
    </screen>
    <para>
     Параметр <parameter>contextNode</parameter> помогает
     составлять более короткую запись выражения:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument();
$doc->preserveWhiteSpace = false;

$doc->load('book.xml');

$xpath = new DOMXPath($doc);

$tbody = $doc->getElementsByTagName('tbody')->item(0);

// Запрос относительно узла tbody
$query = 'row/entry[. = "en"]';

$entries = $xpath->query($query, $tbody);

foreach ($entries as $entry) {
    echo "Метод нашёл книгу {$entry->previousSibling->previousSibling->nodeValue}," .
         " автор {$entry->previousSibling->nodeValue}\n"
    ;
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMXPath::evaluate</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
