<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a8b6f4dd3a23875b066d4e47ea4a4977a63e0655 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="dom-htmldocument.createfromfile" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Dom\HTMLDocument::createFromFile</refname>
  <refpurpose>Разбирает содержимое файла как <acronym>HTML</acronym>-документ</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;согласно действующему стандарту.
  <methodsynopsis role="Dom\\HTMLDocument">
   <modifier>public</modifier> <modifier>static</modifier> <type>Dom\HTMLDocument</type><methodname>Dom\HTMLDocument::createFromFile</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>overrideEncoding</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Метод разбирает <acronym>HTML</acronym>-документ из файла
   в соответствии со стандартом.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>path</parameter></term>
    <listitem>
     <simpara>
      Путь к файлу, который требуется разобрать.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     &dom.parameter.compliant.options;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>overrideEncoding</parameter></term>
    <listitem>
     &dom.parameter.compliant.encoding;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Метод возвращает разобранный документ как экземпляр класса <classname>Dom\HTMLDocument</classname>.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Метод выбрасывает ошибку <exceptionname>ValueError</exceptionname>,
     если аргумент <parameter>path</parameter> содержит нулевые байты или последовательность символов
     <literal>"%00"</literal>.
    </simpara>
   </listitem>
   &dom.errors.compliant.common;
   <listitem>
    <simpara>
     Метод выбрасывает исключение <exceptionname>Exception</exceptionname>,
     если файл невозможно открыть.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 &dom.parser.compliant.note.whitespace;

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Dom\HTMLDocument::createEmpty</methodname></member>
   <member><methodname>Dom\HTMLDocument::createFromString</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
