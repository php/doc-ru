<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14e3e35ca0c82b3b5fb3fd71b9dd70e9eb250ab1 Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<refentry xml:id="function.sodium-crypto-box-seal" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sodium_crypto_box_seal</refname>
  <refpurpose>Шифрование открытым ключом без проверки подлинности</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sodium_crypto_box_seal</methodname>
   <methodparam><type>string</type><parameter>message</parameter></methodparam>
   <methodparam><type>string</type><parameter>public_key</parameter></methodparam>
  </methodsynopsis>
  <para>
   Шифрует сообщение так, что только получатель может его расшифровать.
  </para>
  <para>
   В отличие от <function>sodium_crypto_box</function>, вам нужно знать только открытый ключ получателя,
   чтобы использовать <function>sodium_crypto_box_seal</function>.
   Однако одним из следствий этого удобства является то, что зашифрованный текст не привязан к статическому открытому ключу и, следовательно, не аутентифицируется.
   Следовательно, шифрование открытым ключом без проверки подлинности.
  </para>
  <para>
   <function>sodium_crypto_box_seal</function> по-прежнему обеспечивает целостность зашифрованного текста.
   Только не проверяет подлинность отправителя.
  </para>
  <para>
   Если вам также нужна проверка подлинности отправителя, лучше всего начать с функций <function>sodium_crypto_sign</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>message</parameter></term>
    <listitem>
     <para>
      Сообщение, которое нужно зашифровать.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>public_key</parameter></term>
    <listitem>
     <para>
      Открытый ключ, соответствующий единственному ключу, который может расшифровать сообщение.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Строка зашифрованного текста в формате (одноразовый открытый ключ, зашифрованное сообщение, тег аутентификации).
  </para>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example xml:id="sodium-crypto-box-seal.example.basic"><!-- {{{ -->
   <title>Пример использования <function>sodium_crypto_box_seal</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$keypair = sodium_crypto_box_keypair();
$public_key = sodium_crypto_box_publickey($keypair);

// Обфусцированный текст, чтобы сделать пример более увлекательным
$plaintext_b64 = "V3JpdGluZyBzb2Z0d2FyZSBpbiBQSFAgY2FuIGJlIGEgZGVsaWdodCE=";
$decoded_plaintext = sodium_base642bin($plaintext_b64, SODIUM_BASE64_VARIANT_ORIGINAL);

$sealed = sodium_crypto_box_seal($decoded_plaintext, $public_key);
var_dump(base64_encode($sealed));

$opened = sodium_crypto_box_seal_open($sealed, $keypair);
var_dump($opened);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(120) "oRBXXAV4iQBrxlV4A21Bord8Yo/D8ZlrIIGNyaRCcGBfpz0map52I3xq6l+CST+1NSgQkbV+HiYyFjXWiWiaCGupGf+zl4bgWj/A9Adtem7Jt3h3emrMsLw="
string(41) "Writing software in PHP can be a delight!"
]]>
   </screen>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->


</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
