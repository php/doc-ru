<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5a6e387a2dec43c569ffe17978c899b5d9bdf4d1 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>Устанавливает параметр для сеанса CURL</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>CurlHandle</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Устанавливает параметр для указанного сеанса cURL.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       Устанавливаемый параметр <literal>CURLOPT_XXX</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Значение параметра <parameter>option</parameter>.
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть типа <type>bool</type>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">Параметр</entry>
           <entry valign="top">Устанавливаемое значение <parameter>value</parameter></entry>
           <entry valign="top">Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            &true; для автоматической установки поля <literal>Referer:</literal>
            в запросах, перенаправленных заголовком <literal>Location:</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            &true; для указания текущему сеансу начать новую "сессию" cookies. Это заставит
            libcurl проигнорировать все "сессионные" cookies, которые она должна была бы
            загрузить, полученные из предыдущей сессии. По умолчанию libcurl всегда
            сохраняет и загружает все cookies, вне зависимости от того, являются ли они
            "сессионными" или нет. "Сессионные" cookies - это cookies без срока истечения,
            которые должны существовать только для текущей "сессии".
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CERTINFO</constant></entry>
           <entry valign="top">
            &true; для вывода информации о сертификате SSL в поток <literal>STDERR</literal>
            при безопасных соединениях.
           </entry>
           <entry valign="top">
            Добавлена в cURL 7.19.1.
            Для корректной работы требует
            включённой опции <constant>CURLOPT_VERBOSE</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_ONLY</constant></entry>
           <entry valign="top">
            &true; сообщает библиотеке, чтобы она провела необходимые аутентификацию прокси
            и настройку соединения, но не передавала данные. Эта опция реализована для
            HTTP, SMTP и POP3.
           </entry>
           <entry valign="top">
            Добавлена в 7.15.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            &true; для преобразования концов строк Unix в CRLF.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant></entry>
           <entry valign="top">
            &true; для запрета URL-адресов, содержащих имя пользователя. Имена пользователей по умолчанию разрешены (0).
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.61.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant></entry>
           <entry valign="top">
            &true; для перетасовки порядка всех возвращённых адресов, чтобы они использовались
            в случайном порядке, когда имя разрешено и возвращается более одного IP-адреса.

            &true; to shuffle the order of all returned addresses so that they will be used
            in a random order, when a name is resolved and more than one IP address is returned.
            Это может привести к тому, что IPv4 будет использоваться до IPv6 или наоборот.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.60.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPROXYPROTOCOL</constant></entry>
           <entry valign="top">
            &true; для отправки заголовка протокола HAProxy PROXY v1 в начале соединения.
            Действие по умолчанию - не отправлять заголовок.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.60.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_COMPRESSION</constant></entry>
           <entry valign="top">
            &true; для включения встроенного сжатия SSH. Это запрос, а указание;
            сервер может это и не выполнить.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.56.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            &true; для использования глобального кеша DNS. Этот параметр не
            является потокобезопасным. Он по умолчанию включён если PHP собран
            для потоконебезопасного использования (CLI, FCGI, Apache2-Prefork, и т.д.).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            &true; для подробного отчёта при неудаче, если полученный HTTP-код
            больше или равен 400. Поведение по умолчанию возвращает страницу
            как обычно, игнорируя код.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_FALSESTART</constant></entry>
           <entry valign="top">
            &true; для разрешения ложного старта TLS.
           </entry>
           <entry valign="top">
            Добавлено cURL 7.42.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            &true; для попытки получения даты модификации удалённого документа.
            Это значение может быть получено с помощью параметра <constant>CURLINFO_FILETIME</constant>
            из функции <function>curl_getinfo</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            &true; для следования любому заголовку
            <literal>"Location: "</literal>, отправленному сервером в своём
            ответе.
            Смотрите также <constant>CURLOPT_MAXREDIRS</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            &true; для принудительного закрытия соединения после
            завершения его обработки так, чтобы его нельзя было использовать
            повторно.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            &true; для принудительного использования нового соединения
            вместо закешированного.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            &true; для использования EPRT (и LPRT) при активных FTP-загрузках.
            Используйте &false; для того, чтобы отключить EPRT и LPRT
            и использовать только PORT.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            &true; для первоначальной пробы команды EPSV при FTP-передачах.
            Если команда не удалась, будет произведён обратный
            откат к PASV. Установите в &false; для отключения EPSV.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant></entry>
           <entry valign="top">
            &true; для создания отсутствующих директорий, если FTP-операция
            обнаруживает несуществующий путь.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            &true; для записи в конец удалённого файла, вместо перезаписывания.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_NODELAY</constant></entry>
           <entry valign="top">
            &true; для отключения алгоритма Нейгла, который пытается
            уменьшить количество мелких пакетов в сети.
           </entry>
           <entry valign="top">
            Доступна для версий собранных с libcurl 7.11.2 или новее.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            Псевдоним <constant>CURLOPT_TRANSFERTEXT</constant>.
            Используйте его вместо этого.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            &true; для возврата только списка имён из FTP-директории.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            &true; для включения заголовков в вывод.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            &true; для отслеживания строки запроса дескриптора.
           </entry>
           <entry valign="top">
            Префикс <constant>CURLINFO_</constant>
            используется специально.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP09_ALLOWED</constant></entry>
           <entry valign="top">
            Определяет разрешить ли ответы HTTP/0.9. По умолчанию &false; c версии libcurl 7.66.0;
            ранее по умолчанию было &true;.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.15 and 7.4.3, respectively, if built against libcurl &gt;= 7.64.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            &true; для сброса метода HTTP-запроса на метод GET.
            Так как GET используется по умолчанию, этот параметр необходим только
            в случае, если метод запроса был ранее изменён.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            &true; для туннелирования через указанный HTTP-прокси.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_CONTENT_DECODING</constant></entry>
           <entry valign="top">
            &false; для получения необработанного тела HTTP-ответа.
           </entry>
           <entry valign="top">
            Доступно, если собран с libcurl &gt;= 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant></entry>
           <entry valign="top">
            &true; для продолжения посылать тело запроса, если возвращаемый HTTP-код
            равен или больше 300. Действие по умолчанию - остановить отправку
            и закрыть поток или соединение. Подходит для ручной аутентификации NTLM.
            Большинству приложений эта опция не нужна.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0, если собран с libcurl &gt;= 7.51.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            &true; для полного отключения сообщений функций cURL.
           </entry>
           <entry valign="top">
            Удалена в cURL 7.15.5 (Можно использовать опцию CURLOPT_RETURNTRANSFER)
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            &true; для считывания файла <filename>~/.netrc</filename>,
            чтобы найти логин и пароль для удалённого сайта, с которым
            устанавливается соединение.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
            &true; для исключения тела ответа из вывода.
            Метод запроса устанавливается в HEAD. Смена этого параметра в &false;
            не меняет его обратно в GET.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top"><para>
            &true; для отмены индикатора прогресса при передачах cURL.
            <note>
             <para>
              PHP автоматически устанавливает этот параметр в &true;, меняйте
              его только для отладочных целей.
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            &true; для игнорирования любой функции cURL, посылающей сигналы
            PHP процессу. Этот параметр включён по умолчанию в многопоточных
            SAPI для корректной работы параметров тайм-аута.
           </entry>
           <entry valign="top">
            Добавлен в cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PATH_AS_IS</constant></entry>
           <entry valign="top">
            &true; для игнорирования последовательностей с двумя точками.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.42.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PIPEWAIT</constant></entry>
           <entry valign="top">
            &true; для ожидания конвейера/мультиплексирования.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.43.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            &true; для использования обычного HTTP POST. Данный метод POST
            использует обычный <literal>application/x-www-form-urlencoded</literal>,
            обычно используемый в HTML-формах.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            &true; для загрузки файла методом HTTP PUT. Используемый файл должен быть
            установлен с помощью параметров <constant>CURLOPT_INFILE</constant> и
            <constant>CURLOPT_INFILESIZE</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            &true; для возврата результата передачи в качестве строки из
            <function>curl_exec</function> вместо прямого вывода в браузер.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SASL_IR</constant></entry>
           <entry valign="top">
            &true; для разрешения отправки инициирующего ответа в первом пакете.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.31.10. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_ALPN</constant></entry>
           <entry valign="top">
            &false; для отключения ALPN в SSL handshake (если на бекенде SSL
            libcurl собран с её поддержкой), это можно использовать при соединении http2.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.36.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_NPN</constant></entry>
           <entry valign="top">
            &false; для отключения ALPN в SSL handshake (если на бэкенде SSL
            libcurl собран с её поддержкой), это можно использовать при соединении http2.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.36.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; для остановки cURL от проверки сертификата узла сети.
            Альтернативные сертификаты дл проверки могут быть указаны с помощью
            параметра <constant>CURLOPT_CAINFO</constant>, или директории с
            сертификатами, указываемой параметром <constant>CURLOPT_CAPATH</constant>.
           </entry>
           <entry valign="top">
            По умолчанию равно &true;, начиная с версии cURL 7.10.
            Дистрибутив по умолчанию устанавливается с версией cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYSTATUS</constant></entry>
           <entry valign="top">
            &true; для проверки статуса сертификата.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.41.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; для остановки cURL от проверки сертификата пира.
            Альтернативные сертификаты для проверки могут быть
            указаны с помощью параметра <constant>CURLOPT_CAINFO</constant>,
            а каталог сертификатов может быть указан с помощью
            параметра <constant>CURLOPT_CAPATH</constant>.
            Если установлено значение false, проверка сертификата однорангового узла завершается успешно несмотря ни на что.
           </entry>
           <entry valign="top">
            &true; по умолчанию. Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant></entry>
           <entry valign="top">
            &true; для подавления заголовков ответов прокси-сервера CONNECT из пользовательских callback-функции
            <constant>CURLOPT_HEADERFUNCTION</constant> и <constant>CURLOPT_WRITEFUNCTION</constant>,
            когда используется <constant>CURLOPT_HTTPPROXYTUNNEL</constant> и выполняется запрос CONNECT.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.54.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_FASTOPEN</constant></entry>
           <entry valign="top">
            &true; для разрешения TCP Fast Open.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.49.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TFTP_NO_OPTIONS</constant></entry>
           <entry valign="top">
            &true; для запрета посылки запроса TFTP опций.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.48.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            &true; для использования ASCII-режима при FTP-передачах. При использовании LDAP
            данные возвращаются простым текстом вместо HTML. В Windows системах поток
            <literal>STDOUT</literal> не устанавливается в бинарный режим.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
            &true; для продолжения отправки логина и пароля при редиректах
            (используя <constant>CURLOPT_FOLLOWLOCATION</constant>),
            даже при изменении имени хоста.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            &true; для подготовки к загрузке файла на сервер.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            &true; для вывода дополнительной информации. Записывает вывод в
            поток <literal>STDERR</literal>, или файл, указанный параметром
            <constant>CURLOPT_STDERR</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть типа
       <type>int</type>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
           <entry>Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            Размер буфера, используемого при каждом чтении. Однако, нет никакой
            гарантии что данный запрос будет завершён.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            Количество секунд ожидания при попытке соединения. Используйте
            0 для бесконечного ожидания.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            Количество миллисекунд ожидания при попытке соединения. Используйте
            0 для бесконечного ожидания.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Если библиотека libcurl скомпилирована с использованием стандартного системного
            преобразователя имён, то соединение будет по-прежнему использовать
            полносекундное ожидание в качестве тайм-аута с минимально допустимым
            тайм-аутом в 1 секунду.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            Количество секунд, в течение которых в памяти хранятся DNS-записи.
            По умолчанию этот параметр равен 120 (2 минуты).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Таймаут для ответов с заголовком Expect: 100-continue в миллисекундах.
            По умолчанию - 1000 миллисекунд.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.36.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Начало для ipv6 для алгоритма счастливые eyeballs. Счастливые eyeballs пытаются
            подключиться как к адресам IPv4, так и к адресам IPv6 для хостов с двумя стеками,
            предпочитая сначала IPv6 на время ожидания в миллисекундах.
            По умолчанию используется CURL_HET_DEFAULT, который в настоящее время составляет 200 миллисекунд.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.59.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            Метод FTP-аутентификации (в активном режиме):
            <literal>CURLFTPAUTH_SSL</literal> (сначала проверяется SSL),
            <literal>CURLFTPAUTH_TLS</literal> (сначала проверяется TLS) или
            <literal>CURLFTPAUTH_DEFAULT</literal> (cURL решает сама).
           </entry>
           <entry valign="top">
            Добавлен в cURL 7.12.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADEROPT</constant></entry>
           <entry valign="top">
            Что делать с заголовками. Одна из следующих опций:
            <simpara>
             <constant>CURLHEADER_UNIFIED</constant>: заголовки, указанные в
             <constant>CURLOPT_HTTPHEADER</constant> будут использованы в запросах
             к серверам и прокси. Если разрешена эта опция,
             <constant>CURLOPT_PROXYHEADER</constant> не будет иметь эффекта.
            </simpara>
            <simpara>
             <constant>CURLHEADER_SEPARATE</constant>: заголовки
             <constant>CURLOPT_HTTPHEADER</constant> будут отсылаться только
             на сервер, но не на прокси. На прокси заголовки должны посылаться
             <constant>CURLOPT_PROXYHEADER</constant>. Обратите внимание, что
             если запросы типа non-CONNECT будут слаться на прокси, то libcurl будет
             посылать как серверные, так и прокси заголовки. Если же происходит
             CONNECT, libcurl пошлёт на прокси только заголовки <constant>CURLOPT_PROXYHEADER</constant>,
             а потом заголовки <constant>CURLOPT_HTTPHEADER</constant> только на сервер.
            </simpara>
            <simpara>
             По умолчанию <constant>CURLHEADER_SEPARATE</constant>, начиная с cURL
             7.42.1, и <constant>CURLHEADER_UNIFIED</constant> до него.
            </simpara>
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.37.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <constant>CURL_HTTP_VERSION_NONE</constant> (по умолчанию CURL сам
            выбирает используемую версию), <constant>CURL_HTTP_VERSION_1_0</constant>
            (принудительное использование HTTP/1.0), <constant>CURL_HTTP_VERSION_1_1</constant>
            (принудительное использование HTTP/1.1), <constant>CURL_HTTP_VERSION_2_0</constant>
            (принудительное использование HTTP/2.0), <constant>CURL_HTTP_VERSION_2</constant>
            (принудительное использование HTTP/2.0, алиас <constant>CURL_HTTP_VERSION_2_0</constant>), <constant>CURL_HTTP_VERSION_2TLS</constant>
            (принудительное использование HTTP/2.0 только по TLS (HTTPS), доступно с PHP 7.0), <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant>
            (принудительное использование HTTP/2.0 HTTP-запросы без TLS).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             Используемые HTTP-методы авторизации. Используемые параметры:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_DIGEST</constant>,
             <constant>CURLAUTH_GSSNEGOTIATE</constant>,
             <constant>CURLAUTH_NTLM</constant>,
             <constant>CURLAUTH_ANY</constant> и
             <constant>CURLAUTH_ANYSAFE</constant>.
            </para>
            <para>
             Можно использовать побитовый оператор <literal>|</literal> (или) для комбинации
             нескольких методов вместе. В этом случае cURL опросит сервер на предмет
             поддерживаемых методов авторизации и выберет лучший из них.
            </para>
            <para>
             <constant>CURLAUTH_ANY</constant> - это псевдоним
             <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
            <para>
             <constant>CURLAUTH_ANYSAFE</constant> - это псевдоним
             <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            Ожидаемый размер файла в байтах при загрузке файла на удалённый сервер.
            Учтите, что использование этой опции не остановит дальнейшую посылку данных,
            превышающих это значение, так как посылаемые данные зависят от результата
            <constant>CURLOPT_READFUNCTION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            Верхний порог скорости передачи данных, в байтах в секунду. Проверка происходит
            в течение <constant>CURLOPT_LOW_SPEED_TIME</constant> секунд, после чего
            PHP считает передачу слишком медленной и прерывает её.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            Максимальное количество секунд, в течение которых скорость передачи
            не должна превышать <constant>CURLOPT_LOW_SPEED_LIMIT</constant>, иначе
            PHP пометит передачу как слишком медленную и прекратит её.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            Максимальное количество постоянных соединений.
            При достижении лимита для определения закрываемого соединения
            используется параметр <constant>CURLOPT_CLOSEPOLICY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            Максимальное количество принимаемых редиректов. Используйте этот параметр
            вместе с параметром <constant>CURLOPT_FOLLOWLOCATION</constant>.
            Значение по умолчанию <literal>20</literal> установлено для предотвращения бесконечных перенаправлений.
            Значение <literal>-1</literal> разрешает бесконечные перенаправления, а <literal>0</literal>
            отклоняет все перенаправления.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            Альтернативный порт соединения.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTREDIR</constant></entry>
           <entry valign="top">
            Битовая маска, содержащая 1 (301 Moved Permanently), 2 (302 Found)
            и 4 (303 See Other), чтобы задавать должен ли метод HTTP POST обрабатываться при
            включённой опции <constant>CURLOPT_FOLLOWLOCATION</constant>, если
            произошёл указанный тип перенаправления.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             Битовая маска из значений <constant>CURLPROTO_*</constant>. Данная маска
             ограничивает используемые libcurl протоколы. Это позволяет иметь libcurl,
             работающую с большим количеством протоколов, и ограничивать работу
             определённых передач только для некоторого их набора. По умолчанию libcurl
             использует все поддерживаемые протоколы.
             Смотрите также параметр <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
            </para>
            <para>
             Корректные значения протоколов:
             <constant>CURLPROTO_HTTP</constant>,
             <constant>CURLPROTO_HTTPS</constant>,
             <constant>CURLPROTO_FTP</constant>,
             <constant>CURLPROTO_FTPS</constant>,
             <constant>CURLPROTO_SCP</constant>,
             <constant>CURLPROTO_SFTP</constant>,
             <constant>CURLPROTO_TELNET</constant>,
             <constant>CURLPROTO_LDAP</constant>,
             <constant>CURLPROTO_LDAPS</constant>,
             <constant>CURLPROTO_DICT</constant>,
             <constant>CURLPROTO_FILE</constant>,
             <constant>CURLPROTO_TFTP</constant>,
             <constant>CURLPROTO_ALL</constant>
            </para>
           </entry>
           <entry valign="top">
            Добавлен в cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            Методы авторизации HTTP, используемые при соединении с прокси-сервером.
            Используйте те же самые битовые маски, которые были описаны у параметра
            <constant>CURLOPT_HTTPAUTH</constant>. В данный момент для авторизации прокси
            поддерживаются только <constant>CURLAUTH_BASIC</constant> и
            <constant>CURLAUTH_NTLM</constant>.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            Номер порта прокси-сервера, к которому осуществляется
            соединение. Этот номер также может быть установлен
            с помощью параметра <constant>CURLOPT_PROXY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            Либо <constant>CURLPROXY_HTTP</constant> (по умолчанию), либо
            <constant>CURLPROXY_SOCKS4</constant>,
            <constant>CURLPROXY_SOCKS5</constant>,
            <constant>CURLPROXY_SOCKS4A</constant> или
            <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
            Битовая маска из значений <constant>CURLPROTO_*</constant>.
            Данная битовая маска ограничивает протоколы, используемые
            libcurl при редиректе (при включённом параметре
            <constant>CURLOPT_FOLLOWLOCATION</constant>).
            Это позволяет ограничить набор используемых протоколов при редиректах для
            некоторых передач. По умолчанию, libcurl поддерживает все протоколы, кроме
            FILE и SCP. В версиях, предшествовавших 7.19.4, перенаправление
            использовалось для всех протоколов без исключения.
            Смотрите также описание параметра <constant>CURLOPT_PROTOCOLS</constant>
            для списка констант со значениями протоколов.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            Смещение в байтах для возобновления передачи.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SOCKS5_AUTH</constant></entry>
           <entry valign="top">
            <para>
             Метод аутентификации SOCKS5, который нужно использовать. Варианты:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_GSSAPI</constant>,
             <constant>CURLAUTH_NONE</constant>.
            </para>
            <para>
             Побитовый оператор <literal>|</literal> (или) можно использовать для объединения
             нескольких методов. Если это будет сделано, cURL будет опрашивать сервер, чтобы выяснить,
             какие методы он поддерживает, и выбрать наилучший.
            </para>
            <para>
             <constant>CURLAUTH_BASIC</constant> разрешает аутентификацию по constant пользователя/пароля.
            </para>
            <para>
             <constant>CURLAUTH_GSSAPI</constant> разрешает аутентификацию GSS-API.
            </para>
            <para>
             <constant>CURLAUTH_NONE</constant> не разрешает аутентификацию.
            </para>
            <para>
             По умолчанию <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
             Установите действительное имя пользователя и пароль с помощью параметра <constant>CURLOPT_PROXYUSERPWD</constant>.
            </para>
           </entry>
           <entry valign="top">
            Доступно с 7.3.0 и curl &gt;= 7.55.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Устанавливает опции поведения SSL. Битовая маска из следующих констант:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: не пытаться найти обходной
             путь для изъяна в безопасности протоколов SSL3 и TLS1.0.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: не производить проверку, отозван
             ли сертификат, для тех SSL бэкендов, где оно есть.
            </simpara>
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.25.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            Используйте <literal>2</literal>, чтобы убедиться, что поле общего имени
            или поле альтернативного имени субъекта в сертификате узла SSL соответствует указанному имени хоста.
            Используйте <literal>0</literal>, чтобы не проверять имена.
            <literal>1</literal> не следует использовать.
            В боевом окружении значение этого параметра должно
            быть <literal>2</literal> (установлено по умолчанию).
           </entry>
           <entry valign="top">
            Поддержка значения <literal>1</literal> убрана в cURL 7.28.1
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            Одна из констант <constant>CURL_SSLVERSION_DEFAULT</constant> (0),
            <constant>CURL_SSLVERSION_TLSv1</constant> (1),
            <constant>CURL_SSLVERSION_SSLv2</constant> (2),
            <constant>CURL_SSLVERSION_SSLv3</constant> (3),
            <constant>CURL_SSLVERSION_TLSv1_0</constant> (4),
            <constant>CURL_SSLVERSION_TLSv1_1</constant> (5) или
            <constant>CURL_SSLVERSION_TLSv1_2</constant> (6).
            Максимальная версия TLS может быть установлена с помощью одной из констант <constant>CURL_SSLVERSION_MAX_*</constant>.
            Также можно ИЛИ одну из констант <constant>CURL_SSLVERSION_*</constant> с одной из констант <constant>CURL_SSLVERSION_MAX_*</constant>.
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant>(максимальная версия, поддерживаемая библиотекой),
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>, or
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant>.
            <note>
             <para>
              Рекомендуется не устанавливать эту опцию и оставить значение по умолчанию.
              Установка в 2 или 3 опасно и допускает применение известных уязвимостей в SSLv2 и SSLv3.
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Задайте параметры поведения SSL прокси, которые являются битовой маской любой из следующих констант:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: не пытайтесь использовать
             обходные пути для устранения уязвимости в протоколах SSL3 и TLS1.0.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: отключите проверки
             отзыва сертификатов для тех бэкендов SSL, где такое поведение
             присутствует. (curl &gt;= 7.44.0)
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>: не принимайте "частичные"
             цепочки сертификатов, что в противном случае делается по умолчанию. (curl &gt;= 7.68.0)
            </simpara>
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            Установите значение <literal>2</literal> для проверки в полях имени сертификата прокси-сервера HTTPS по отношению к имени прокси-сервера.
            Когда установлено значение <literal>0</literal>, соединение успешно выполняется независимо от имён, используемых в сертификате.
            Используйте эту способность с осторожностью!
            <literal>1</literal> рассматривается как опция отладки в curl 7.28.0 и более ранних версиях.
            С версии curl 7.28.1 до 7.65.3 возвращена <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant>.
            Начиная с curl 7.66.0 и далее <literal>1</literal> и <literal>2</literal> обрабатываются как одно и то же значение.
            В продакшене значение этой опции должно быть <literal>2</literal> (значение по умолчанию).
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLVERSION</constant></entry>
           <entry valign="top">
            Одна из <constant>CURL_SSLVERSION_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_TLSv1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_TLSv1_3</constant>,
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant> или
            <constant>CURL_SSLVERSION_SSLv3</constant>.
            <note>
             <para>
              Лучше всего не устанавливать это и разрешать использовать значение по умолчанию <constant>CURL_SSLVERSION_DEFAULT</constant>,
              которое попытается выяснить версию протокола удалённого SSL.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STREAM_WEIGHT</constant></entry>
           <entry valign="top">
            Установить вес цифрового потока (число между 1 и 256).
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.46.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPALIVE</constant></entry>
           <entry valign="top">
            Если установлено значение <literal>1</literal>, будут отправлены пробные сообщения поддержки активности TCP. Задержку и
            частоту этих проб можно контролировать с помощью параметров <constant>CURLOPT_TCP_KEEPIDLE</constant> и
            <constant>CURLOPT_TCP_KEEPINTVL</constant>, если операционная система их
            поддерживает. Если установлено значение <literal>0</literal> (по умолчанию), пробные сообщения проверки активности отключены.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPIDLE</constant></entry>
           <entry valign="top">
            Устанавливает задержку в секундах, в течение которой операционная система будет ждать, пока соединение находится в режиме ожидания,
            перед отправкой проб проверки активности,
            если включено <constant>CURLOPT_TCP_KEEPALIVE</constant>. Не все операционные системы поддерживают эту опцию.
            По умолчанию установлено значение <literal>60</literal>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPINTVL</constant></entry>
           <entry valign="top">
            Устанавливает интервал в секундах, в течение которого операционная система будет ожидать между
            отправкой проб проверки активности, если включено <constant>CURLOPT_TCP_KEEPALIVE</constant>.
            Не все операционные системы поддерживают эту опцию.
            По умолчанию установлено значение <literal>60</literal>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            Способ трактовки параметра <constant>CURLOPT_TIMEVALUE</constant>.
            Используйте <constant>CURL_TIMECOND_IFMODSINCE</constant> для
            возвращения страницы, только если она была изменена со времени,
            указанного в параметре <constant>CURLOPT_TIMEVALUE</constant>.
            Если страница не была изменена, вернётся заголовок
            <literal>"304 Not Modified"</literal>, подразумевая, что
            параметр<constant>CURLOPT_HEADER</constant> установлен в &true;.
            Используйте <constant>CURL_TIMECOND_IFUNMODSINCE</constant> для обратного эффекта.
            Используйте <constant>CURL_TIMECOND_NONE</constant>, чтобы игнорировать
            <constant>CURLOPT_TIMEVALUE</constant> и всегда возвращать страницу.
            По умолчанию используется <constant>CURL_TIMECOND_NONE</constant>.
           </entry>
           <entry valign="top">
            До cURL 7.46.0 значение по умолчанию было <constant>CURL_TIMECOND_IFMODSINCE</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            Максимально позволенное количество секунд для выполнения
            cURL-функций.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Максимально позволенное количество миллисекунд для выполнения
            cURL-функций.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Если libcurl собрана с использованием обычного системного
            распознавателя имён, то этот промежуток соединения всё ещё
            будет использовать секундное округление тайм-аутов,
            с минимально разрешённым тайм-аутом в одну секунду.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            Количество секунд, начиная с 1 января 1970 года. Это время
            будет использовано параметром
            <constant>CURLOPT_TIMECONDITION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE_LARGE</constant></entry>
           <entry valign="top">
            Время в секундах с 1 января 1970 года. Время будет использовано <constant>CURLOPT_TIMECONDITION</constant>. По умолчанию ноль.
            Разница между этой опцией и <constant>CURLOPT_TIMEVALUE</constant>
            заключается в типе аргумента. В системах, где 'long' имеет размер всего 32 бита,
            этот параметр необходимо использовать для установки дат после 2038 года.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.59.0. Доступно с PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Если скорость скачки превысит это значение (указанное в байтах
            в секунду) в среднем в течение всей передачи, то скачка будет
            приостановлена для поддержания средней скорости меньше либо равной
            данному параметру. По умолчанию скорость не ограничивается.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Если загрузка на сервер превысит это значение (указанное в байтах
            в секунду) в среднем в течение всей передачи, то загрузка будет
            приостановлена для поддержания средней скорости меньше либо равной
            данному параметру. По умолчанию скорость не ограничивается.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_AUTH_TYPES</constant></entry>
           <entry valign="top">
            Битовая маска, состоящая из одной или более констант:
            <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
            <constant>CURLSSH_AUTH_PASSWORD</constant>,
            <constant>CURLSSH_AUTH_HOST</constant>,
            <constant>CURLSSH_AUTH_KEYBOARD</constant>. Установите
            <constant>CURLSSH_AUTH_ANY</constant>, чтобы libcurl сам выбрал одну из них.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_IPRESOLVE</constant></entry>
           <entry valign="top">
            Позволяет приложению выбрать вид IP-адреса, с которым определяется имя хоста.
            Это необходимо, если используется имя хоста, которое получается с использованием
            более одной версии IP адреса. Возможными значениями могут быть
            <constant>CURL_IPRESOLVE_WHATEVER</constant>,
            <constant>CURL_IPRESOLVE_V4</constant>,
            <constant>CURL_IPRESOLVE_V6</constant>, и по умолчанию
            <constant>CURL_IPRESOLVE_WHATEVER</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.10.8.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_FILEMETHOD</constant></entry>
           <entry valign="top">
            Какой метод использовать, чтобы достать файл на сервере FTP. Варианты:
            <constant>CURLFTPMETHOD_MULTICWD</constant>,
            <constant>CURLFTPMETHOD_NOCWD</constant> и
            <constant>CURLFTPMETHOD_SINGLECWD</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.15.1.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть типа
       <type>string</type>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
           <entry>Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant></entry>
           <entry valign="top">
            Позволяет использовать абстрактный доменный сокет Unix вместо
            установления TCP-соединения с хостом и устанавливает путь
            к указанной строке (<type>string</type>). Эта опция использует ту же семантику,
            что и <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Эти два параметра
            совместно используют одно и то же хранилище, поэтому для каждого дескриптора можно установить только
            один из них.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и cURL 7.53.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            Имя файла, содержащего один или более сертификатов, с которыми
            будут сверяться узлы. Этот параметр имеет смысл только при
            использовании совместно с <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
            Может потребоваться абсолютный путь.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            Директория, содержащая несколько CA сертификатов.
            Используйте этот параметр совместно с
            <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"Cookie: "</literal>,
            используемого в HTTP-запросе.
            Обратите внимание, что несколько cookies разделяются
            точкой с запятой с последующим пробелом
            (например, "<literal>fruit=apple; colour=red</literal>")
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            Имя файла, содержащего cookies. Данный файл должен быть
            в формате Netscape или просто заголовками HTTP, записанными
            в файл.
            Если в качестве имени файла передана пустая строка, то cookies
            сохраняться не будут, но их обработка всё ещё будет включена.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            Имя файла, в котором будут сохранены все внутренние cookies
            текущей передачи после закрытия дескриптора, например,
            после вызова curl_close.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIELIST</constant></entry>
           <entry valign="top">
            Строка cookie (т.е. одна строка в формате Netscape/Mozilla или обычный заголовок
            Set-Cookie в стиле HTTP) добавляет этот единственный cookie во внутреннее хранилище cookie.
            <literal>"ALL"</literal> удаляет все файлы cookie, хранящиеся в памяти.
            <literal>"SESS"</literal> удаляет все файлы cookie сессии, хранящиеся в памяти.
            <literal>"FLUSH"</literal> записывает все известные файлы cookie в файл, указанный в <constant>CURLOPT_COOKIEJAR</constant>.
            <literal>"RELOAD"</literal> загружает все файлы cookie из файлов, указанных в <constant>CURLOPT_COOKIEFILE</constant>.
           </entry>
           <entry valign="top">
            Доступно с cURL 7.14.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top"><para>
            Собственный метод запроса, используемый вместо
            <literal>"GET"</literal> или <literal>"HEAD"</literal>
            при выполнении HTTP-запроса. Это полезно при запросах
            <literal>"DELETE"</literal> или других, более редких HTTP-запросах.
            Корректными значениями будут такие как <literal>"GET"</literal>,
            <literal>"POST"</literal>, <literal>"CONNECT"</literal> и так далее;
            т.е. не вводите здесь всю строку с HTTP-запросом. Например,
            указание <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
            будет неправильным.
            <note>
             <para>
              Не используйте эту возможность пока не убедитесь, что
              сервер поддерживает данный тип запроса.
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DEFAULT_PROTOCOL</constant></entry>
           <entry valign="top"><para>
            Протокол по умолчанию, если он отсутствует в схеме URL.
            </para></entry>
           <entry valign="top">
            Добавлено в cURL 7.45.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_INTERFACE</constant></entry>
           <entry valign="top"><para>
            Устанавливает имя сетевого интерфейса, к которому привязан DNS.
            Это должно быть имя интерфейса, а не адрес.
            </para></entry>
           <entry valign="top">
            Добавлено в cURL 7.33.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP4</constant></entry>
           <entry valign="top"><para>
            Установить локальный IPv4-адрес, по которому доступне DNS.
            Адрес должен быть представлен в виде строки, содержащий одно число.
            </para></entry>
           <entry valign="top">
            Добавлено в cURL 7.33.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP6</constant></entry>
           <entry valign="top"><para>
            Установить локальный IPv6-адрес, по которому доступне DNS.
            Адрес должен быть представлен в виде строки, содержащий одно число.
            </para></entry>
           <entry valign="top">
            Добавлено в cURL 7.33.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            Наподобие <constant>CURLOPT_RANDOM_FILE</constant>, за исключением
            того, что имя файла устанавливается в сокет Entropy
            Gathering Daemon.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"Accept-Encoding: "</literal>.
            Это позволяет декодировать запрос. Поддерживаемыми
            кодировками являются <literal>"identity"</literal>,
            <literal>"deflate"</literal> и <literal>"gzip"</literal>.
            Если передана пустая строка, <literal>""</literal>,
            посылается заголовок, содержащий все поддерживаемые
            типы кодировок.
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            Значение, которое будет использоваться для определения
            IP-адреса для команды "PORT" FTP-протокола. Команда "PORT"
            сообщает серверу, с каким IP-адресом он должен устанавливать
            соединение. Это может быть IP-адрес, имя хоста, имя сетевого
            интерфейса (под Unix) или просто '-' для использования системного
            IP-адреса по умолчанию.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            Имя используемого сетевого интерфейса. Может быть
            именем интерфейса, IP адресом или именем хоста.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEYPASSWD</constant></entry>
           <entry valign="top">
            Пароль, который требуется для использования закрытого ключа <constant>CURLOPT_SSLKEY</constant>
            или <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            Уровень безопасности KRB4 (Kerberos 4). Любое из следующих
            значений (в порядке от слабого к самому сильному) корректно:
            <literal>"clear"</literal>,
            <literal>"safe"</literal>,
            <literal>"confidential"</literal>,
            <literal>"private".</literal>.
            Если указанная строка отличается от данных значений,
            будет использовано значение <literal>"private"</literal>.
            Установка этого параметра в &null; полностью отключит
            безопасность KRB4. На данный момент безопасность KRB4
            работает только с FTP-транзакциями.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOGIN_OPTIONS</constant></entry>
           <entry valign="top">
            Используется для установки специфичных для протокола настроек логина,
            таких как предпочитаемый механизм аутентификации "AUTH=NTLM" или "AUTH=*",
            и должна использоваться совместно с <constant>CURLOPT_USERNAME</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.34.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Устанавливает зафиксированный открытый ключ.
            Строка должны содержать имя файла, в котором лежит ваш зафиксированный
            открытый ключ. Ожидается формат файла "PEM" или "DEX".
            Строка также может быть числом  в формате base64, закодированным sha256 с
            префиксом "sha256//" и разделённая точкой с запятой ";".
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.39.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            <simpara>
             Все данные, передаваемые в HTTP POST-запросе.
             Этот параметр может быть передан
             как в качестве url-закодированной строки, наподобие
             '<literal>para1=val1&amp;para2=val2&amp;...</literal>', так и
             в виде массива, ключами которого будут имена полей, а значениями
             - их содержимое.
             Если <parameter>value</parameter> является массивом,
             заголовок <literal>Content-Type</literal> будет установлен в
             значение <literal>multipart/form-data</literal>.
            </simpara>
            <simpara>
             Файлы можно отправлять с использованием <classname>CURLFile</classname>,
             в этом случае <parameter>value</parameter> должен быть массивом.
            </simpara>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRIVATE</constant></entry>
           <entry valign="top">
            Любые данные, которые должны связаны с этим дескриптором cURL.
            Эти данные могут быть выбраны подзапросом опции
            <constant>CURLINFO_PRIVATE</constant> функции
            <function>curl_getinfo</function>. cURL ничего не делает с этими данными.
            Если используется множество дескрипторов cURL, эти данные обычно используются
            как уникальный ключ для определения дескриптора cURL.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRE_PROXY</constant></entry>
           <entry valign="top">
            Задайте строку (<type>string</type>), содержащую имя хоста или
            IP-адрес, который будет использоваться в качестве прокси-сервера, к которому подключается curl, прежде чем
            он подключится к прокси-серверу HTTP(S), указанному в
            опции <constant>CURLOPT_PROXY</constant> для предстоящего запроса.
            Предварительный прокси-сервер может быть только SOCKS-прокси, и перед ним должен стоять префикс
            <literal>[scheme]://</literal>, чтобы указать, какой тип socks используется.
            Числовой адрес IPv6 должен быть написан в [скобках].
            Установка препрокси в пустую строку явно отключает использование препрокси.
            Чтобы указать номер порта в этой строке, добавьте <literal>:[port]</literal>
            в конец имени хоста. Номер порта прокси-сервера может быть дополнительно
            указан с помощью отдельной опции <constant>CURLOPT_PROXYPORT</constant>.
            По умолчанию используется порт 1080 для прокси, если порт не указан.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            HTTP-прокси, через который будут направляться запросы.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SERVICE_NAME</constant></entry>
           <entry valign="top">
            Имя сервиса аутентификации прокси.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.34.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAINFO</constant></entry>
           <entry valign="top">
            Путь к прокси-серверу центра сертификации. Задайте путь в виде
            строки (<type>string</type>) с именем файла, содержащего один или несколько сертификатов
            для проверки прокси с помощью HTTPS.
            Этот параметр предназначен для подключения к прокси-серверу HTTPS, а не к серверу HTTPS.
            По умолчанию задан системный путь, где предполагается хранить пакет cacert libcurl.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAPATH</constant></entry>
           <entry valign="top">
            Каталог, содержащий несколько сертификатов центра сертификации для проверки прокси HTTPS.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CRLFILE</constant></entry>
           <entry valign="top">
            Задайте имя файла с помощью конкатенации CRL (списка отзыва сертификатов)
            в формате PEM для использования при проверке сертификата, которая происходит
            во время обмена SSL.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_KEYPASSWD</constant></entry>
           <entry valign="top">
            Установите строку, используемую в качестве пароля, необходимого для использования
            закрытого ключа <constant>CURLOPT_PROXY_SSLKEY</constant>. Вам не нужен
            пароль для загрузки сертификата, но вам нужен пароль для загрузки вашего закрытого ключа.
            Этот параметр предназначен для подключения к прокси-серверу HTTPS, а не к серверу HTTPS.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Установите закреплённый открытый ключ для HTTPS-прокси. Строка может быть именем файла
            вашего закреплённого открытого ключа. Ожидаемый формат файла: "PEM" или "DER".
            Строка также может быть любым количеством закодированных в base64 хешей sha256, которым предшествует
            "sha256//" и разделяются ";"
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERT</constant></entry>
           <entry valign="top">
            Имя файла вашего клиентского сертификата, используемого для подключения к прокси HTTPS.
            Формат по умолчанию - "P12" в Secure Transport и "PEM" в других движках;
            его можно изменить с помощью <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
            С NSS или Secure Transport это также может быть псевдоним сертификата,
            с которым вы хотите пройти аутентификацию, так как он назван в базе данных безопасности.
            Если вы хотите использовать файл из текущего каталога, пожалуйста, добавьте к нему
            префикс "./", чтобы избежать путаницы с псевдонимом.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            Формат сертификата вашего клиента, используемый при подключении к HTTPS-прокси.
            Поддерживаемые форматы: "PEM" и "DER", за исключением Secure Transport.
            OpenSSL (версии 0.9.3 и новее) и Secure Transport
            (в iOS 5 или новее или OS X 10.7 или новее) также поддерживают "P12"
            для файлов в кодировке PKCS#12. По умолчанию "PEM".
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            Список шифров, используемых для подключения к прокси HTTPS.
            Список должен быть синтаксически правильным, он состоит из одной или нескольких строк шифров,
            разделённых двоеточиями. Запятые или пробелы также являются допустимыми разделителями,
            но обычно качестве операторов используются двоеточия, !, - и +.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            Список наборов шифров, которые будут использоваться для подключения TLS 1.3 к прокси.
            Список должен быть синтаксически правильным, он состоит из одной или нескольких
            строк набора шифров, разделённых двоеточиями. Эта опция в настоящее время используется
            только тогда, когда curl собран для использования OpenSSL 1.1.1 или новее.
            Если вы используете другой бэкенд SSL, вы можете попытаться установить
            наборы шифров TLS 1.3, используя параметр <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.61.0.
            Доступно при сборке с OpenSSL &gt;= 1.1.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEY</constant></entry>
           <entry valign="top">
            Имя файла вашего личного ключа, используемого для подключения к прокси HTTPS.
            Формат по умолчанию - "PEM", и его можно изменить с помощью
            <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
            (Только для iOS и Mac OS X). Этот параметр игнорируется, если curl был создан для Secure Transport.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
            Доступно, если включён встроенный TLS.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            Формат вашего закрытого ключа. Поддерживаемые форматы: "PEM", "DER" и "ENG".
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant></entry>
           <entry valign="top">
            Пароль, используемый для метода аутентификации TLS, указанного
            в параметре <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Требует, чтобы
            также был установлен параметр <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant></entry>
           <entry valign="top">
            Метод аутентификации TLS, используемый для соединения HTTPS. Поддерживаемый метод - "SRP".
            <note>
             <para>
              Аутентификация Secure Remote Password (SRP) для TLS обеспечивает взаимную аутентификацию,
              если обе стороны имеют общий секрет. Чтобы использовать TLS-SRP, вы также должны установить
              параметры <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> и
              <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant></entry>
           <entry valign="top">
            Имя пользователя, которое будет использоваться для метода аутентификации TLS прокси-сервера HTTPS, указанного в параметре
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Требует, чтобы параметр
            <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> также был установлен.
           </entry>
           <entry valign="top">
            Доступно с PHP 7.3.0 и libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
            Логин и пароль, записанные в виде
            <literal>"[username]:[password]"</literal>, используемые при
            соединении через прокси.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            Имя файла, используемого для инициализации генератора
            случайных чисел для SSL.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            Диапазон данных, которые нужно загрузить, в формате
            <literal>"X-Y"</literal>, причём либо X, либо Y могут быть
            опущены. Протокол HTTP также поддерживает передачу
            нескольких диапазонов, разделённых запятыми, они задаются
            в формате <literal>"X-Y,N-M"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"Referer: "</literal>, который будет
            использован в HTTP-запросе.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SERVICE_NAME</constant></entry>
           <entry valign="top">
            Имя сервиса аутентификации.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.43.0. доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant></entry>
           <entry valign="top">
            Строка, содержащая 32 шестнадцатеричных цифры. Строка должна являться
            контрольной суммой по алгоритму MD5 открытого ключа удалённого компьютера и libcurl будет сбрасывать
            соединение к удалённому хосту до тех пор, пока контрольная сумма не будет соответствовать публичному ключу.
            Эта опция предназначена только для передачи данных с помощью SCP и SFTP.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.17.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant></entry>
           <entry valign="top">
            Имя файла для вашего публичного ключа. Если не задано, то libcurl использует по
            умолчанию файл $HOME/.ssh/id_dsa.pub, если переменная окружения HOME установлена и
            файл "id_dsa.pub" в текущей директории, если переменная HOME не установлена.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant></entry>
           <entry valign="top">
            Имя файла для вашего приватного ключа. Если не задано, то libcurl использует по
            умолчанию файл $HOME/.ssh/id_dsa, если переменная окружения HOME установлена и
            файл "id_dsa" в текущей директории, если переменная HOME не установлена.
            Если файл защищён паролем, установите пароль с помощью
            <constant>CURLOPT_KEYPASSWD</constant>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            Список шифров, используемый в SSL-передачах. Например,
            <literal>RC4-SHA</literal> и <literal>TLSv1</literal> являются
            корректными списками шифров.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            Имя файла с корректно отформатированным PEM-сертификатом.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            Пароль, необходимый для использования сертификата
            <constant>CURLOPT_SSLCERT</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            Формат сертификата. Поддерживаются форматы
            <literal>"PEM"</literal> (по умолчанию), <literal>"DER"</literal>
            и <literal>"ENG"</literal>.
            Начиная с OpenSSL 0.9.3, <literal>"P12"</literal> (для файлов, закодированных в PKCS#12)
           </entry>
           <entry valign="top">
            Добавлен в версии cURL 7.9.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            Идентификатор механизма шифрования для закрытого ключа SSL,
            указанного в параметре <constant>CURLOPT_SSLKEY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            Идентификатор механизма шифрования, используемого для
            ассиметричных операций шифрования.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            Имя файла с закрытым ключом SSL.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top"><para>
            Тайный пароль, необходимый для использования закрытого
            ключа SSL, указанного параметром
            <constant>CURLOPT_SSLKEY</constant>.
            <note>
             <para>
              Так как этот параметр содержит ценный пароль, помните,
              что данный PHP-скрипт нужно хранить в безопасном месте.
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            Тип закрытого ключа SSL, указанного в параметре
            <constant>CURLOPT_SSLKEY</constant>. Поддерживаются следующие
            типы ключей:
            <literal>"PEM"</literal> (по умолчанию), <literal>"DER"</literal>
            и <literal>"ENG"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            Список комплектов шифров для использования в соединении TLS 1.3. Список должен быть
            синтаксически правильным, он состоит из одной или нескольких строк набора шифров, разделённых двоеточиями.
            Эта опция в настоящее время используется только тогда, когда curl собран для использования OpenSSL 1.1.1 или новее.
            Если вы используете другой бэкенд SSL, вы можете попробовать установить
            наборы шифров TLS 1.3, используя параметр <constant>CURLOPT_SSL_CIPHER_LIST</constant>.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.61.0. Available when built with OpenSSL &gt;= 1.1.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNIX_SOCKET_PATH</constant></entry>
           <entry valign="top">
            Разрешает использовать доменные сокеты UNIX в качестве конечной точки для
            соединения и устанавливает путь к ним равным заданной строке (<type>string</type>).
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.40.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            Загружаемый URL. Данный параметр может быть также установлен
            при инициализации сеанса с помощью <function>curl_init</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            Содержимое заголовка <literal>"User-Agent: "</literal>, посылаемого
            в HTTP-запросе.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERNAME</constant></entry>
           <entry valign="top">
            Имя пользователя для аутентификации.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWORD</constant></entry>
           <entry valign="top">
            Пароль для аутентификации.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            Логин и пароль, используемые при соединении,
            указанные в формате
            <literal>"[username]:[password]"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XOAUTH2_BEARER</constant></entry>
           <entry valign="top">
            Задаёт токен доступа OAuth 2.0.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.33.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть массивом:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
           <entry>Замечания</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_TO</constant></entry>
           <entry valign="top">
            Соединяться с указанный хостом по указанному порту, игнорируя URL.
            Принимает массив строк формата
            <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.49.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            Массив HTTP 200 ответов, которые будут трактоваться
            корректными ответами, а не ошибочными.
           </entry>
           <entry valign="top">
            Добавлен в cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            Массив устанавливаемых HTTP-заголовков, в формате
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            Массив FTP-команд, выполняемых на сервере, после выполнения
            FTP-запроса.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYHEADER</constant></entry>
           <entry valign="top">
            Массив пользовательских HTTP-заголовков для отправки на прокси
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.37.0. Доступно с PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            Массив FTP-команд, выполняемых на сервере, перед выполнением
            FTP-запроса.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESOLVE</constant></entry>
           <entry valign="top">
            Предоставляет адрес для определённой пары хоста и порта. Массив,
            содержащий строки состоящие из имени хоста, порта и IP-адреса,
            разделённых двоеточием. Пример:
            <code>
             array("example.com:80:127.0.0.1")
            </code>
           </entry>
           <entry valign="top">
            Добавлено в cURL 7.21.3.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть потоковым
       дескриптором (возвращаемым, например, функцией <function>fopen</function>):
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            Файл, в который будет записан результат передачи. По умолчанию
            используется поток вывода <literal>STDOUT</literal> (окно браузера).
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            Файл, из которого должно идти чтение данных, при загрузке на сервер.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            Альтернативный файл для вывода ошибок, используемый вместо потока ошибок
            <literal>STDERR</literal>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            Файл, в который будут записаны заголовки текущей операции.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Для следующих значений параметра <parameter>option</parameter>,
       параметр <parameter>value</parameter> должен быть правильным именем функции
       или замыканием:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает два параметра.
            Первым параметром является дескриптор cURL, вторым параметром
            является строка с записываемыми заголовками. Заголовки должны
            быть записаны с помощью данной callback-функции. Должна возвратить
            количество записанных байт.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает три параметра.
            Первым параметром является дескриптор cURL, вторым параметром
            является строка с запросом пароля, третьим параметром является
            максимальная длина пароля. Должна возвратить строку, содержащую пароль.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            <para>
             Callback-функция принимает пять параметров.
             Первый является декскриптором cURL, второй - общим количеством байт,
             которое ожидается загрузить с сервера, третий - количество уже загруженных байт,
             четвёртый - общее количество байт, которое ожидается отправить на сервер,
             и пятый - количество уже отправленных байт.
            </para>
            <note>
             <para>
              Callback-функция вызывается только, если опция <constant>CURLOPT_NOPROGRESS</constant>
              установлена в значение &false;.
             </para>
            </note>
            <para>
             Можно вернуть ненулевое значение, чтобы отменить передачу.
             В этом случае будет выдана ошибка <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
            </para>
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает три параметра.
            Первым параметром является дескриптор cURL,
            вторым параметром является ресурс потока, переданный
            cURL через опцию <constant>CURLOPT_INFILE</constant>,
            а третьим параметром является максимально разрешённое
            количество данных для чтения.
            Callback-функция должна возвратить строку с длиной,
            не превышающей запрошенного количества данных, обычно
            с помощью чтения из переданного потокового ресурса.
            Должна возвратить пустую строку для сигнала о конце файла
            <literal>EOF</literal>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            Callback-функция принимает два параметра.
            Первым параметром является дескриптор cURL, а
            вторым параметром является строка с записываемыми данными.
            Данные должны быть сохранены с помощью данной функции.
            Она должна возвратить точное количество записанных байт, иначе
            закачка будет прервана с ошибкой.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Другие значения:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Параметр</entry>
           <entry>Устанавливаемое значение <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_SHARE</constant></entry>
           <entry valign="top">
            Результат выполнения функции <function>curl_share_init</function>.
            Позволяет обработчику cURL использовать данные из общего обработчика.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &curl.changelog.handle-param;
      <row>
       <entry>7.3.15, 7.4.3</entry>
       <entry>
        Добавлено <constant>CURLOPT_HTTP09_ALLOWED</constant>.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        Введены <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>, <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>,
        <constant>CURLOPT_PRE_PROXY</constant>, <constant>CURLOPT_PROXY_CAINFO</constant>,
        <constant>CURLOPT_PROXY_CAPATH</constant>, <constant>CURLOPT_PROXY_CRLFILE</constant>,
        <constant>CURLOPT_PROXY_KEYPASSWD</constant>, <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PROXY_SSLCERT</constant>, <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>,
        <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>, <constant>CURLOPT_PROXY_SSLKEY</constant>,
        <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>, <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>,
        <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>, <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>,
        <constant>CURLOPT_PROXY_SSLVERSION</constant>, <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>,
        <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>, <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>,
        <constant>CURLOPT_SOCKS5_AUTH</constant>, <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>,
        <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>, <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>,
        <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>, <constant>CURLOPT_HAPROXYPROTOCOL</constant>,
        <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>, <constant>CURLOPT_SSH_COMPRESSION</constant>,
        <constant>CURLOPT_TIMEVALUE_LARGE</constant> и <constant>CURLOPT_TLS13_CIPHERS</constant>.
       </entry>
      </row>
      <row>
       <entry>7.0.7</entry>
       <entry>
        Добавлены <constant>CURL_HTTP_VERSION_2</constant>, <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant>,
        <constant>CURL_HTTP_VERSION_2TLS</constant>, <constant>CURL_REDIR_POST_301</constant>,
        <constant>CURL_REDIR_POST_302</constant>, <constant>CURL_REDIR_POST_303</constant>,
        <constant>CURL_REDIR_POST_ALL</constant>, <constant>CURL_VERSION_KERBEROS5</constant>,
        <constant>CURL_VERSION_PSL</constant>, <constant>CURL_VERSION_UNIX_SOCKETS</constant>,
        <constant>CURLAUTH_NEGOTIATE</constant>, <constant>CURLAUTH_NTLM_WB</constant>,
        <constant>CURLFTP_CREATE_DIR</constant>, <constant>CURLFTP_CREATE_DIR_NONE</constant>,
        <constant>CURLFTP_CREATE_DIR_RETRY</constant>, <constant>CURLHEADER_SEPARATE</constant>,
        <constant>CURLHEADER_UNIFIED</constant>, <constant>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</constant>,
        <constant>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</constant>, <constant>CURLMOPT_MAX_HOST_CONNECTIONS</constant>,
        <constant>CURLMOPT_MAX_PIPELINE_LENGTH</constant>, <constant>CURLMOPT_MAX_TOTAL_CONNECTIONS</constant>,
        <constant>CURLOPT_CONNECT_TO</constant>, <constant>CURLOPT_DEFAULT_PROTOCOL</constant>,
        <constant>CURLOPT_DNS_INTERFACE</constant>, <constant>CURLOPT_DNS_LOCAL_IP4</constant>,
        <constant>CURLOPT_DNS_LOCAL_IP6</constant>, <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>,
        <constant>CURLOPT_HEADEROPT</constant>, <constant>CURLOPT_LOGIN_OPTIONS</constant>,
        <constant>CURLOPT_PATH_AS_IS</constant>, <constant>CURLOPT_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PIPEWAIT</constant>, <constant>CURLOPT_PROXY_SERVICE_NAME</constant>,
        <constant>CURLOPT_PROXYHEADER</constant>, <constant>CURLOPT_SASL_IR</constant>,
        <constant>CURLOPT_SERVICE_NAME</constant>, <constant>CURLOPT_SSL_ENABLE_ALPN</constant>,
        <constant>CURLOPT_SSL_ENABLE_NPN</constant>, <constant>CURLOPT_SSL_FALSESTART</constant>,
        <constant>CURLOPT_SSL_VERIFYSTATUS</constant>, <constant>CURLOPT_STREAM_WEIGHT</constant>,
        <constant>CURLOPT_TCP_FASTOPEN</constant>, <constant>CURLOPT_TFTP_NO_OPTIONS</constant>,
        <constant>CURLOPT_UNIX_SOCKET_PATH</constant>, <constant>CURLOPT_XOAUTH2_BEARER</constant>,
        <constant>CURLPROTO_SMB</constant>, <constant>CURLPROTO_SMBS</constant>,
        <constant>CURLPROXY_HTTP_1_0</constant>, <constant>CURLSSH_AUTH_AGENT</constant> и
        <constant>CURLSSLOPT_NO_REVOKE</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Инициализация сеанса CURL и загрузка веб-страницы</title>
    <programlisting role="php">
<![CDATA[
<?php
// создание нового ресурса cURL
$ch = curl_init();

// установка URL и других необходимых параметров
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// загрузка страницы и выдача её браузеру
curl_exec($ch);

// завершение сеанса и освобождение ресурсов
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Передача массива в <constant>CURLOPT_POSTFIELDS</constant>
    закодирует данные в виде <emphasis>multipart/form-data</emphasis>,
    тогда как передача URL-кодированной строки закодирует данные в виде
    <emphasis>application/x-www-form-urlencoded</emphasis>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
