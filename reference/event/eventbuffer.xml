<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.eventbuffer" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс EventBuffer</title>
 <titleabbrev>EventBuffer</titleabbrev>
 <partintro>
  <!-- {{{ EventBuffer intro -->
  <section xml:id="eventbuffer.intro">
   &reftitle.intro;
   <para>
    <classname>EventBuffer</classname>
    представляет событийный буфер библиотеки Libevent - вспомогательный функционал
    для буферизированного ввода/вывода.
   </para>
   <para>
    Буферы событий обычно полезны для организации "буферной" части
    буферизированного сетевого ввода/вывода.
   </para>
  </section>
  <!-- }}} -->
  <section xml:id="eventbuffer.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EventBuffer</classname>
    </ooclass>
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EventBuffer</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    <classsynopsisinfo role="comment">Константы</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-any">EventBuffer::EOL_ANY</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-crlf">EventBuffer::EOL_CRLF</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-crlf-strict">EventBuffer::EOL_CRLF_STRICT</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-lf">EventBuffer::EOL_LF</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.ptr-set">EventBuffer::PTR_SET</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.ptr-add">EventBuffer::PTR_ADD</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.props.length">length</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.props.contiguous-space">contiguous_space</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.eventbuffer')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
  </section>
  <!-- {{{ EventBuffer properties -->
  <section xml:id="eventbuffer.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="eventbuffer.props.length">
     <term>
      <varname>length</varname>
     </term>
     <listitem>
      <para>
       Количество байт в буфере событий.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.props.contiguous-space">
     <term>
      <varname>contiguous_space</varname>
     </term>
     <listitem>
      <para>
       Количество байтов, хранящихся смежно в передней части буфера.
       Байты в буфере могут располагаться в разных кусках памяти;
       свойство возвращает количество байт находящихся, в текущий момент,
       в первом куске.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <!-- }}} -->
  <!-- {{{ EventBuffer constants -->
  <section xml:id="eventbuffer.constants">
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="eventbuffer.constants.eol-any">
     <term>
      <constant>EventBuffer::EOL_ANY</constant>
     </term>
     <listitem>
      <para>
       Конец строки является любой последовательностью любого числа
       символов перевода строки и возврата каретки. Этот формат не особо
       полезен и существует только для обеспечения обратной совместимости.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.eol-crlf">
     <term>
      <constant>EventBuffer::EOL_CRLF</constant>
     </term>
     <listitem>
      <para>
       Конец строки является последовательностью из необязательного
       возврата каретки и перевода строки.
       (Другими словами либо
       <literal>"\r\n"</literal>
       либо
       <literal>"\n"</literal>
       .) Этот формат полезен при разборе текстовых Интернет-протоколов,
       поскольку стандарты обычно предписывают обозначать конец строки как
       <literal>"\r\n"</literal>, но многие клиенты используют просто
       <literal>"\n"</literal>
       .
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.eol-crlf-strict">
     <term>
      <constant>EventBuffer::EOL_CRLF_STRICT</constant>
     </term>
     <listitem>
      <para>
       Конец строки является последовательностью из символов
       возврата каретки и перевода строки.
       (Т.е. <literal>"\r\n"</literal>
       . ASCII-коды
       <constant>0x0D</constant>
       <constant>0x0A</constant>
       ).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.eol-lf">
     <term>
      <constant>EventBuffer::EOL_LF</constant>
     </term>
     <listitem>
      <para>
       Конец строки является обозначается символом перевода строки.
       (т.е.
       <literal>"\n"</literal>
       . ASCII-код
       <constant>0x0A</constant>
       .)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.ptr-set">
     <term>
      <constant>EventBuffer::PTR_SET</constant>
     </term>
     <listitem>
      <para>
       Флаг используется как аргумент метода
       <methodname>EventBuffer::setPosition</methodname>.
       Если флаг установлен, то указатель позиции перемещается
       на абсолютную позицию в буфере.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.ptr-add">
     <term>
      <constant>EventBuffer::PTR_ADD</constant>
     </term>
     <listitem>
      <para>
       То же, что и
       <constant>EventBuffer::PTR_SET</constant>
       , за исключением, что флаг указывает методу
       <methodname>EventBuffer::setPosition</methodname>
       переместить позицию вперёд на указанное количество байт.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <!-- }}} -->
 </partintro>

 &reference.event.entities.eventbuffer;

</phpdoc:classref><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
