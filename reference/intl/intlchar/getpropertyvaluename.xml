<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="intlchar.getpropertyvaluename" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyValueName</refname>
  <refpurpose>Получить имя Unicode для значения свойства</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>string</type><methodname>IntlChar::getPropertyValueName</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam><type>int</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>nameChoice</parameter><initializer><constant>IntlChar::LONG_PROPERTY_NAME</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Возвращает имя свойства Unicode по его значению, как определено в файле PropertyValueAliases.txt.
  </para>
  <note>
   <para>
    Некоторые имена из PropertyValueAliases.txt могут быть извлечены только с помощью
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant>, а не
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY</constant>.
    Включая:
    <simplelist>
     <member>"C" / "Прочее"</member>
     <member>"L" / "Буквы"</member>
     <member>"LC" / "Буквы, имеющие несколько регистров"</member>
     <member>"M" / "Метки"</member>
     <member>"N" / "Числа"</member>
     <member>"P" / "Пунктуация"</member>
     <member>"S" / "Символы"</member>
     <member> "Z" / "Разделители"</member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      Если не входит в допустимый диапазон, либо если метод не работает с данным значением, возвращается &false;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      Селектор для значения свойства. Если не входит в допустимый диапазон, то вернётся &false;.
     </para>
     <para>
      В целом, допустимый диапазон лежит в пределах от <literal>0</literal> до некоторого максимума.
      Есть несколько исключений:
      <simplelist>
       <member>
        Значения <constant>IntlChar::PROPERTY_BLOCK</constant> начинаются с не нулевого значения
        <constant>IntlChar::BLOCK_CODE_BASIC_LATIN</constant>
       </member>
       <member>
        Значения <constant>IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS</constant> не непрерывны
        и лежат в диапазоне 0..240.
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>nameChoice</parameter></term>
    <listitem>
     <para>
      Селектор для извлекаемого имени. Если не попадает в диапазон - будет возвращено &false;.
     </para>
     <para>
      Все значения имеют длинные имена. Большинство имеют короткие имена, но не все.
      Unicode позволяет дополнительные имена;
      Если существуют, они будут возвращены с добавлением 1, 2, и т.д к
      <constant>IntlChar::LONG_PROPERTY_NAME</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает имена или &false; если <parameter>property</parameter> или
   <parameter>nameChoice</parameter> выходят за допустимый диапазон.
  </para>
  <para>
   Если <parameter>nameChoice</parameter> возвращает &false;, то все более большие величины
   <parameter>nameChoice</parameter> также вернут &false;, с одним исключением: если &false; вернётся
   для <constant>IntlChar::SHORT_PROPERTY_NAME</constant>,
   то <constant>IntlChar::LONG_PROPERTY_NAME</constant> (и выше) всё ещё могут вернуть не &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::SHORT_PROPERTY_NAME));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::LONG_PROPERTY_NAME));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::LONG_PROPERTY_NAME + 1));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
string(16) "Greek_And_Coptic"
string(5) "Greek"
string(16) "Greek_And_Coptic"
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
