<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 911013ce81d1dae6e2814b2efc1b1c797d004a4f Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="intlchar.getpropertyvalueenum" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyValueEnum</refname>
  <refpurpose>Вернуть числовой идентификатор свойства по его имени</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>int</type><methodname>IntlChar::getPropertyValueEnum</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает числовой идентификатор свойства Unicode по его имени, как определено в файле PropertyValueAliases.txt.
   Принимаются длинные, короткие и прочие варианты имени.
  </para>
  <note>
   <para>
    Некоторые имена из PropertyValueAliases.txt могут быть извлечены только с помощью
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant>, а не
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY</constant>.
    Включая:
    <simplelist>
     <member>"C" / "Прочее"</member>
     <member>"L" / "Буквы"</member>
     <member>"LC" / "Буквы, имеющие несколько регистров"</member>
     <member>"M" / "Метки"</member>
     <member>"N" / "Числа"</member>
     <member>"P" / "Пунктуация"</member>
     <member>"S" / "Символы"</member>
     <member> "Z" / "Разделители"</member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      Если не входит в допустимый диапазон, либо если метод не работает с данным значением, возвращается
      <constant>IntlChar::PROPERTY_INVALID_CODE</constant>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>name</parameter></term>
    <listitem>
     <para>
      Имя свойства.  Имена сравниваются по принципу "loose matching", как описано в PropertyValueAliases.txt.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает соответствующее целочисленное значение или
   <constant>IntlChar::PROPERTY_INVALID_CODE</constant> если соответствие не найдено
   или если свойство некорректно.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(IntlChar::getPropertyValueEnum(IntlChar::PROPERTY_BLOCK, 'greek') === IntlChar::BLOCK_CODE_GREEK);
var_dump(IntlChar::getPropertyValueEnum(IntlChar::PROPERTY_BIDI_CLASS, 'RIGHT_TO_LEFT') === IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT);
var_dump(IntlChar::getPropertyValueEnum(IntlChar::PROPERTY_BIDI_CLASS, 'some made-up string') === IntlChar::PROPERTY_INVALID_CODE);
var_dump(IntlChar::getPropertyValueEnum(123456789, 'RIGHT_TO_LEFT') === IntlChar::PROPERTY_INVALID_CODE);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(true)
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
