<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d4b762e22e53d959330b53674b73841cfff4dddf Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.spl-autoload-register" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>spl_autoload_register</refname>
  <refpurpose>
   Регистрирует функцию как реализацию функции __autoload()
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>spl_autoload_register</methodname>
   <methodparam choice="opt"><type class="union"><type>callable</type><type>null</type></type><parameter>callback</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>throw</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>prepend</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция регистрирует пользовательскую функцию
   в очереди __autoload SPL-библиотеки ядра PHP.
   Библиотека SPL активирует очередь, если очередь не активировали раньше.
  </para>
  <para>
   Функцию <function>__autoload</function> требуется
   зарегистрировать в очереди __autoload явным образом, если
   эту функцию объявили в коде. Причина требования
   состоит в том, что при вызове функции <function>spl_autoload_register</function>
   PHP заменит в кеше движка функцию <function>__autoload</function>
   либо функцией <function>spl_autoload</function>,
   либо функцией <function>spl_autoload_call</function>.
  </para>
  <para>
   Функция <function>spl_autoload_register</function> разрешает
   задавать больше одной функции автозагрузки. Она создаёт очередь
   функций автозагрузки и выполняет каждую из заданных функций
   в том порядке, в котором функции автозагрузки определили. Тогда как
   встроенную функцию <function>__autoload</function> разрешается определять
   только один раз.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Функция или название функции автозагрузки для регистрации.
       PHP зарегистрирует базовую реализацию функции <function>spl_autoload</function>,
       если значение параметра равно &null;.
      </para>
      <methodsynopsis>
       <type>void</type><methodname><replaceable>callback</replaceable></methodname>
       <methodparam><type>string</type><parameter>class</parameter></methodparam>
      </methodsynopsis>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>throw</parameter></term>
     <listitem>
      <para>
       Этот параметр определяет, будет ли функция
       <function>spl_autoload_register</function> выбрасывать исключение,
       когда не удаётся зарегистрировать функцию <parameter>callback</parameter>.
      </para>
      <warning>
       <para>
        С PHP 8.0.0 функция игнорирует параметр, и выдаёт
        уведомление, если значение параметра равно &false;. Теперь
        функция <function>spl_autoload_register</function>
        будет выбрасывать исключение <classname>TypeError</classname>
        при каждой передаче некорректных аргументов.
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>prepend</parameter></term>
     <listitem>
      <para>
       Функция <function>spl_autoload_register</function>
       добавит автозагрузчик в начало, а не в конец очереди автозагрузки,
       если передали значение &true;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Теперь параметр <parameter>callback</parameter> принимает значение null.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Замена функции <function>__autoload</function>
     функцией <function>spl_autoload_register</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// function __autoload($class) {
//     include 'classes/' . $class . '.class.php';
// }

function my_autoloader($class) {
    include 'classes/' . $class . '.class.php';
}

spl_autoload_register('my_autoloader');

// Разрешается передавать анонимные функции
spl_autoload_register(function ($class) {
    include 'classes/' . $class . '.class.php';
});

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Пример поведения функции <function>spl_autoload_register</function>
     в коде, в котором не загрузили класс
    </title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo
{
    static public function test($class)
    {
        print '[['. $class .']]';
    }
}

spl_autoload_register(__NAMESPACE__ . '\Foo::test');

new InexistentClass();

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
[[Foobar\InexistentClass]]
Fatal error: Class 'Foobar\InexistentClass' not found in ...
]]>
    </screen>
   </example>
   <example>
    <title>
     Идентификаторы передаются в функцию без ведущего обратного слеша
    </title>
    <programlisting role="php">
<![CDATA[
<?php

spl_autoload_register(static function ($class) {
    var_dump($class);
});

class_exists('RelativeName');
class_exists('RelativeName\\WithNamespace');
class_exists('\\AbsoluteName');
class_exists('\\AbsoluteName\\WithNamespace');

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(12) "RelativeName"
string(26) "RelativeName\WithNamespace"
string(12) "AbsoluteName"
string(26) "AbsoluteName\WithNamespace"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>__autoload</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
