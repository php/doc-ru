<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14af302c9c0e561fa6f9cdd956268758ba9a89c5 Maintainer: aur Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="directoryiterator.islink" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DirectoryIterator::isLink</refname>
  <refpurpose>Определяет, является ли текущий элемент DirectoryIterator символической ссылкой</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>DirectoryIterator::isLink</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Определяет, является ли текущий элемент <classname>DirectoryIterator</classname> символической ссылкой.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true;, если элемент является символической ссылкой, иначе возвращает &false;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <methodname>DirectoryIterator::isLink</methodname></title>
    <para>
     Пример содержит рекурсивную функцию для удаления дерева каталогов.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/**
 * Данная функция рекурсивно удаляет все файлы, символические ссылки и директории
 * по указанному пути.
 *
 * @param string $path Путь к директории для удаления.
 */
function removeDir($path) {
    $dir = new DirectoryIterator($path);
    foreach ($dir as $fileinfo) {
        if ($fileinfo->isFile() || $fileinfo->isLink()) {
            unlink($fileinfo->getPathName());
        } elseif (!$fileinfo->isDot() && $fileinfo->isDir()) {
            removeDir($fileinfo->getPathName());
        }
    }
    rmdir($path);
}

removeDir('foo');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DirectoryIterator::getType</methodname></member>
    <member><methodname>DirectoryIterator::isDir</methodname></member>
    <member><methodname>DirectoryIterator::isDot</methodname></member>
    <member><methodname>DirectoryIterator::isFile</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
