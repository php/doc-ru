<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: mch Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="class.regexiterator" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс RegexIterator</title>
 <titleabbrev>RegexIterator</titleabbrev>

 <partintro>

  <!-- {{{  intro -->
  <section xml:id="regexiterator.intro">
   &reftitle.intro;
   <para>
    Этот итератор может быть использован для фильтрации другого итератора на основе регулярных выражений.
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="regexiterator.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>RegexIterator</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>RegexIterator</classname>
     </ooclass>

     <ooclass>
      <modifier>extends</modifier>
      <classname>FilterIterator</classname>
     </ooclass>
    </classsynopsisinfo>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="regexiterator.constants.match">MATCH</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="regexiterator.constants.get-match">GET_MATCH</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="regexiterator.constants.all-matches">ALL_MATCHES</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="regexiterator.constants.split">SPLIT</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="regexiterator.constants.replace">REPLACE</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="regexiterator.constants.use-key">USE_KEY</varname>
     <initializer>1</initializer>
    </fieldsynopsis>

    <!-- }}} -->

    <!-- {{{ If the property is documented below (xml:id=regexiterator.props) use this
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname linkend="regexiterator.props.name">name</varname>
    </fieldsynopsis>
    }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.regexiterator')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[1])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.regexiterator')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.filteriterator')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>

  </section>

  <section xml:id="regexiterator.constants">
   &reftitle.constants;
   <section xml:id="regexiterator.constants.operation-modes">
    <title>Режимы работы RegexIterator</title>
    <variablelist>

     <varlistentry xml:id="regexiterator.constants.all-matches">
      <term><constant>RegexIterator::ALL_MATCHES</constant></term>
      <listitem>
       <para>
        Возвращать все совпадения для текущий записи
        (смотрите <function>preg_match_all</function>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="regexiterator.constants.get-match">
      <term><constant>RegexIterator::GET_MATCH</constant></term>
      <listitem>
       <para>
        Возвращать первое совпадение для текущей записи
        (смотрите <function>preg_match</function>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="regexiterator.constants.match">
      <term><constant>RegexIterator::MATCH</constant></term>
      <listitem>
       <para>
        Только выполнение сравнения (фильтра) для текущей записи
        (смотрите <function>preg_match</function>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="regexiterator.constants.replace">
      <term><constant>RegexIterator::REPLACE</constant></term>
      <listitem>
       <para>
        Заменить текущую запись
        (смотрите <function>preg_replace</function>; Полностью пока не реализовано)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="regexiterator.constants.split">
      <term><constant>RegexIterator::SPLIT</constant></term>
      <listitem>
       <para>
        Возвращать разделённые значения для текущей записи (смотрите <function>preg_split</function>).
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
   <section xml:id="regexiterator.constants.flags">
    <title>Флаги RegexIterator</title>
    <variablelist>
     <varlistentry xml:id="regexiterator.constants.use-key">
      <term><constant>RegexIterator::USE_KEY</constant></term>
      <listitem>
       <para>
        Специальный флаг: Сравнивать ключ записи вместо значения записи.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
  </section>

  <!-- {{{  properties
  <section xml:id="regexiterator.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="regexiterator.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>Prop description</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
}}} -->

 </partintro>

 &reference.spl.entities.regexiterator;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
