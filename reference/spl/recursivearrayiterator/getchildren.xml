<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 60809ebcf7d0c261b2f00e093e4fab70326ffc7b Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<refentry xml:id="recursivearrayiterator.getchildren" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>RecursiveArrayIterator::getChildren</refname>
  <refpurpose>
   Возвращает итератор для текущего элемента, если этот элемент является массивом
   (<type>array</type>) или объектом (<type>object</type>)
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>RecursiveArrayIterator</type><type>null</type></type><methodname>RecursiveArrayIterator::getChildren</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Возвращает итератор для текущего элемента.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Итератор для текущего элемента, если этот элемент является массивом
   (<type>array</type>) или объектом (<type>object</type>);
   Возвращает &null; в случае возникновения ошибки.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод выбрасывает исключение <classname>InvalidArgumentException</classname>,
   если текущий элемент не содержит массивов (<type>array</type>) или объектов
   (<type>object</type>).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>RecursiveArrayIterator::getChildren</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("a" => "lemon", "b" => "orange", array("a" => "apple", "p" => "pear"));

$iterator = new RecursiveArrayIterator($fruits);

while ($iterator->valid()) {

    if ($iterator->hasChildren()) {
        // выводим информацию о всех дочерних элементах
        foreach ($iterator->getChildren() as $key => $value) {
            echo $key . ' : ' . $value . "\n";
        }
    } else {
        echo "Дочерних элементов не обнаружено.\n";
    }

    $iterator->next();
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Дочерних элементов не обнаружено.
Дочерних элементов не обнаружено.
a : apple
p : pear
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>RecursiveArrayIterator::hasChildren</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
