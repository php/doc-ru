<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.filter-var-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_var_array</refname>
  <refpurpose>Принимает несколько переменных и, при необходимости, фильтрует их</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type><type>null</type></type><methodname>filter_var_array</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type></type><parameter>options</parameter><initializer><constant>FILTER_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>add_empty</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Эта функция полезна для получения множества переменных без
   многократного вызова функции <function>filter_var</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Массив со строковыми ключами, содержащий данные для фильтрации.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Массив, определяющий параметры. Допустимый ключ - строка <type>string</type>,
       содержащая имя переменной, а допустимое значение - <link linkend="filter.filters">тип фильтра</link>,
       или массив (<type>array</type>), при необходимости определяющий фильтр, флаги и
       параметры. Если значение является массивом, допустимыми ключами являются
       <literal>filter</literal>, который определяет <link linkend="filter.filters">тип фильтра</link>,
       <literal>flags</literal>, который определяет любые флаги, применяемые к
       фильтру, и <literal>options</literal>, который определяет любые параметры,
       применяемые к фильтру. Смотрите пример ниже для лучшего понимания.
      </para>
      <para>
       Этот параметр также может быть целым числом, содержащим <link
       linkend="filter.constants">предопределённую константу фильтра</link>. Затем все значения во
       входном массиве фильтруются этим фильтром.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>add_empty</parameter></term>
     <listitem>
      <para>
       Добавляет в результат отсутствующие ключи со значением &null;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Массив, содержащий значения запрошенных переменных в случае успешного выполнения, или &false;
   в случае возникновения ошибки. Значение массива будет &false;, если фильтрация завершилась неудачей, или &null;,
   если переменная не определена.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>filter_var_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$data = array(
    'product_id'    => 'libgd<script>',
    'component'     => '10',
    'versions'      => '2.0.33',
    'testscalar'    => array('2', '23', '10', '12'),
    'testarray'     => '2',
);

$args = array(
    'product_id'   => FILTER_SANITIZE_ENCODED,
    'component'    => array('filter'    => FILTER_VALIDATE_INT,
                            'flags'     => FILTER_FORCE_ARRAY,
                            'options'   => array('min_range' => 1, 'max_range' => 10)
                           ),
    'versions'     => FILTER_SANITIZE_ENCODED,
    'doesnotexist' => FILTER_VALIDATE_INT,
    'testscalar'   => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_SCALAR,
                           ),
    'testarray'    => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_FORCE_ARRAY,
                           )

);

$myinputs = filter_var_array($data, $args);

var_dump($myinputs);
echo "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(6) {
  ["product_id"]=>
    string(17) "libgd%3Cscript%3E"
  ["component"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["versions"]=>
    string(6) "2.0.33"
  ["doesnotexist"]=>
  NULL
  ["testscalar"]=>
  bool(false)
  ["testarray"]=>
  array(1) {
    [0]=>
    int(2)
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>filter_input_array</function></member>
    <member><function>filter_var</function></member>
    <member><function>filter_input</function></member>
    <member><xref linkend="filter.filters"/></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
