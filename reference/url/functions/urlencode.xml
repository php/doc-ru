<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 767338231c3e14c7be5399b8e2e0c3b60f7ae8dd Maintainer: aur Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.urlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>urlencode</refname>
  <refpurpose>URL-кодирует строку</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>urlencode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Функция кодирует строку, которая будет использоваться в части запроса URL-адреса,
   что упрощает передачу переменных на следующую страницу.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Строка, которая будет закодирована.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает строку, в которой символы, кроме буквенно-цифровых и <literal>-_.</literal>,
   были заменены знаком процента (<literal>%</literal>), за которым следует
   два шестнадцатеричных числа, а пробелы закодированы как знак
   сложения (<literal>+</literal>).
   Строка кодируется тем же способом, что и POST-данные веб-формы, то есть по
   типу контента <literal>application/x-www-form-urlencoded</literal>. Это
   отличается от кодирования по стандарту <link xlink:href="&url.rfc;3986">RFC 3986</link>
   (смотрите описание функции <function>rawurlencode</function> ) тем, что по историческим причинам
   пробелы кодируются как знак «плюс» (+).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>urlencode</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$userinput = 'Data123!@-_ +';
echo "Пользовательские данные: $userinput\n";
echo '<a href="mycgi?foo=', urlencode($userinput), '">';

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
Пользовательские данные: Data123!@-_ +
<a href="mycgi?foo=Data123%21%40-_+%2B">
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Пример использования функций <function>urlencode</function> и <function>htmlentities</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$foo = 'Data123!@-_ +';
$bar = "Содержание, которое отличается от значения $foo";
echo "foo: $foo\n";
echo "bar: $bar\n";
$query_string = 'foo=' . urlencode($foo) . '&bar=' . urlencode($bar);
echo '<a href="mycgi?' . htmlentities($query_string) . '">';

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
foo: Data123!@-_ +
bar: Содержание, которое отличается от значения Data123!@-_ +
<a href="mycgi?foo=Data123%21%40-_+%2B&amp;bar=Not+the+same+content+as+Data123%21%40-_+%2B">
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Соблюдают осторожность с переменными, которые совпадают с HTML-сущностями.
    Мнемоники наподобие &amp;amp, &amp;copy и &amp;pound браузер разбирает и использует
    как реальные сущности, а не как имя переменной.
    Это известная проблема, о которой консорциум W3C рассказывает людям много лет.
    Подробнее рассказано по ссылке: <link xlink:href="&url.argsep;">&url.argsep;</link>
   </para>
   <para>
    PHP поддерживает изменение разделителя аргументов на «точку с запятой»,
    которую предложил W3C, через ini-директиву arg_separator.
    К сожалению, бо́льшая часть пользовательских агентов не отправляют данные формы в формате,
    разделённые «точкой с запятой». Более переносимый способ обойти проблему —
    использовать разделитель &amp;amp; вместо &amp;.
    Не нужно для этого изменять PHP-директиву arg_separator.
    Оставьте разделитель &amp;, но кодируйте URL-адрес функциями <function>htmlentities</function>
    или <function>htmlspecialchars</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>urldecode</function></member>
    <member><function>htmlentities</function></member>
    <member><function>rawurlencode</function></member>
    <member><function>rawurldecode</function></member>
    <member><link xlink:href="&url.rfc;3986">RFC 3986</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
