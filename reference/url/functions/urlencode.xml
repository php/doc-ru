<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 0c9c2dd669fe9395eaa73d487fbd160f9057429a Maintainer: aur Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="function.urlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>urlencode</refname>
  <refpurpose>URL-кодирование строки</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>urlencode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Эта функция удобна, когда закодированная строка будет использоваться в запросе, как часть URL,
   в качестве удобного способа передачи переменных на следующую страницу.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Строка, которая должна быть закодирована.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает строку, в которой все не цифро-буквенные символы, кроме <literal>-_.</literal>
   должны быть заменены знаком процента (<literal>%</literal>), за которым следует
   два шестнадцатеричных числа, а пробелы закодированы как знак
   сложения (<literal>+</literal>).
   Строка кодируется тем же способом, что и POST-данные веб-формы, то есть по
   типу контента <literal>application/x-www-form-urlencoded</literal>. Это
   отличается от кодирования по <link xlink:href="&url.rfc;3986">RFC 3986</link>
   (смотрите <function>rawurlencode</function> ) в том, что по историческим причинам,
   пробелы кодируются как знак "плюс" (+).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>urlencode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Пример использования <function>urlencode</function> и <function>htmlentities</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$query_string = 'foo=' . urlencode($foo) . '&bar=' . urlencode($bar);
echo '<a href="mycgi?' . htmlentities($query_string) . '">';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Будьте внимательны с переменными, которые могут совпадать с элементами HTML.
    Такие сущности как &amp;amp, &amp;copy и &amp;pound разбираются браузером и используется
    как реальная сущность, а не желаемое имя переменной.
    Это очевидный конфликт, на который W3C указывает в течение многих лет.
    Смотрите подробности: <link xlink:href="&url.argsep;">&url.argsep;</link>
   </para>
   <para>
    PHP поддерживает изменение разделителя аргументов на рекомендуемый W3C символ
    "точку с запятой" путём изменения директивы arg_separator в .ini файле.
    К сожалению, большинство пользовательских приложений не отправляют данные формы в формате
    с разделителем "точка с запятой". Более переносимый способ решить эту проблему
    - это использовать  &amp;amp; вместо &amp; в качестве разделителя.
    Вам не нужно будет для этого изменять PHP-директиву arg_separator.
    Оставьте разделитель как &amp;, но кодируйте ваши URL с помощью <function>htmlentities</function>
    или <function>htmlspecialchars</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>urldecode</function></member>
    <member><function>htmlentities</function></member>
    <member><function>rawurlencode</function></member>
    <member><function>rawurldecode</function></member>
    <member><link xlink:href="&url.rfc;3986">RFC 3986</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
