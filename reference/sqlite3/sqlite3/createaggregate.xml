<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d15a12639faeb8d1b4bcf7eff008de2885017d1e Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="sqlite3.createaggregate" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3::createAggregate</refname>
  <refpurpose>Зарегистрировать функцию PHP в качестве агрегирующей функции SQL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>SQLite3::createAggregate</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam><type>callable</type><parameter>stepCallback</parameter></methodparam>
   <methodparam><type>callable</type><parameter>finalCallback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>argCount</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Регистрирует функцию PHP или пользовательскую функцию в качестве
   агрегирующей функции SQL для использования в запросах.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Имя агрегирующей функции SQL, которая должна быть создана или переопределена.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stepCallback</parameter></term>
     <listitem>
      <para>
       Функция обратного вызова, которая будет вызвана для каждой строки
       результирующего набора. Ваша PHP-функция должна аккумулировать
       результат и хранить его в контексте агрегации.
      </para>
      <para>
       Эта функция должна быть определена следующим образом:
       <methodsynopsis>
        <type>mixed</type><methodname><replaceable>step</replaceable></methodname>
        <methodparam><type>mixed</type><parameter>context</parameter></methodparam>
        <methodparam><type>int</type><parameter>rownumber</parameter></methodparam>
        <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
        <methodparam rep="repeat"><type>mixed</type><parameter>values</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>context</parameter></term>
         <listitem>
          <para>
           Для первой строки должно равняться &null;;
           Для всех последующих строк его значение должно быть равно значению,
           возвращённому на предыдущем шаге; вы должны использовать его для сохранения
           состояния агрегации.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>rownumber</parameter></term>
         <listitem>
          <para>
           Номер текущей строки.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>value</parameter></term>
         <listitem>
          <para>
           Первый аргумент переданный агрегатору.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>values</parameter></term>
         <listitem>
          <para>
           Последующие аргументы.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
       Возвращаемое значение функции будет использовано как параметр
       <parameter>context</parameter> при следующем запуске функции, либо как
       значение передаваемое финализирующей функции.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>finalCallback</parameter></term>
     <listitem>
      <para>
       Функция обратного вызова для вычисление итогового агрегированного
       значения. Она будет вызвана как только все строки результирующего набора
       будут обработаны, ей будет передан агрегирующий контекст и она вернёт
       финальное значение. Данная функция должна вернуть значение типа понятного
       SQLite (т.е. <link
       linkend="language.types.intro">скалярный тип</link>).
      </para>
      <para>
       Эта функция должна быть определена следующим образом:
       <methodsynopsis>
        <type>mixed</type><methodname><replaceable>fini</replaceable></methodname>
        <methodparam><type>mixed</type><parameter>context</parameter></methodparam>
        <methodparam><type>int</type><parameter>rownumber</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>context</parameter></term>
         <listitem>
          <para>
           Содержит результат самого последнего вызова агрегирующей функции.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>rownumber</parameter></term>
         <listitem>
          <para>
           Всегда <literal>0</literal>.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
       Возвращаемое значение этой функции будет использовано как
       возвращаемое значение всего агрегатора.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>argCount</parameter></term>
     <listitem>
      <para>
       Количество аргументов, которое принимает функция агрегирования SQL.
       Если значение отрицательное, то функция может использовать любое количество
       аргументов.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true; в случае успешного выполнения&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример агрегирующей функции max_length</title>
    <programlisting role="php">
<![CDATA[
<?php
$data = array(
   'one',
   'two',
   'three',
   'four',
   'five',
   'six',
   'seven',
   'eight',
   'nine',
   'ten',
   );
$db = new SQLite3(':memory:');
$db->exec("CREATE TABLE strings(a)");
$insert = $db->prepare('INSERT INTO strings VALUES (?)');
foreach ($data as $str) {
    $insert->bindValue(1, $str);
    $insert->execute();
}
$insert = null;

function max_len_step($context, $rownumber, $string)
{
    if (strlen($string) > $context) {
        $context = strlen($string);
    }
    return $context;
}

function max_len_finalize($context, $rownumber)
{
    return $context === null ? 0 : $context;
}

$db->createAggregate('max_len', 'max_len_step', 'max_len_finalize');

var_dump($db->querySingle('SELECT max_len(a) from strings'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
int(5)
]]>
    </screen>
   </example>
  </para>
  <para>
   В этом примере мы написали агрегирующую функцию, которая
   вычисляет самой длинной строки в одной колонке таблицы.
   Для каждой строки вызывается функция <literal>max_len_step</literal> и ей
   передаётся параметр <literal>$context</literal>.  Этот параметр ничем не отличается
   от обычной переменной PHP и спокойно может содержать массив или объект.
   В этом примере мы используем её для хранения максимальной найденной
   длины строки. Если <literal>$string</literal> будет иметь длину больше, чем
   текущая сохранённая, то значение контекста будет обновлено.
  </para>
  <para>
   После того, как все строки обработаны, SQLite вызовет функцию
   <literal>max_len_finalize</literal>, для окончательной подготовки результата.
   Тут мы можем произвести необходимые расчёты на основе данных из
   <literal>$context</literal>.  В нашем простом примере никакая постобработке не нужна
   и мы просто возвращаем полученное значение.
  </para>
  <tip>
   <para>
    НЕ рекомендуется хранить копию значений в контексте, а обработку производить
    в финализирующей функции, так как это может привести к большому потреблению памяти
    при обработке запроса. Просто представьте, сколько памяти вам понадобится для
    хранения миллиона строк, по 32 байта каждая, в памяти.
   </para>
  </tip>
  <tip>
   <para>
    Для переопределения встроенных в SQLite агрегирующих функций вы можете
    использовать <methodname>SQLite3::createAggregate</methodname>.
   </para>
  </tip>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
