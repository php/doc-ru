<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2db1519bfc31c28a2ed60bb0ecb49e60d6871a1 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<section xml:id="memcached.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>&ConfigureOptions; Memcached</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.memcached.sess-locking">memcached.sess_locking</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash">memcached.sess_consistent_hash</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.1.0. Значение по умолчанию - On, начиная с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary">memcached.sess_binary</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.0.0. Заменено на memcached.sess_binary_protocol в memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait">memcached.sess_lock_wait</link></entry>
      <entry>150000</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0. Удалено в memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-prefix">memcached.sess_prefix</link></entry>
      <entry>memc.sess.key.</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-number-of-replicas">memcached.sess_number_of_replicas</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-randomize-replica-read">memcached.sess_randomize_replica_read</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed">memcached.sess_remove_failed</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.1.0. Заменено на memcached.sess_remove_failed_servers в memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-type">memcached.compression_type</link></entry>
      <entry>fastlz</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-factor">memcached.compression_factor</link></entry>
      <entry>1.3</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-threshold">memcached.compression_threshold</link></entry>
      <entry>2000</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.serializer">memcached.serializer</link></entry>
      <entry>igbinary</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.use-sasl">memcached.use_sasl</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Доступно с memcached 2.2.0. Удалено в memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-binary-protocol">memcached.default_binary_protocol</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-connect-timeout">memcached.default_connect_timeout</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-consistent-hash">memcached.default_consistent_hash</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary-protocol">memcached.sess_binary_protocol</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0. Заменено на memcached.sess_binary.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-connect-timeout">memcached.sess_connect_timeout</link></entry>
       <entry>1000</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Доступно с memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash-type">memcached.sess_consistent_hash_type</link></entry>
      <entry>ketama</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-expire">memcached.sess_lock_expire</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-retries">memcached.sess_lock_retries</link></entry>
      <entry>5</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-max">memcached.sess_lock_wait_max</link></entry>
      <entry>150</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0. Значение по умолчанию 150 с memcached 3.1.0 (previously 2000).</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-min">memcached.sess_lock_wait_min</link></entry>
      <entry>150</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0. Значение по умолчанию 150 с memcached 3.1.0 (previously 1000).</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-persistent">memcached.sess_persistent</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed-servers">memcached.sess_remove_failed_servers</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0. Заменено на memcached.sess_remove_failed.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-server-failure-limit">memcached.sess_server_failure_limit</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-password">memcached.sess_sasl_password</link></entry>
      <entry>null</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-username">memcached.sess_sasl_username</link></entry>
      <entry>null</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.store-retry-count">memcached.store_retry_count</link></entry>
      <entry>2</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Доступно с memcached 2.2.0.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.memcached.sess-locking">
    <term>
     <parameter>memcached.sess_locking</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Использовать блокировку сессий. Допустимые значения: On, Off. По умолчанию
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-consistent-hash">
    <term>
     <parameter>memcached.sess_consistent_hash</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Если включено, то для обработки сессий будет использовано согласованное хеширование.
      При использовании согласованного хеширования можно
      добавлять или удалять узлы кеширования без больших потерь кешированных ключей.
      По умолчанию On.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-binary">
    <term>
     <parameter>memcached.sess_binary</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Использовать бинарный режим сессии.Реплики libmemcached работают только
      если включён этот режим. По умолчанию Off.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-lock-wait">
    <term>
     <parameter>memcached.sess_lock_wait</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Время ожидания повторной синхронизации сессии в микросекундах.
      При установке этого значения будьте осторожны. Допустимы
      целочисленные значения. Если установлено как 0, то используется
      значение по умолчанию. Отрицательные значения уменьшают
      блокировку попытки блокировки.
      По умолчанию 150000.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-prefix">
    <term>
     <parameter>memcached.sess_prefix</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Префикс ключа сессии. Строка длиной не более 219 байт. По умолчанию "memc.sess.key."
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-number-of-replicas">
    <term>
     <parameter>memcached.sess_number_of_replicas</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Записывать данные на ряд дополнительных серверов memcached. Это "высокая доступность для бедняков", как её называет libmemcached.
      Если это значение положительное, и активирован режим sessions_remove_failed_servers, когда сервер memcached выходит из строя, сессия будет по-прежнему доступна из реплики.
      Однако, если отказавший сервер memcache снова становится доступным, он будет читать сессию оттуда, которая может иметь старые данные или вообще не иметь данных.
      По умолчанию 0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-randomize-replica-read">
    <term>
     <parameter>memcached.sess_randomize_replica_read</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Случайное чтение реплики memcached сессией.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-remove-failed">
    <term>
     <parameter>memcached.sess_remove_failed</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Разрешить автоматическое удаление недоступных серверов memcached.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.compression-type">
    <term>
     <parameter>memcached.compression_type</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Настройка типа сжатия, корректные значения: fastlz, zlib. По умолчанию fastlz.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.compression-factor">
    <term>
     <parameter>memcached.compression_factor</parameter>
     <type>float</type>
    </term>
    <listitem>
     <para>
      Коэффициент сжатия. Хранить значения сжатыми только если коэффициент
      сжатия превышает заданный. Храним сжатым если:
      <literal>plain_len &gt; comp_len * factor</literal>. По умолчанию 1.3 (экономия места 23%).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.compression-threshold">
    <term>
     <parameter>memcached.compression_threshold</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Порог сжатия. Не сжимать сериализованные значения меньше указанного размера.
      По умолчанию 2000 bytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.serializer">
    <term>
     <parameter>memcached.serializer</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Настройка сериализатора по умолчанию для новых объектов memcached. Допустимые значения: php, igbinary, json, json_array, msgpack.
     </para>
     <variablelist>
      <varlistentry>
       <term>json</term>
       <listitem>
        <para>
         Стандартное кодирование JSON. Этот сериализатор быстрый и компактный, но
         работает только с данными в UTF-8 и не полностью реализует сериализацию.
         Подробности смотрите в описании модуле JSON. Доступно с memcached 0.2.0.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>json_array</term>
       <listitem>
        <para>
         Тот же json, но раскодируется в массивы. Доступно с memcached 2.0.0.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>php</term>
       <listitem>
        <para>
         Стандартный сериализатор PHP.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>igbinary</term>
       <listitem>
        <para>
         Бинарный сериализатор. Доступно с memcached 0.1.4
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
        <term>msgpack</term>
        <listitem>
         <para>
          Межъязыковой двоичный сериализатор. Доступно с memcached 2.2.0.
         </para>
        </listitem>
       </varlistentry>
     </variablelist>
     <para>
      По умолчанию igbinary, если доступен, затем igbinary, если доступен, иначе PHP.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.use-sasl">
    <term>
     <parameter>memcached.use_sasl</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Использовать аутентификацию SASL при соединении. Допустимые значения: On, Off. По умолчанию Off.
     </para>
    </listitem>
   </varlistentry>
<varlistentry xml:id="ini.memcached.default-binary-protocol">
     <term>
      <parameter>memcached.default_binary_protocol</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Устанавливает протокол memcached по умолчанию для новых подключений. (Чтобы настроить протокол memcached для соединений, используемых сессиями, используйте вместо него memcached.sess_binary_protocol)

       Если установлено значение On, по умолчанию используется двоичный протокол memcached. Если установлено значение Off, используется текстовый протокол memcached. По умолчанию Off
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-connect-timeout">
     <term>
      <parameter>memcached.default_connect_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Устанавливает время ожидания соединения memcached по умолчанию для новых соединений. (Чтобы настроить время ожидания соединения memcached для сессий, используйте вместо этого memcached.sess_connect_timeout)

       В неблокирующем режиме это изменяет значение времени ожидания во время подключения к сокету в миллисекундах. Указание -1 означает бесконечное время ожидания.
       Указание 0 означает использование времени ожидания соединения по умолчанию для библиотеки memcached. По умолчанию 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-consistent-hash">
     <term>
      <parameter>memcached.default_consistent_hash</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Устанавливает значение по умолчанию для согласованного хеширования для новых подключений. (Чтобы настроить согласованное хеширование для сессий, используйте вместо этого memcached.sess_consistent_hash)

       Если установлено значение On, для обработки сессии используется согласованное хеширование (libketama). Когда используется согласованное хеширование, можно добавлять или удалять узлы кеша, не беспокоясь о том, что существующие ключи по умолчанию отключены.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-binary-protocol">
     <term>
      <parameter>memcached.sess_binary_protocol</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Используйте двоичный протокол memcached для сессий memcached (вместо текстового протокола). Реплики libmemcached работают, только если включён двоичный режим. Однако некоторые прокси (например, twemproxy) будут работать, только если двоичный протокол отключён. В более старых версиях php-memcached этот параметр был выключен и назывался memcached.sess_binary. По умолчанию включено с libmemcached 1.0.18 или новее. По умолчанию в старой версии отключено.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-connect-timeout">
     <term>
      <parameter>memcached.sess_connect_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Значение времени ожидания соединения memcached
       В неблокирующем режиме это изменяет значение времени ожидания во время соединения сокета в миллисекундах. Указание -1 означает бесконечное время ожидания.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-consistent-hash-type">
     <term>
      <parameter>memcached.sess_consistent_hash_type</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Тип согласованного хеширования сессии Memcached. Если установлено значение 'ketama' (по умолчанию для php-memcached 3.x), для обработки сессии используется согласованное хеширование libketama, если установлено значение 'ketama_weighted' (по умолчанию для php-memcached 2.x), для обработки сессии используется взвешенное согласованное хеширование (libketama). По умолчанию - "ketama".
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-expire">
     <term>
      <parameter>memcached.sess_lock_expire</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Время в секундах до того, как должна сработать блокировка. Установка в 0 приводит к поведению по умолчанию, которое заключается в использовании PHP max_execution_time. По умолчанию 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-retries">
     <term>
      <parameter>memcached.sess_lock_retries</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Количество попыток повторной блокировки блокировки сессии, не включая первую попытку. По умолчанию 5.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait-max">
     <term>
      <parameter>memcached.sess_lock_wait_max</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Максимальное время ожидания в миллисекундах между попытками блокировки сессии. По умолчанию 150.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait-min">
     <term>
      <parameter>memcached.sess_lock_wait_min</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Минимальное время ожидания в миллисекундах между попытками блокировки сессии. Это значение удваивается при каждой попытке блокировки до тех пор, пока не будет достигнута memcached.sess_lock_wait_max, после чего любые дальнейшие попытки будут занимать sessions_lock_wait_max секунд. По умолчанию 150.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-persistent">
     <term>
      <parameter>memcached.sess_persistent</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Следует ли повторно использовать соединения memcached, соответствующие значению (значениям) session.save_path после завершения выполнения скрипта. Не используйте это, если определённые настройки (например, настройки SASL, sess_binary_protocol) будут переопределены между запросами. По умолчанию Off.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-remove-failed-servers">
     <term>
      <parameter>memcached.sess_remove_failed_servers</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Разрешить автоматическое удаление отказавшего сервера memcached. По умолчанию Off. (В предыдущих версиях этот параметр назывался memcached.sess_remove_failed)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-server-failure-limit">
     <term>
      <parameter>memcached.sess_server_failure_limit</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Установите это значение, чтобы разрешить удаление сервера после заданного количества непрерывных сбоев подключения. По умолчанию 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-sasl-password">
     <term>
      <parameter>memcached.sess_sasl_password</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Пароль сессии SASL
       Для включения SASL необходимо указать имя пользователя и пароль.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-sasl-username">
     <term>
      <parameter>memcached.sess_sasl_username</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Имя пользователя сессии SASL
       Для включения SASL необходимо указать имя пользователя и пароль.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.store-retry-count">
     <term>
      <parameter>memcached.store_retry_count</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Количество повторных попыток для неудачных команд сохранения.
       Этот механизм обеспечивает прозрачное переключение на вторичные серверы при сбое операций set/increment/decrement/setMulti на желаемом сервере в среде c множеством серверов. по умолчанию — 2
      </para>
     </listitem>
    </varlistentry>
  </variablelist>
 </para>
</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
