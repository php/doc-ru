<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2eb43ad4f41a8c62516abd804721786e50717af6 Maintainer: shein Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->
<refentry xml:id="function.call-user-func" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func</refname>
  <refpurpose>Вызывает callback-функцию, заданную в первом параметре</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func</methodname>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Вызывает callback-функцию, переданную первым параметром,
   и передаёт остальные параметры в качестве аргументов.
   <parameter>callback</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Вызываемая функция типа <type>callable</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Ноль или более параметров, передаваемые в callback-функцию.
      </para>
      <note>
       <para>
        Учтите, что параметры для <function>call_user_func</function> не
        передаются по ссылке.
        <example>
         <title>Пример использования <function>call_user_func</function> и ссылки</title>
         <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL);
function increment(&$var)
{
    $var++;
}

$a = 0;
call_user_func('increment', $a);
echo $a."\n";

// Вместо этого можно использовать этот способ
call_user_func_array('increment', array(&$a));
echo $a."\n";

// Также можно использовать функцию в качестве переменной
$increment = 'increment';
$increment($a);
echo $a."\n";
?>
]]>
         </programlisting>
         &example.outputs;
         <screen>
<![CDATA[
Warning: Parameter 1 to increment() expected to be a reference, value given in …
0
1
2
]]>
         </screen>
        </example>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает значение, возвращённое callback-функцией.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>call_user_func</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function barber($type)
{
    echo "Вы хотели стрижку $type, без проблем\n";
}
call_user_func('barber', "под горшок");
call_user_func('barber', "наголо");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Вы хотели стрижку под горшок, без проблем
Вы хотели стрижку наголо, без проблем
]]>
    </screen>
   </example>
   <example>
    <title>Использование <function>call_user_func</function>, используя пространства имён</title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test() {
        print "Привет, мир!\n";
    }
}

call_user_func(__NAMESPACE__ .'\Foo::test');
call_user_func(array(__NAMESPACE__ .'\Foo', 'test'));

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Привет, мир!
Привет, мир!
]]>
    </screen>
   </example>
   <example>
    <title>Вызов метода класса с помощью <function>call_user_func</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class myclass {
    static function say_hello()
    {
        echo "Привет!\n";
    }
}

$classname = "myclass";

call_user_func(array($classname, 'say_hello'));
call_user_func($classname .'::say_hello');

$myobject = new myclass();

call_user_func(array($myobject, 'say_hello'));

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Привет!
Привет!
Привет!
]]>
    </screen>
   </example>
   <example>
    <title>Использование лямбда-функции с <function>call_user_func</function></title>
    <programlisting role="php">
<![CDATA[
<?php
call_user_func(function($arg) { print "[$arg]\n"; }, 'test');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
[test]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.func-callback-exceptions;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func_array</function></member>
    <member><function>is_callable</function></member>
    <member><link linkend="functions.variable-functions">Обращение к функциям через переменные</link></member>
    <member><methodname>ReflectionFunction::invoke</methodname></member>
    <member><methodname>ReflectionMethod::invoke</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
