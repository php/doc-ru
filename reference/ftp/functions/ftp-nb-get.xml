<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d1c34c9b7a30cfc3a59641122c707a2812cfed7 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.ftp-nb-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ftp_nb_get</refname>
  <refpurpose>Скачивает файл с FTP-сервера в асинхронном режиме и сохраняет его в локальный файл</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ftp_nb_get</methodname>
   <methodparam><type>FTP\Connection</type><parameter>ftp</parameter></methodparam>
   <methodparam><type>string</type><parameter>local_filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>remote_filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>FTP_BINARY</constant></initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>ftp_nb_get</function> скачивает удалённый файл с FTP-сервера и
   сохраняет его в локальный файл.
  </para>
  <para>
   Разница между этой функцией и <function>ftp_get</function> заключается в
   том, что эта функция получает файл асинхронно, так что ваша программа может
   совершать другие операции, пока файл скачивается.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ftp</parameter></term>
     <listitem>
      &ftp.parameter.ftp;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>local_filename</parameter></term>
     <listitem>
      <para>
       Путь к локальному файлу (файл будет перезаписан, если уже существует).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>remote_filename</parameter></term>
     <listitem>
      <para>
       Путь к удалённому файлу.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Режим передачи. Должен быть либо <constant>FTP_ASCII</constant>, либо
       <constant>FTP_BINARY</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>Позиция начала загрузки в удалённом файле.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает <constant>FTP_FAILED</constant>, <constant>FTP_FINISHED</constant>
   или <constant>FTP_MOREDATA</constant>.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &ftp.changelog.ftp-param;
     <row>
      <entry>7.3.0</entry>
      <entry>
       Теперь параметр <parameter>mode</parameter> опционален. Раньше он
       был обязательным.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>ftp_nb_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Начало скачивания
$ret = ftp_nb_get($ftp, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {

   // Производим какие-то действия ...
   echo ".";

   // Продолжение скачивания ...
   $ret = ftp_nb_continue($ftp);
}
if ($ret != FTP_FINISHED) {
   echo "При скачивании файла произошла ошибка...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Возобновление скачивания файла с помощью <function>ftp_nb_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Начало скачивания
$ret = ftp_nb_get($ftp, "test", "README", FTP_BINARY,
                      filesize("test"));
// ИЛИ: $ret = ftp_nb_get($ftp, "test", "README",
//                           FTP_BINARY, FTP_AUTORESUME);
while ($ret == FTP_MOREDATA) {

   // Производим какие-то действия ...
   echo ".";

   // Продолжение скачивания ...
   $ret = ftp_nb_continue($ftp);
}
if ($ret != FTP_FINISHED) {
   echo "При скачивании файла произошла ошибка...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Скачивание файла начиная с позиции 100 в новый файл с помощью
     <function>ftp_nb_get</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// Запрет FTP_AUTOSEEK
ftp_set_option($ftp, FTP_AUTOSEEK, false);

// Начало скачивания
$ret = ftp_nb_get($ftp, "newfile", "README", FTP_BINARY, 100);
while ($ret == FTP_MOREDATA) {

   /* ... */

   // Продолжение скачивания ...
   $ret = ftp_nb_continue($ftp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   В последнем примере, <filename>newfile</filename> будет на 100 байт
   меньше, чем <filename>README</filename> на FTP-сервере, потому что
   скачивание начинается со смещения 100. Если не запретить
   <constant>FTP_AUTOSEEK</constant>, первые 100 байт файла
   <filename>newfile</filename> будут содержать
   <literal>'\0'</literal>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nb_fget</function></member>
    <member><function>ftp_nb_continue</function></member>
    <member><function>ftp_fget</function></member>
    <member><function>ftp_get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
