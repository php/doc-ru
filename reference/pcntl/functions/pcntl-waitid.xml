<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4fbe0691312fbf85d67674f2e80c1abb5c36187f Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pcntl-waitid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_waitid</refname>
  <refpurpose>Ожидает, пока дочерний процесс изменит состояние</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pcntl_waitid</methodname>
   <methodparam choice="opt"><type>int</type><parameter>idtype</parameter><initializer><constant>P_ALL</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>id</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">info</parameter><initializer>[]</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>WEXITED</constant></initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">resource_usage</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция получает информацию о статусе, которая относится к событиям завершения,
   остановки и (или) продолжения в дочерних процессах родительского процесса.
  </para>

  <para>
   Функция заблокирует процесс, который вызвал дочерние процессы, до тех пор, пока не возникнет ошибка
   или у функции не появится доступ к информации о состоянии, которая удовлетворяет каждому из следующих условий,
   если только не передали флаг <constant>WNOHANG</constant>:
   <itemizedlist>
    <listitem>
     <simpara>
      Информация о статусе поступила от дочернего процесса в наборе дочерних процессов,
      который указали через аргументы <parameter>idtype</parameter>
      и <parameter>id</parameter>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Изменение состояния дочернего процесса в информации о статусе совпало с флагом в объединении флагов
      изменения состояния, которое установили через аргумент <parameter>flags</parameter>.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Функция вернёт результат немедленно, если доступ к информации об изменении статуса дочернего процесса
   появился до вызова функции <function>pcntl_waitid</function>. Порядок, в котором функция
   сообщит о статусе дочерних процессов, не определили, если доступ к информации об изменении статуса появился
   для двух или большего количества дочерних процессов.
  </para>

  <note>
   <para>
    Документация касается POSIX-спецификации
    функции <literal>waitid</literal>, и ряд дополнительных параметров,
    которые характерны для реализации функции в системах Linux, NetBSD и FreeBSD. Подробнее
    о работе функции <literal>waitid</literal> в текущей системе рассказывает
    man-страница руководства к функции <literal>waitid(2)</literal> конкретной системы.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>idtype</parameter></term>
    <term><parameter>id</parameter></term>
    <listitem>
     <simpara>
      Через аргументы <parameter>idtype</parameter> и <parameter>id</parameter>
      указывают, какие дочерние процессы ожидать.
     </simpara>
     <table>
      <title>Аргументы <parameter>idtype</parameter> и <parameter>id</parameter> POSIX-стандарта</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Значение аргумента <parameter>idtype</parameter> равно <literal>P_ALL</literal></entry>
         <entry>
          Функция игнорирует аргумент <parameter>id</parameter> и ожидает изменения состояния каждого дочернего процесса.
         </entry>
        </row>
        <row>
         <entry>Значение аргумента <parameter>idtype</parameter> равно <literal>P_PID</literal></entry>
         <entry>
          Функция ожидает изменения состояния дочернего процесса,
          идентификатор которого равен значению аргумента <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>Значение аргумента <parameter>idtype</parameter> равно <literal>P_PGID</literal></entry>
         <entry>
          Функция ожидает изменения состояния каждого дочернего процесса,
          идентификатор группы которого равен значению аргумента <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Аргументы <parameter>idtype</parameter> и <parameter>id</parameter>, характерные для Linux-систем</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Значение аргумента <parameter>idtype</parameter> равно <literal>P_PIDFD</literal> (с Linux 5.4)</entry>
         <entry>
          Функция ожидает изменения состояния дочернего процесса, на который ссылается
          PID-идентификатор дескриптора файла, который указали в аргументе <parameter>id</parameter>.
          Подробнее о PID-идентификаторе дескриптора файла
          рассказывает man-страница руководства к функции <literal>pidfd_open(2)</literal>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Аргументы <parameter>idtype</parameter> и <parameter>id</parameter>, характерные для ОС NetBSD и FreeBSD</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Значение аргумента <parameter>idtype</parameter> равно <literal>P_UID</literal>
         </entry>
         <entry>
          Функция ожидает процессы, эффективный идентификатор пользователя которых
          равен значению аргумента <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Значение аргумента <parameter>idtype</parameter> равно <literal>P_GID</literal>
         </entry>
         <entry>
          Функция ожидает процессы, эффективный идентификатор группы которых
          равен значению аргумента <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Значение аргумента <parameter>idtype</parameter> равно <literal>P_SID</literal>
         </entry>
         <entry>
          Функция ожидает процессы, идентификатор сессии которых равен значению аргумента
          <parameter>id</parameter>. Идентификатор сессии дочернего процесса
          и идентификатор дочернего процесса совпадут, если дочерний процесс запустил свою сессию,
          иначе идентификатор сессии дочернего процесса совпадёт с идентификатором сессии родительского процесса.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Аргументы <parameter>idtype</parameter> и <parameter>id</parameter>, характерные для ОС FreeBSD</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Значение аргумента <parameter>idtype</parameter> равно <literal>P_JAILID</literal>
         </entry>
         <entry>
          Функция ожидает процессы внутри изоляции, чей идентификатор равен значению
          аргумента <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>info</parameter></term>
    <listitem>
     <para>
      Функция заполнит параметр <parameter>info</parameter> массивом,
      который одержит информацию о сигнале.
     </para>
     <para>
      Массив <parameter>info</parameter> содержит следующие ключи:
      <simplelist>
       <member><literal>signo</literal>: Номер сигнала</member>
       <member><literal>errno</literal>: Номер системной ошибки</member>
       <member><literal>code</literal>: Код сигнала</member>
       <member>
         <literal>status</literal>: Значение, которое процесс вернул при выходе, или сигнал,
         который изменил состояние процесса
       </member>
       <member><literal>pid</literal>: Идентификатор процесса, который отправил сигнал</member>
       <member><literal>uid</literal>: Реальный идентификатор пользователя процесса, который отправил сигнал</member>
       <member><literal>utime</literal>: Время, которое затратил пользователь</member>
       <member><literal>stime</literal>: Время, которое затратила система</member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      Значение аргумента <parameter>flags</parameter> состоит из нуля или большего количества
      следующих констант, которые объединили побитовым оператором ИЛИ:
      <table>
       <title>Возможные значения аргумента <parameter>flags</parameter></title>
       <tgroup cols="2">
        <tbody>
         <row>
          <entry><constant>WCONTINUED</constant></entry>
          <entry>
           Возвращать статус дочернего процесса, который продолжает работу
           и о статусе которого либо не сообщалось, поскольку процесс продолжился
           после остановки управления заданием, либо сообщалось только через
           вызовы функции <function>pcntl_waitid</function>
           с флагом <constant>WNOWAIT</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>WEXITED</constant></entry>
          <entry>
           Ожидать процессы, которые сообщили о выходе.
          </entry>
         </row>
         <row>
          <entry><constant>WNOHANG</constant></entry>
          <entry>
           Не зависать, если статус недоступен; немедленно вернуть результат.
          </entry>
         </row>
         <row>
          <entry><constant>WNOWAIT</constant></entry>
          <entry>
           Сохранять процесс, статус которого возвращается в параметре <parameter>info</parameter>,
           в состоянии ожидания. Это не влияет на состояние процесса;
           процесс разрешается ожидать снова после завершения этого вызова.
          </entry>
         </row>
         <row>
          <entry><constant>WSTOPPED</constant></entry>
          <entry>
           Возвращать статус дочернего процесса,
           который остановился после получения сигнала и статус которого
           либо не сообщался с момента остановки процесса, либо о статусе сообщалось
           только через вызовы функции <function>pcntl_waitid</function>
           с флагом <constant>WNOWAIT</constant>.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>resource_usage</parameter></term>
    <listitem>
     <para>
      Функция заполнит переменную <parameter>resource_usage</parameter> массивом
      со статистикой потребления ресурсов дочерним процессом.

      Функция заполняет переменную, только если в системах наподобие FreeBSD доступен системный вызов wait6
      или в ОС Linux при доступности прямого системного вызова waitid.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция <function>pcntl_waitid</function> возвращает &true;,
   если указали флаг <constant>WNOHANG</constant> и статус недоступен
   ни для одного процесса, который определили аргументами
   <parameter>idtype</parameter> и <parameter>id</parameter>.
  </para>

  <para>
   Функция <function>pcntl_waitid</function> возвращает &true;
   при изменении состояния дочернего процесса.
  </para>

  <para>
   В остальных случаях возвращается &false;, а номер ошибки <literal>errno</literal>
   получают функцией <function>pcntl_get_last_error</function>.
  </para>

  <note>
   <para>
    Текстовое описание номера ошибки <literal>errno</literal>
    получают функцией <function>pcntl_strerror</function>.
   </para>
  </note>
 </refsect1>

  <refsect1 role="errors">
  &reftitle.errors;
  <table>
   <title>Значения номера ошибки <literal>errno</literal></title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry><constant>ECHILD</constant></entry>
      <entry>
       У родительского процесса нет дочерних процессов, которые бы не ожидала функция.
      </entry>
     </row>
     <row>
      <entry><constant>EINTR</constant></entry>
      <entry>
       Выполнение функции <function>pcntl_waitid</function> прервал сигнал.
      </entry>
     </row>
     <row>
      <entry><constant>EINVAL</constant></entry>
      <entry>
       В аргументе <parameter>flags</parameter> передали недопустимое значение
       или через аргументы <parameter>idtype</parameter> и <parameter>id</parameter>
       указали недопустимый набор процессов.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.5.0</entry>
      <entry>
       Добавили параметр <parameter>resource_usage</parameter>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_waitpid</function></member>
    <member><function>pcntl_wait</function></member>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>pcntl_wifexited</function></member>
    <member><function>pcntl_wifstopped</function></member>
    <member><function>pcntl_wifsignaled</function></member>
    <member><function>pcntl_wexitstatus</function></member>
    <member><function>pcntl_wtermsig</function></member>
    <member><function>pcntl_wstopsig</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
