<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2a7c919451f9a536431ba2117f8f90ae814c1c5f Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strtr" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>Преобразовывает заданные символы или заменяет подстроки</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  <simpara>Альтернативная сигнатура (не поддерживается с именованными аргументами):</simpara>
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>array</type><parameter>replace_pairs</parameter></methodparam>
  </methodsynopsis>
  <para>
   Если указаны три аргумента, эта функция возвращает копию
   <parameter>string</parameter>, в которой все вхождения каждого
   символа (однобайтного) из <parameter>from</parameter> были заменены
   на соответствующий символ в параметре <parameter>to</parameter>,
   то есть каждое вхождение из <literal>$from[$n]</literal> заменяется
   на <literal>$to[$n]</literal>, где <literal>$n</literal> - это
   корректное смещение строки в обоих аргументах.
  </para>
  <para>
   Если длины строк <parameter>from</parameter> и
   <parameter>to</parameter> отличаются, "лишние" символы в более
   длинной строке не используются. Длина возвращаемого значения
   будет такой же, как и длина <parameter>string</parameter>.
  </para>
  <para>
   <function>strtr</function> может вызываться с двумя аргументами.
   В этом случае <parameter>from</parameter> должен быть массивом
   (<type>array</type>), в форме
   <literal>array('from' =&gt; 'to', ...)</literal>. Функция возвратит
   строку, в которой все ключи массива будут заменены их элементами.
   <function>strtr</function> в первую очередь заменяет более
   длинные ключи, причём одна и та же строка поиска используется
   только один раз.
  </para>
  <para>
   В этом случае, ключи и значения могут иметь любую длину,
   за исключением того, что ключи не должны быть пустыми. Кроме того,
   длина возвращаемого значения может отличаться от
   <parameter>string</parameter>.
   Однако, стоит учесть тот факт, что эта функция максимально
   эффективна в том случае, если все ключи имеют одинаковый размер.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Заменяемая строка (<type>string</type>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
       Строка (<type>string</type>), которая будет заменена на строку <parameter>to</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
       Строка (<type>string</type>), заменяющая строку <parameter>from</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace_pairs</parameter></term>
     <listitem>
      <para>
       Параметр <parameter>replace_pairs</parameter> может быть
       использован вместо <parameter>to</parameter> и <parameter>from</parameter>,
       в этом случае он является массивом (<type>array</type>) и имеет
       форму <literal>array('from' =&gt; 'to', ...)</literal>.
      </para>
      <para>
       Если <parameter>replace_pairs</parameter> содержит ключ, который является пустой
       строкой (<type>string</type>) (<literal>""</literal>), элемент игнорируется;
       начиная с PHP 8.0.0 в этом случае вызывается <constant>E_WARNING</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает строку (<type>string</type>) с произведёнными в
   ней заменами.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>strtr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
//В этой форме strtr() осуществляет побайтное преобразование
//Таким образом, здесь подразумевается однобайтная кодировка:
$addr = strtr($addr, "äåö", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Следующий пример демонстрирует поведение функции <function>strtr</function>
   при вызове только с двумя аргументами. Обратите внимание на
   приоритет замен (<literal>"h"</literal> не используется, так как
   существуют более длинные совпадения) и как заменённый текст
   больше не участвует в поиске.
  </para>
  <example>
   <title>Пример использования <function>strtr</function> с двумя аргументами</title>
   <programlisting role="php">
<![CDATA[
<?php
$trans = array("h" => "-", "hello" => "hi", "hi" => "hello");
echo strtr("hi all, I said hello", $trans);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
hello all, I said hi
]]>
   </screen>
  </example>
  <para>
   Эти два режима довольно сильно различаются. При вызове
   <function>strtr</function> с тремя аргументами заменяются байты,
   а при вызове с двумя аргументами могут быть заменены и
   более длинные подстроки.
  </para>
  <example>
   <title>Сравнение поведения функции <function>strtr</function></title>
   <programlisting role="php">
<![CDATA[
<?php
echo strtr("baab", "ab", "01"),"\n";

$trans = array("ab" => "01");
echo strtr("baab", $trans);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
1001
ba01
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
