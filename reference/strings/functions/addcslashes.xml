<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.addcslashes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>addcslashes</refname>
  <refpurpose>Экранирует строку слешами в стиле языка C</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>addcslashes</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>characters</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает строку, экранированную обратными слешами перед символами,
   указанными в параметре <parameter>characters</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Экранируемая строка.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>characters</parameter></term>
     <listitem>
      <para>
       Список экранируемых символов.
       Если <parameter>characters</parameter> содержит символы
       <literal>\n</literal>, <literal>\r</literal> и т.п., они
       будут преобразованы в стиле C, тогда как другие нецифробуквенные
       символы с ASCII-кодами ниже 32 и выше 126 будут преобразованы в
       восьмеричное представление.
      </para>
      <para>
       Следует быть внимательным при указании диапазона символов в
       аргументе charlist. Проверяйте, какие символы входят в этот
       диапазон.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes('foo[ ]', 'A..z');
// выводит:  \f\o\o\[ \]
// Будут экранированы заглавные и строчные английские буквы
// ... а также [\]^_`
?>
]]>
        </programlisting>
       </informalexample>
       Также, если ASCII-код первого символа диапазона больше, чем
       последнего, диапазон не будет создан. Вместо этого будут
       экранироваться только первый символ, последний символ и
       точка. Для  определения ASCII-кода символов используйте функцию
       <function>ord</function>.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes("zoo['.']", 'z..A');
// выводит:  \zoo['\.']
?>
]]>
        </programlisting>
       </informalexample>
      </para>
      <para>
       Будьте внимательны при экранировании символов 0, a, b, f, n, r, t и v.
       Они будут преобразованы в \0, \a, \b, \f, \n, \r, \t и \v, которые являются
       предопределёнными escape-последовательностями в языке Си. Многие из этих
       последовательностей также определены в других Си-подобных языках, включая PHP.
       Это означает, что вы можете не получить ожидаемого результата, если будете использовать
       вывод функции <function>addcslashes</function> для создания кода в этих языках
       с использованием этих символов в <parameter>characters</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает экранированную строку.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    <parameter>characters</parameter>, например, "\0..\37", что
    проэкранирует все символы с ASCII-кодами от 0 до 31.
   <example>
    <title>Пример использования <function>addcslashes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$escaped = addcslashes($not_escaped, "\0..\37!@\177..\377");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripcslashes</function></member>
    <member><function>stripslashes</function></member>
    <member><function>addslashes</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
