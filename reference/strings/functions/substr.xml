<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 89ee07c72d1b19bf7050f8df276159a5bf0645c3 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.substr" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr</refname>
  <refpurpose>Возвращает подстроку</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>substr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Возвращает подстроку строки <parameter>string</parameter>, начинающейся
   с <parameter>offset</parameter> символа по счету и длиной
   <parameter>length</parameter> символов.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Входная строка.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Если <parameter>offset</parameter> неотрицателен, возвращаемая
       подстрока начинается с позиции <parameter>offset</parameter> от начала
       строки, считая от нуля. Например, в строке
       '<literal>abcdef</literal>', в позиции <literal>0</literal> находится
       символ '<literal>a</literal>', в позиции <literal>2</literal> -
       символ '<literal>c</literal>', и т.д.
      </para>
      <para>
       Если <parameter>offset</parameter> отрицательный, возвращаемая
       подстрока начинается с позиции, отстоящей на
       <parameter>offset</parameter> символов от конца
       строки <parameter>string</parameter>.
      </para>
      <para>
       Если <parameter>string</parameter> меньше
       <parameter>offset</parameter> символов, будет возвращена пустая строка.
      </para>
      <para>
       <example>
        <title>Использование отрицательного параметра <parameter>offset</parameter></title>
        <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // возвращает "f"
$rest = substr("abcdef", -2);    // возвращает "ef"
$rest = substr("abcdef", -3, 1); // возвращает "d"
?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Если <parameter>length</parameter> положительный, возвращаемая строка
       будет не длиннее <parameter>length</parameter> символов, начиная
       с параметра <parameter>offset</parameter> (в зависимости от длины
       <parameter>string</parameter>).
      </para>
      <para>
       Если <parameter>length</parameter> отрицательный, то будет отброшено
       указанное этим аргументом число символов с конца строки
       <parameter>string</parameter> (после того как будет вычислена
       стартовая позиция, если <parameter>offset</parameter> отрицателен).
       Если при этом позиция начала
       подстроки, определяемая аргументом <parameter>offset</parameter>,
       находится в отброшенной части строки или за ней, возвращается пустая строка.
      </para>
      <para>
       Если указан параметр <parameter>length</parameter> и является
       одним из <literal>0</literal>, &false; или &null;, то будет
       возвращена пустая строка.
      </para>
      <para>
       Если параметр <parameter>length</parameter> опущен, то будет
       возвращена подстрока, начинающаяся с позиции, указанной параметром
       <parameter>offset</parameter> и длящейся до конца строки.
      </para>
      <example>
       <title>Использование отрицательного параметра <parameter>length</parameter></title>
       <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // возвращает "abcde"
$rest = substr("abcdef", 2, -1);  // возвращает "cde"
$rest = substr("abcdef", 4, -4);  // возвращает ""; до PHP 8.0.0 возвращалось false
$rest = substr("abcdef", -3, -1); // возвращает "de"
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает извлечённую часть параметра <parameter>string</parameter> или
   пустую строку.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> теперь допускает значение null.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Функция возвращает пустую строку там, где раньше возвращала &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Базовое использование <function>substr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// Получить доступ к отдельному символу в строке
// можно также с помощью квадратных скобок
$string = 'abcdef';
echo $string[0];                 // a
echo $string[3];                 // d
echo $string[strlen($string)-1]; // f

?>
]]>
    </programlisting>
   </example>
   <example>
    <title><function>substr</function> и приведение типов</title>
    <programlisting role="php">
<![CDATA[
<?php
class apple {
    public function __toString() {
        return "green";
    }
}

echo "1) ".var_export(substr("pear", 0, 2), true).PHP_EOL;
echo "2) ".var_export(substr(54321, 0, 2), true).PHP_EOL;
echo "3) ".var_export(substr(new apple(), 0, 2), true).PHP_EOL;
echo "4) ".var_export(substr(true, 0, 1), true).PHP_EOL;
echo "5) ".var_export(substr(false, 0, 1), true).PHP_EOL;
echo "6) ".var_export(substr("", 0, 1), true).PHP_EOL;
echo "7) ".var_export(substr(1.2e3, 0, 4), true).PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1) 'pe'
2) '54'
3) 'gr'
4) '1'
5) ''
6) ''
7) '1200'
]]>
    </screen>
   </example>
   <example>
    <title>Недопустимый диапазон символов</title>
    <para>
     Если запрашивается недопустимый диапазон символов, <function>substr</function> возвращает
     пустую строку, начиная с PHP 8.0.0; ранее возвращалось &false;.
    </para>
    <example>
     <programlisting role="php">
      <![CDATA[
<?php
var_dump(substr('a', 2));
?>
]]>
     </programlisting>
     &example.outputs.8;
     <screen>
      <![CDATA[
string(0) ""
]]>]
     </screen>
     &example.outputs.7;
     <screen>
      <![CDATA[
bool(false)
]]>
     </screen>
    </example>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strrchr</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>trim</function></member>
    <member><function>mb_substr</function></member>
    <member><function>wordwrap</function></member>
    <member><link linkend="language.types.string.substr">Посимвольный доступ и изменение строки</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
