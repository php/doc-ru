<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strtok" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtok</refname>
  <refpurpose>Разбивает строку на токены</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <simpara>Альтернативная сигнатура (не поддерживается с именованными аргументами):</simpara>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>strtok</function> разбивает строку
   <parameter>string</parameter> на подстроки, или токены, при этом
   каждый токен отделяется любым символом из параметра <parameter>token</parameter>.
   Функция могла бы, например, разбить, или токенизировать, строку вроде «This is an example string»
   на отдельные слова символом пробела как <parameter>token</parameter>-разделителем.
  </para>
  <para>
   Заметьте, что аргумент <parameter>string</parameter> передают только при первом вызове
   функции. Очередным вызовам требуется только аргумент <parameter>token</parameter>,
   поскольку функция сохраняет исходную строку и запоминает позицию в ней
   между вызовами. Чтобы начать заново или токенизировать новую строку <parameter>string</parameter>,
   функцию просто вызывают с аргументом <parameter>string</parameter>, чтобы инициализировать строку.
   Обратите внимание, что в параметре <parameter>token</parameter> разрешается указывать больше одного разделителя.
   Функция токенизирует строку, когда встречает любой из символов аргумента (<parameter>token</parameter>).
  </para>
  <note>
   <para>
    Функция ведёт себя иначе, чем можно было бы ожидать после знакомства с функцией <function>explode</function>.
    Во-первых, функция считает одним разделителем последовательность из двух или более
    смежных символов <parameter>token</parameter> в строке, которую разбирает.
    Кроме этого, функция игнорирует значения <parameter>token</parameter> в начале или конце строки.
    При обработке строки <literal>«;aaa;;bbb;»</literal> последовательные вызовы функции <function>strtok</function>
    с символом <literal>«;»</literal> в качестве значения параметра <parameter>token</parameter>
    вернут строки «aaa» и «bbb», а затем &false;.
    В результате эта функция разобьёт строку только на два элемента,
    а вызов <literal>explode(";", $string)</literal> вернёт массив из 5 элементов.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Строка (<type>string</type>), разбиваемая на подстроки (токены).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>token</parameter></term>
     <listitem>
      <para>
       Разделитель строки <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает токен в виде строки (<type>string</type>) или &false;, если токенов не осталось.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        Функция теперь выдаёт ошибку уровня <constant>E_WARNING</constant>,
        когда параметр <parameter>token</parameter> не указали.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример разбиения строки на токены функцией <function>strtok</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$string = "This is\tan example\nstring";
/* Указываем пробел, табуляцию и перевод строки как символы разбора на токены */
$tok = strtok($string, " \n\t");

while ($tok !== false) {
    echo "Word={$tok}\n";
    $tok = strtok(" \n\t");
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Способ обработки пустых подстрок функцией <function>strtok</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$first_token  = strtok('/something', '/');
$second_token = strtok('/');
var_dump($first_token, $second_token);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
    string(9) "something"
    bool(false)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Разница в поведении функций <function>strtok</function> и <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$string = ";aaa;;bbb;";

$parts = [];
$tok = strtok($string, ";");
while ($tok !== false) {
    $parts[] = $tok;
    $tok = strtok(";");
}
echo json_encode($parts),"\n";

$parts = explode(";", $string);
echo json_encode($parts),"\n";

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
["aaa","bbb"]
["","aaa","","bbb",""]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &return.falseproblem;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>explode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
