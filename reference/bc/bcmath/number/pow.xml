<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c7e83fbbbcde9f54affc09424d032c38492a3ff4 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="bcmath-number.pow" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>BcMath\Number::pow</refname>
  <refpurpose>Возводит число произвольной точности в степень</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="BcMath\\Number">
   <modifier>public</modifier> <type>BcMath\Number</type><methodname>BcMath\Number::pow</methodname>
   <methodparam><type class="union"><type>BcMath\Number</type><type>string</type><type>int</type></type><parameter>exponent</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>scale</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Метод возводит число произвольной точности в значении переменной <varname>$this</varname> в степень <parameter>exponent</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>exponent</parameter></term>
    <listitem>
     <simpara>
       Показатель степени. Параметр принимает значения без дробной части.
       Допустимый диапазон значений показателя степени <parameter>exponent</parameter> зависит от платформы,
       но это как минимум значения от <literal>-2_147_483_648</literal> до <literal>2_147_483_647</literal>.
     </simpara>
    </listitem>
   </varlistentry>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('bcmath-number.add')/db:refsect1[@role='parameters']/descendant::db:varlistentry[2])" />
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Метод возвращает результат возведения числа в степень в виде нового объекта <classname>BcMath\Number</classname>.
  </simpara>
  <para>
   При автоустановке в объекте с результатом значения свойству <property>BcMath\Number::scale</property>
   в зависимости от значения показателя степени <parameter>exponent</parameter> значение масштаба
   <property>BcMath\Number::scale</property> в результате будет следующим:
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Значение аргумента <parameter>exponent</parameter></entry>
       <entry>Значение свойства <property>BcMath\Number::scale</property> в результате</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>положительное</entry>
       <entry>
         (масштаб <property>BcMath\Number::scale</property> основания) * (значение показателя степени <parameter>exponent</parameter>)
       </entry>
      </row>
      <row>
       <entry><literal>0</literal></entry>
       <entry><literal>0</literal></entry>
      </row>
      <row>
       <entry>negative</entry>
       <entry>
        Значение между (масштабом <property>BcMath\Number::scale</property> основания)
        и (масштабом <property>BcMath\Number::scale</property> основания + <literal>10</literal>)
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
  <simpara>
   Значение свойства <property>BcMath\Number::scale</property> в объекте с результатом расширяется,
   если из-за отрицательного значения аргумента <parameter>exponent</parameter> возникает неделимое деление.
   Метод расширяет масштаб только когда требуется и не больше чем на <literal>+10</literal> знаков.
   Поведение этого метода повторяет поведение метода <methodname>BcMath\Number::div</methodname>, описание которого даёт
   дополнительную информацию.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод выбрасывает ошибку <exceptionname>ValueError</exceptionname> в следующих случаях:
   <simplelist>
    <member>
     В аргументе <parameter>exponent</parameter> передали значение с типом <type>string</type>,
     которое сформировали неправильно с точки зрения допустимого формата числовых строк в модуле BCMath.
    </member>
    <member>
     Значение аргумента <parameter>exponent</parameter> содержит дробную часть.
    </member>
    <member>
     Значение показателя степени <parameter>exponent</parameter>
     или масштаба <parameter>scale</parameter> выходит за пределы допустимого диапазона.
    </member>
    <member>
     Значение свойства <property>BcMath\Number::scale</property> в объекте с результатом выходит за пределы допустимого диапазона.
    </member>
   </simplelist>
  </para>
  <simpara>
   Метод выбрасывает ошибку <exceptionname>DivisionByZeroError</exceptionname>, если значение переменной <varname>$this</varname>
   равняется <literal>0</literal>, а аргумент показателя степени <parameter>exponent</parameter> отрицателен.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>
    Пример возведения числа произвольной точности в степень методом <methodname>BcMath\Number::pow</methodname>
    без указания значения для параметра <parameter>scale</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php

$number = new BcMath\Number('3.0');

$ret1 = $number->pow(new BcMath\Number('5'));
$ret2 = $number->pow('-1');
$ret3 = $number->pow(0);

var_dump($number, $ret1, $ret2, $ret3);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#1 (2) {
  ["value"]=>
  string(3) "3.0"
  ["scale"]=>
  int(1)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(9) "243.00000"
  ["scale"]=>
  int(5)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(13) "0.33333333333"
  ["scale"]=>
  int(11)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(1) "1"
  ["scale"]=>
  int(0)
}
]]>
   </screen>
  </example>

  <example>
   <title>
     Пример возведения числа произвольной точности в степень методом <methodname>BcMath\Number::pow</methodname>
     с явным значением для параметра <parameter>scale</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php

$number = new BcMath\Number('3.0');

$ret1 = $number->pow(new BcMath\Number('5'), 0);
$ret2 = $number->pow('-1', 2);
$ret3 = $number->pow(0, 10);

var_dump($number, $ret1, $ret2, $ret3);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#1 (2) {
  ["value"]=>
  string(3) "3.0"
  ["scale"]=>
  int(1)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(3) "243"
  ["scale"]=>
  int(0)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(4) "0.33"
  ["scale"]=>
  int(2)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(12) "1.0000000000"
  ["scale"]=>
  int(10)
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>bcpow</function></member>
   <member><methodname>BcMath\Number::powmod</methodname></member>
   <member><methodname>BcMath\Number::mul</methodname></member>
   <member><methodname>BcMath\Number::sqrt</methodname></member>
   <member><methodname>BcMath\Number::div</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
