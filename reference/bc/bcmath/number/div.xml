<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a414ee95eb79e2c62c80827a46e15da5d15af97e Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="bcmath-number.div" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>BcMath\Number::div</refname>
  <refpurpose>Делит числа произвольной точности</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="BcMath\\Number">
   <modifier>public</modifier> <type>BcMath\Number</type><methodname>BcMath\Number::div</methodname>
   <methodparam><type class="union"><type>BcMath\Number</type><type>string</type><type>int</type></type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>scale</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Метод делит значение переменной <varname>$this</varname> на число в аргументе <parameter>num</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>num</parameter></term>
    <listitem>
     <simpara>
      Делитель.
     </simpara>
    </listitem>
   </varlistentry>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('bcmath-number.add')/db:refsect1[@role='parameters']/descendant::db:varlistentry[2])" />
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Метод возвращает результат деления как новый объект <classname>BcMath\Number</classname>.
  </simpara>
  <simpara>
   При автоустановке в объекте с результатом значения свойству <property>BcMath\Number::scale</property>
   метод устанавливает свойству значение масштаба <property>BcMath\Number::scale</property> делимого, но при невозможности деления
   расширяет значение свойства <property>BcMath\Number::scale</property> в объекте с результатом.
   Метод расширяет масштаб только когда требуется и не больше чем на <literal>+10</literal> знаков.
  </simpara>
  <simpara>
   Метод установит значение масштаба <property>BcMath\Number::scale</property> в результате между <literal>5</literal>
   и <literal>15</literal>, если значение свойства <property>BcMath\Number::scale</property> в делимом равняется <literal>5</literal>.
  </simpara>
  <simpara>
   Даже в неделимых вычислениях значение свойства <property>BcMath\Number::scale</property>
   расширяется на <literal>+10</literal> знаков не в каждой операции.
   Метод считает, что <literal>0</literal> в конце результата не требует расширения,
   поэтому масштаб <property>BcMath\Number::scale</property> уменьшается до этой величины.
   Значение свойства <property>BcMath\Number::scale</property> никогда не будет меньше,
   чем масштаб <property>BcMath\Number::scale</property> перед расширением.
   Смотрите также <link linkend="bcmath-number.div.example.expansion-scale">пример кода</link>.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод выбрасывает ошибку <exceptionname>ValueError</exceptionname> в следующих случаях:
   <simplelist>
    <member>
     В аргументе <parameter>num</parameter> передали значение с типом <type>string</type>,
     которое сформировали неправильно с точки зрения допустимого формата числовых строк в модуле BCMath.
    </member>
    <member>
     Значение аргумента <parameter>scale</parameter> выходит за пределы допустимого диапазона.
    </member>
    <member>
     Значение свойства <property>BcMath\Number::scale</property> в объекте с результатом выходит за пределы допустимого диапазона.
    </member>
   </simplelist>
  </para>
  <simpara>
   Метод выбрасывает ошибку <exceptionname>DivisionByZeroError</exceptionname>,
   если значение аргумента <parameter>num</parameter> равняется <literal>0</literal>.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>
    Пример деления чисел произвольной точности методом <methodname>BcMath\Number::div</methodname>
    без указания значения для параметра <parameter>scale</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php

$number = new BcMath\Number('0.002');

$ret1 = $number->div(new BcMath\Number('2.000'));
$ret2 = $number->div('-3');
$ret3 = $number->div(32);

var_dump($number, $ret1, $ret2, $ret3);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#1 (2) {
  ["value"]=>
  string(5) "0.002"
  ["scale"]=>
  int(3)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(5) "0.001"
  ["scale"]=>
  int(3)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(16) "-0.0006666666666"
  ["scale"]=>
  int(13)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(9) "0.0000625"
  ["scale"]=>
  int(7)
}
]]>
   </screen>
  </example>

  <example>
   <title>
    Пример деления чисел произвольной точности методом <methodname>BcMath\Number::div</methodname>
    с явным значением для параметра <parameter>scale</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php

$number = new BcMath\Number('0.002');

$ret1 = $number->div(new BcMath\Number('2.000'), 15);
$ret2 = $number->div('-3', 5);
$ret3 = $number->div(32, 2);

var_dump($number, $ret1, $ret2, $ret3);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#1 (2) {
  ["value"]=>
  string(5) "0.002"
  ["scale"]=>
  int(3)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(17) "0.001000000000000"
  ["scale"]=>
  int(15)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(8) "-0.00066"
  ["scale"]=>
  int(5)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(4) "0.00"
  ["scale"]=>
  int(2)
}
]]>
   </screen>
  </example>

  <example xml:id="bcmath-number.div.example.expansion-scale">
   <title>
     Пример расширения масштаба <property>BcMath\Number::scale</property> в объекте с результатом
     при делении чисел произвольной точности методом <methodname>BcMath\Number::div</methodname>
   </title>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(
    new BcMath\Number('0.001')->div('10001'),
    new BcMath\Number('0.001')->div('10001', 13),
    new BcMath\Number('0.001')->div('100000000000001'),
);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(13) "0.00000009999"
  ["scale"]=>
  int(11)
}
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(15) "0.0000000999900"
  ["scale"]=>
  int(13)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(5) "0.000"
  ["scale"]=>
  int(3)
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>bcdiv</function></member>
   <member><methodname>BcMath\Number::divmod</methodname></member>
   <member><methodname>BcMath\Number::mod</methodname></member>
   <member><methodname>BcMath\Number::sqrt</methodname></member>
   <member><methodname>BcMath\Number::pow</methodname></member>
   <member><methodname>BcMath\Number::mul</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
