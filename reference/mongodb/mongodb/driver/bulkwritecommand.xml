<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 187032b3ea20fa28f1c9f29ba38d06820428f849 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.mongodb-driver-bulkwritecommand" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Класс MongoDB\Driver\BulkWriteCommand</title>
 <titleabbrev>MongoDB\Driver\BulkWriteCommand</titleabbrev>

 <partintro>

<!-- {{{ MongoDB\Driver\BulkWriteCommand intro -->
  <section xml:id="mongodb-driver-bulkwritecommand.intro">
   &reftitle.intro;
   <para>
    Класс <classname>MongoDB\Driver\BulkWriteCommand</classname> собирает одну или набор
    операций записи, которые требуется отправить на сервер командой
    <link xlink:href="&url.mongodb.docs.command;bulkWrite">bulkWrite</link>,
    которая появилась в MongoDB 8.0. После добавления произвольного количества операций вставки,
    обновления и удаления команда готова к выполнению методом
    <methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname>.
   </para>
   <para>
    В отличие от класса <classname>MongoDB\Driver\BulkWrite</classname>, в котором каждую
    операцию записи требуется нацелить на ту же коллекцию, каждая операция записи внутри объекта
    <classname>MongoDB\Driver\BulkWriteCommand</classname> умеет нацеливаться на другую
    коллекцию.
   </para>
   <para>
    Операции записи по умолчанию отправляются на сервер в порядке добавления, но возможен и произвольный порядок.
    Упорядоченные операции записи отправляются на сервер для последовательного выполнения в заданном порядке.
    Остальные операции прерываются, если при записи возникла ошибка.
    Неупорядоченные операции отправляются на сервер в произвольном порядке
    и выполняются последовательно или параллельно — по усмотрению сервера. Об ошибках
    сообщается после обработки всех операций.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="mongodb-driver-bulkwritecommand.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDB\Driver\BulkWriteCommand</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <modifier>final</modifier>
     <ooclass>
      <classname>MongoDB\Driver\BulkWriteCommand</classname>
     </ooclass>

     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodb-driver-bulkwritecommand')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="mongodb-driver-bulkwritecommand.examples">
   &reftitle.examples;

   <example>
    <title>Смешанные операции записи</title>
    <para>
     Смешанные операции записи наподобие вставок, обновлений или удалений отправляются
     на сервер одной командой
     <link xlink:href="&url.mongodb.docs.command;bulkWrite">bulkWrite</link>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager();

$bulk = new MongoDB\Driver\BulkWriteCommand();

// Удалить документы из обоих коллекций
$bulk->deleteMany('db.coll_one', []);
$bulk->deleteMany('db.coll_two', []);

// Вставить документы в две коллекции
$bulk->insertOne('db.coll_one', ['_id' => 1]);
$bulk->insertOne('db.coll_two', ['_id' => 2]);
$bulk->insertOne('db.coll_two', ['_id' => 3]);

// Обновить документ в столбце "coll_one"
$bulk->updateOne('db.coll_one', ['_id' => 1], ['$set' => ['x' => 1]]);

$result = $manager->executeBulkWriteCommand($bulk);

printf("Количество операций вставки документов: %d\n", $result->getInsertedCount());
printf("Количество операций обновления документов: %d\n", $result->getModifiedCount());

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Количество операций вставки документов: 3
Количество операций обновления документов: 1
]]>
    </screen>
   </example>
   <example>
    <title>Упорядоченные операции записи, при которых возникает ошибка</title>
    <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager();

$bulk = new MongoDB\Driver\BulkWriteCommand();

$bulk->deleteMany('db.coll', []);
$bulk->insertOne('db.coll', ['_id' => 1]);
$bulk->insertOne('db.coll', ['_id' => 2]);
$bulk->insertOne('db.coll', ['_id' => 1]);
$bulk->insertOne('db.coll', ['_id' => 3]);

try {
    $result = $manager->executeBulkWriteCommand($bulk);
} catch (MongoDB\Driver\Exception\BulkWriteCommandException $e) {
    $result = $e->getPartialResult();

    var_dump($e->getWriteErrors());
}

printf("Количество операций вставки документов: %d\n", $result->getInsertedCount());

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(1) {
  [3]=>
  object(MongoDB\Driver\WriteError)#5 (4) {
    ["message"]=>
    string(78) "E11000 duplicate key error collection: db.coll index: _id_ dup key: { _id: 1 }"
    ["code"]=>
    int(11000)
    ["index"]=>
    int(3)
    ["info"]=>
    object(stdClass)#6 (0) {
    }
  }
}
Количество операций вставки документов: 2
]]>
    </screen>
   </example>
  </section>

  <section xml:id="mongodb-driver-bulkwritecommand.seealso">
   &reftitle.seealso;
   <simplelist>
    <member><methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname></member>
    <member><classname>MongoDB\Driver\BulkWriteCommandResult</classname></member>
    <member><classname>MongoDB\Driver\Exception\BulkWriteCommandException</classname></member>
    <member><classname>MongoDB\Driver\WriteConcern</classname></member>
    <member><classname>MongoDB\Driver\WriteConcernError</classname></member>
    <member><classname>MongoDB\Driver\WriteError</classname></member>
   </simplelist>
  </section>

 </partintro>

 &reference.mongodb.mongodb.driver.entities.bulkwritecommand;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
