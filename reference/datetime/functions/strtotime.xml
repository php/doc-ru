<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5c951013ca04161992efed8b86fb40f55669958e Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Преобразовывает текстовое представление даты на английском языке в метку времени Unix</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>baseTimestamp</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Первым параметром функция ожидает строку с датой на английском языке, которая
   будет преобразована в метку времени Unix (количество секунд, прошедших с 1 января 1970
   года 00:00:00 UTC) относительно метки времени, переданной
   в параметр <parameter>baseTimestamp</parameter>, или текущего времени, если аргумент
   <parameter>baseTimestamp</parameter> опущен.
   Разбор строки даты определён в разделе «<link linkend="datetime.formats">Форматы даты и времени</link>»
   и содержит несколько тонких вопросов. Знание форматов упростит работу с функцией.
  </simpara>
  <warning>
   <para>
    Метка времени Unix, которую возвращает функция, не содержит данных
    о часовых поясах. Для расчётов с датой/временем
    обращаются к инструменту с бо́льшими способностями — классу <classname>DateTimeImmutable</classname>.
   </para>
  </warning>
  <para>
   Каждый параметр функции будет использовать часовой пояс по умолчанию,
   если он не указан в нём. Соблюдают осторожность и не указывают разные
   метки времени в параметрах, если только так не было задумано.
   О способах установки часового пояса по умолчанию рассказано в описании функции
   <function>date_default_timezone_get</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>&date.formats.parameter;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>baseTimestamp</parameter></term>
     <listitem>
      <para>
       Метка времени, которую функция будет использовать как основу для вычисления
       относительных дат.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает метку времени в случае успешного выполнения, иначе &false;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;

  &date.timezone.errors.description;

 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Теперь параметр <parameter>baseTimestamp</parameter> может принимать значение null.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php

echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";

]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Проверка ошибок</title>
    <programlisting role="php">
<![CDATA[
<?php

$str = 'Not Good';

if (($timestamp = strtotime($str)) === false) {
    echo "Строка ($str) недопустима";
} else {
    echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}

]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    «Относительная» дата в данном случае также означает,
    что если конкретный компонент метки даты/времени не указан,
    он будет взят дословно из параметра <parameter>baseTimestamp</parameter>.
    То есть, вызов <code>strtotime('February')</code>, если его запустить 31 мая 2022 года,
    будет интерпретирован как <literal>31 февраля 2022</literal>,
    что перенесётся в метку времени <literal>3 марта</literal>
    (в високосный год будет <literal>2 марта</literal>).
    Вызов <code>strtotime('1 February')</code> или <code>strtotime('first day of February')</code>
    не допустит этой проблемы.
   </para>
  </note>
  <note>
   <para>
    Если количество лет указано двумя цифрами, то значения 00-69 будут считаться 2000-2069,
    а 70-99 — 1970-1999. Замечания ниже рассказывают о возможных различиях на 32-битных
    системах (допустимые даты заканчиваются 2038-01-19 03:14:07).
   </para>
  </note>
  <note>
   <para>
    Корректный диапазон меток времени — это обычно даты с 13 декабря
    1901 20:45:54 UTC по 19 января 2038 03:14:07 UTC. (Эти даты
    соответствуют крайним значениям 32-битного целого числа со знаком.)
   </para>
   <para>
    В 64-битных версиях PHP корректный диапазон меток времени практически бесконечен,
    так как 64 битов хватит для представления около 293 миллиардов лет в обоих
    направлениях.
   </para>
  </note>
  <note>
   <para>
    Использовать эту функцию для математических операций не рекомендовано.
    Лучше пользоваться методами <methodname>DateTime::add</methodname>
    и <methodname>DateTime::sub</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><classname>DateTimeImmutable</classname></member>
    <member><methodname>DateTimeImmutable::createFromFormat</methodname></member>
    <member><link linkend="datetime.formats">Форматы даты и времени</link></member>
    <member><function>checkdate</function></member>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
