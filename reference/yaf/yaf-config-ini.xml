<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b77ea449e7387667c8c8386ea4f736748abf2787 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<phpdoc:classref xml:id="class.yaf-config-ini" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Класс Yaf_Config_Ini</title>
 <titleabbrev>Yaf_Config_Ini</titleabbrev>

 <partintro>

<!-- {{{ Yaf_Config_Ini intro -->
  <section xml:id="yaf-config-ini.intro">
   &reftitle.intro;
   <para>
   Yaf_Config_Ini позволяет разработчикам хранить конфигурационные данные в
   известном INI формате и читать их в приложении с использованием синтаксиса вложенных
   свойств объекта. INI формат специализируется на обеспечении возможности иметь иерархию
    ключей конфигурационных данных и наследовании между разделами конфигурационных
    данных. Иерархия конфигурационных данных поддерживается путём разделения ключей с
    точкой ("."). Разделы можно расширять или наследовать от других разделов путём
    проставления после имени раздела двоеточия (":") и названия раздела от которого данные
    унаследованы.
  <note>
   <para>
   Yaf_Config_Ini использует функцию parse_ini_file(). Пожалуйста изучите документацию
    для понимания её поведения, которое наследует Yaf_Config_Ini, такого как обработка
    специальных значений "&true;", "&false;", "yes", "no", и "&null;".
   </para>
  </note>
  </para>
  </section>
<!-- }}} -->

  <section xml:id="yaf-config-ini.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Config_Ini</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Config_Ini</classname>
     </ooclass>

     <ooclass>
      <modifier>extends</modifier>
      <classname>Yaf_Config_Abstract</classname>
     </ooclass>

     <oointerface>
      <interfacename>Iterator</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>ArrayAccess</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>


    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-config-ini')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-config-abstract')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />

   </classsynopsis>
<!-- }}} -->

  </section>


<!-- {{{ Yaf_Config_Ini properties -->
  <section xml:id="yaf-config-ini.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="yaf-config-ini.props.config">
     <term><varname>_config</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-config-ini.props.readonly">
     <term><varname>_readonly</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->

 <section role="examples">
  &reftitle.examples;
  <example>
   <title><function>Yaf_Config_Ini</function>example</title>
   <para>
    Этот пример раскрывает базовые особенности использования
    Yaf_Config_Ini при загрузке данных из INI-файла. В этом примере задаётся конфигурация
    для промышленной и демонстрационной среды. Так как конфигурация демо-среды
    очень похожа на конфигурацию промышленной, то она наследует от неё. Но вы в
    своих приложениях вольны поступать как хотите.
    В общем, вот такая конфигурация задана в /path/to/config.ini:
   </para>
   <programlisting role="ini">
<![CDATA[
; Промышленная среда
[production]
webhost                  = www.example.com
database.adapter         = pdo_mysql
database.params.host     = db.example.com
database.params.username = dbuser
database.params.password = secret
database.params.dbname   = dbname

; Демо-среда. Наследует конфигурацию промышленной с некоторыми поправками
[staging : production]
database.params.host     = dev.example.com
database.params.username = devuser
database.params.password = devsecret
]]>
   </programlisting>
   <programlisting role="php">
<![CDATA[
<?php
$config = new Yaf_Config_Ini('/path/to/config.ini', 'staging');

var_dump($config->database->params->host);
var_dump($config->database->params->dbname);
var_dump($config->get("database.params.username"));
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(15) "dev.example.com"
string(6) "dbname"
string(7) "devuser
]]>
   </screen>
  </example>
  </section>

 </partintro>

 &reference.yaf.entities.yaf-config-ini;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
