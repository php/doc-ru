<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 40ec84c3b39ae43075e2f98238907ae72cbd4bf8 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.yaf-plugin-abstract" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Класс Yaf_Plugin_Abstract</title>
 <titleabbrev>Yaf_Plugin_Abstract</titleabbrev>

 <partintro>

  <!-- {{{ Yaf_Plugin_Abstract intro -->
  <section xml:id="yaf-plugin-abstract.intro">
   &reftitle.intro;
   <para>
    Плагины позволяют легко расширять и настраивать фреймворк.
   </para>
   <para>
    Плагины являются классами.
    Определение класса будет меняться в зависимости от компонента - вам может
    понадобиться реализовать этот интерфейс, но факт остаётся фактом, плагин сам является
    классом.
   </para>
   <para>
    Плагин должен быть загружен в Yaf с использованием
    <methodname>Yaf_Dispatcher::registerPlugin</methodname>. После регистрации,
    все методы, реализованные плагином в соответствии с этим интерфейсом, будут
    вызываться вовремя.
   </para>
  </section>
  <!-- }}} -->

  <section role="examples">
   &reftitle.examples;
   <example>
    <title>Пример плагина</title>
    <programlisting role="php">
<![CDATA[
<?php
   /* Класс bootstrap должен быть определён как ./application/Bootstrap.php */
   class Bootstrap extends Yaf_Bootstrap_Abstract {
        public function _initPlugin(Yaf_Dispatcher $dispatcher) {
            /* регистрируем плагин */
            $dispatcher->registerPlugin(new TestPlugin());
        }
   }

   /* класс плагина должен лежать в ./application/plugins/ */
   class TestPlugin extends Yaf_Plugin_Abstract {
        public function routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            /* перед тем, как приступит к работе маршрутизатор,
                пользователь может сам поработать с перезаписью URL */
            var_dump("routerStartup");
        }
        public function routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            /* Маршрутизатор отработал, следовательно можно перейти к проверке логина */
            var_dump("routerShutdown");
        }
        public function dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            var_dump("dispatchLoopStartup");
        }
        public function preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            var_dump("preDispatch");
        }
        public function postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            var_dump("postDispatch");
        }
        public function dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            /* последняя возможность для пользователя что-то сделать */
            var_dump("dispatchLoopShutdown");
        }
   }

   Class IndexController extends Yaf_Controller_Abstract {
        public function indexAction() {
            return FALSE; //предотвращаем рендеринг
        }
   }

   $config = array(
       "application" => array(
           "directory" => dirname(__FILE__) . "/application/",
       ),
   );

   $app = new Yaf_Application($config);
   $app->bootstrap()->run();
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(13) "routerStartup"
string(14) "routerShutdown"
string(19) "dispatchLoopStartup"
string(11) "preDispatch"
string(12) "postDispatch"
string(20) "dispatchLoopShutdown"
]]>
   </screen>
  </example>
  </section>


  <section xml:id="yaf-plugin-abstract.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Plugin_Abstract</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Plugin_Abstract</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-plugin-abstract')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->

  </section>

 </partintro>

 &reference.yaf.entities.yaf-plugin-abstract;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
