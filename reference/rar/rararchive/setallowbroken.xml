<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6a6061bbd4b1c78af2b50aba8ddd8fd5e4590b05 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->
<refentry xml:id="rararchive.setallowbroken" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RarArchive::setAllowBroken</refname>
  <refpurpose>Открывать ли повреждённые архивы</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (method):</para>
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>RarArchive::setAllowBroken</methodname>
   <methodparam><type>bool</type><parameter>allow_broken</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;:</para>
  <methodsynopsis>
   <type>bool</type><methodname>rar_allow_broken_set</methodname>
   <methodparam><type>RarArchive</type><parameter>rarfile</parameter></methodparam>
   <methodparam><type>bool</type><parameter>allow_broken</parameter></methodparam>
  </methodsynopsis>
  <para>
   Метод определяет, можно ли пытаться читать повреждённый архив, или все операции
   с ним должны заканчиваться ошибкой. Повреждённые архивы - это такие архивы, которые
   открываются без ошибок, но при попытке прочитать записи возникают ошибки.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>rarfile</parameter></term>
     <listitem>
      <para>
       Объект <type>RarArchive</type>, открытый с помощью <function>rar_open</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allow_broken</parameter></term>
     <listitem>
      <para>
       Разрешать ли работу с повреждёнными архивами (&true;) или нет (&false;).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true; в случае успешного выполнения&return.falseforfailure;.
   Ошибка может возникнуть только если файл уже закрыт.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
   <para>
    <example>
     <title>&style.oop;</title>
     <programlisting role="php">
<![CDATA[
<?php
function retnull() { return null; }
$file = dirname(__FILE__) . "/multi_broken.part1.rar";
/* третий аргумент подавляет сообщение "volume not found" */
$a = RarArchive::open($file, null, 'retnull');
$a->setAllowBroken(true);
foreach ($a->getEntries() as $e) {
    echo "$e\n";
}
var_dump(count($a));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
RarEntry for file "file1.txt" (52b28202)
int(1)
]]>
    </screen>
   </example>
   </para>
   <para>
    <example>
     <title>&style.procedural;</title>
     <programlisting role="php">
<![CDATA[
<?php
function retnull() { return null; }
$file = dirname(__FILE__) . "/multi_broken.part1.rar";
/* третий аргумент подавляет сообщение "volume not found" */
$a = rar_open($file, null, 'retnull');
rar_allow_broken_set($a, true);
foreach (rar_list($a) as $e) {
    echo "$e\n";
}
var_dump(count($a));
?>
]]>
    </programlisting>
   </example>
   </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
   <para>
    <simplelist>
     <member><methodname>RarArchive::isBroken</methodname></member>
    </simplelist>
   </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
