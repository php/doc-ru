<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a0fcdcb58023bd4cb017fdba511df29b9f7a25f5 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.easter-date" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>easter_date</refname>
  <refpurpose>Получить метку времени Unix, соответствующую полуночи на Пасху в заданном году</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>easter_date</methodname>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>year</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>CAL_EASTER_DEFAULT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Возвращает метку времени Unix, соответствующую полуночи на Пасху в заданном году.
  </para>
  <para>
   Дата Пасхи была установлена на Первом Никейском соборе в 325 году до н. э.
   в честь воскресенья, следовавшего за полнолунием, наступившим в день или после весеннего равноденствия.
   Считалось, что День весеннего равноденствия всегда наступает 21 марта, поэтому расчёт дня Пасхи
   сводился к определению даты полнолуния и следующего за ней воскресенья. Используемый здесь алгоритм
   введён Дионисием Малым около 532 года. В юлианском летоисчислении (до 1753 года) для отслеживания фаз луны
   использовался простой 19-летний цикл. В григорианском календаре (годы после 1753 - разработан Христофором Клавиусом
   и Алоизием Лилиусом и введён Папой Григорием XIII в октябре 1582, а в Великобритании и её колониях
   в сентябре 1752 г.) было добавлено 2 поправочных коэффициента, увеличивающих точность расчёта дат.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>year</parameter></term>
     <listitem>
      <para>
       Год должен быть числом от 1970 до 2037 для 32-битных или 2 000 000 000 для 64-битных систем.
       Если не указан или &null;, будет использован текущий год по местному времени.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Позволяет рассчитывать даты Пасхи на основе Юлианского календаря,
       если установлено значение <constant>CAL_EASTER_ALWAYS_JULIAN</constant>. Смотрите также <link
        linkend="calendar.constants">константы календаря</link>.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает дату Пасхи в виде метки времени Unix.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Будет выброшено исключение <classname>ValueError</classname>, если значение года окажется меньше 1970 или больше 2037
   для 32-битных или 2 000 000 000 для 64-битных систем.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       На 64-битных системах параметр <parameter>year</parameter> теперь принимает значения в диапазоне от 1970 до 2 000 000 000.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>year</parameter> теперь может иметь значение &null;.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Будет выброшено исключение <classname>ValueError</classname>,
       если значение параметра <parameter>year</parameter> выходит за пределы допустимого диапазона.
       Ранее вызывалась ошибка уровня <constant>E_WARNING</constant>
       и функция возвращала &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>easter_date</function></title>
    <programlisting role="php">
<![CDATA[
<?php

echo date("M-d-Y", easter_date(1999));        // Apr-04-1999
echo date("M-d-Y", easter_date(2000));        // Apr-23-2000
echo date("M-d-Y", easter_date(2001));        // Apr-15-2001

?>
]]>
    </programlisting>
   </example>

   <example>
    <title>Пример использования <function>easter_date</function> с объектом класса <classname>DateTime</classname></title>
    <programlisting role="php">
<![CDATA[
<?php

$timestamp = easter_date(2023);

$datetime = new \DateTime();
$datetime->setTimestamp($timestamp);

echo $datetime->format('M-d-Y'); // Apr-09-2023

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Функция <function>easter_date</function> полагается на работающие со временем
    системные функции библиотеки языка Си, а не на работающие с датой и временем внутренние функции PHP.
    Вследствие этого для определения часового пояса,
    в котором она должна работать, функция <function>easter_date</function>
    использует переменную окружения <literal>TZ</literal>, а не заданный в PHP
    <link linkend="ini.date.timezone">часовой пояс по умолчанию</link>, что может
    привести к неожиданному поведению в сочетании с другими функциями PHP для работы с датами.
   </para>
   <para>
    В качестве обходного пути для расчёта начала Пасхи в текущем часовом поясе PHP
    можно использовать функцию <function>easter_days</function> с объектами классов
    <classname>DateTime</classname> и <classname>DateInterval</classname>
    следующим образом:
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function get_easter_datetime($year) {
    $base = new DateTime("$year-03-21");
    $days = easter_days($year);

    return $base->add(new DateInterval("P{$days}D"));
}

foreach (range(2012, 2015) as $year) {
    printf("Пасха в %d году приходится на %s\n",
           $year,
           get_easter_datetime($year)->format('F j'));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Пасха в 2012 году приходится на April 8
Пасха в 2013 году приходится на March 31
Пасха в 2014 году приходится на April 20
Пасха в 2015 году приходится на April 5
]]>
    </screen>
   </informalexample>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     Функция <function>easter_days</function> для расчёта дня Пасхи
     до 1970 или после 2037 года
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
