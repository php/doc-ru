<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: mch Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<refentry xml:id="function.stream-filter-prepend" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_filter_prepend</refname>
  <refpurpose>Прикрепляет фильтр к потоку</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>stream_filter_prepend</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>filtername</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>read_write</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Добавляет <parameter>filtername</parameter> к списку фильтров,
   прикреплённых к потоку <parameter>stream</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       Целевой поток.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filtername</parameter></term>
     <listitem>
      <para>
       Название потока.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>read_write</parameter></term>
     <listitem>
      <para>
       По умолчанию, функция <function>stream_filter_prepend</function> будет
       прикреплять фильтр к <literal>цепочке фильтров чтения</literal>,
       если файл был открыт для чтения (т.е. режим файла:
       <literal>r</literal>, и/или <literal>+</literal>). Фильтр
       также будет прикреплён к <literal>цепочке фильтров записи</literal>,
       если файл был открыт для записи (т.е. режим файла:
       <literal>w</literal>, <literal>a</literal>, и/или <literal>+</literal>).
       Константы <constant>STREAM_FILTER_READ</constant>,
       <constant>STREAM_FILTER_WRITE</constant> и/или
       <constant>STREAM_FILTER_ALL</constant> также могут быть переданы в параметре
       <parameter>read_write</parameter>, чтобы переопределить это поведение.
       Смотрите функцию <function>stream_filter_append</function> для примера
       использования этого параметра.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Этот фильтр будет добавлен с указанными параметрами <parameter>params</parameter>
       к <emphasis>началу</emphasis> списка и, таким образом, будет
       вызван первым во время потоковых операций. Для того, чтобы добавить фильтр к концу
       списка, используйте <function>stream_filter_append</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает ресурс в случае успешного выполнения или &false; в случае возникновения ошибки. Ресурс должен быть
   использован для ссылки на этот экземпляр фильтра во время вызова
   <function>stream_filter_remove</function>.
  </para>

  <para>
   Вернёт &false;, если <parameter>stream</parameter> не является ресурсом или если
   <parameter>filtername</parameter> не найден.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>При использовании пользовательских фильтров</title>
   <simpara>
    Сначала должна быть вызвана функция <function>stream_filter_register</function>
    для того, чтобы зарегистрировать желаемый пользовательский фильтр на имя <parameter>filtername</parameter>.
   </simpara>
  </note>
  <note>
   <simpara>
    Потоковые данные читаются из ресурсов (как локальных, так удалённых) по кускам,
    и любые невостребованные данные сохраняются во внутренних буферах. Когда новый фильтр
    добавляется в начало потока, данные во внутренних буферах,
    который уже были обработаны через другие фильтры,
    <emphasis>не</emphasis> будут обработаны через новый фильтр.
    Это отличается от поведения функции <function>stream_filter_append</function>.
   </simpara>
  </note>
  <note>
   <simpara>
    Когда фильтр добавляется для чтения и записи, создаются два экземпляра
    фильтра. Функция <function>stream_filter_append</function> должна быть вызвана дважды
    с <constant>STREAM_FILTER_READ</constant> и
    <constant>STREAM_FILTER_WRITE</constant> чтобы получить оба ресурса фильтра.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_filter_register</function></member>
   <member><function>stream_filter_append</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
