<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.imagefilter" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagefilter</refname>
  <refpurpose>Применяет фильтр к изображению</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagefilter</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>filter</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>int</type><type>float</type><type>bool</type></type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagefilter</function> применяет заданный фильтр
   <parameter>filter</parameter> к изображению <parameter>image</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>filter</parameter></term>
     <listitem>
      <para>
       <parameter>filter</parameter> может быть одним из следующих:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_NEGATE</constant>: Инвертирует все цвета изображения.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GRAYSCALE</constant>: Преобразует цвета изображения в
          градации серого путём преобразования компонент красного, зелёного и синего в
          их сумму с учётом весов, таких же как при вычислении яркости (Y') по REC.601.
          Альфа-канал сохраняется. Для изображений, использующих палитру, результат
          может отличаться в виду ограничений, накладываемых палитрой.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant>: Изменяет яркость изображения.
          Используйте аргумент <parameter>args</parameter> для задания уровня
          яркости. Диапазон яркостей от -255 до 255.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant>: Изменяет контрастность
          изображения. Используйте аргумент <parameter>args</parameter> для
          задания уровня контрастности.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: То же, что и
          <constant>IMG_FILTER_GRAYSCALE</constant>, за исключением того, что
          можно задать цвет. Используйте аргументы <parameter>args</parameter>,
          <parameter>arg2</parameter> и <parameter>arg3</parameter> для указания
          каналов <parameter>red</parameter>, <parameter>green</parameter>,
          <parameter>blue</parameter>, а <parameter>arg4</parameter> для
          <parameter>alpha</parameter> канала. Диапазон для каждого канала цвета
          от 0 до 255.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EDGEDETECT</constant>: Использует определение
          границ для их подсветки.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EMBOSS</constant>: Добавляет рельеф.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GAUSSIAN_BLUR</constant>: Размывает изображение по
          методу Гаусса.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SELECTIVE_BLUR</constant>: Размывает изображение.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_MEAN_REMOVAL</constant>: Использует усреднение
          для достижения эффекта "эскиза".
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant>: Делает границы более плавными,
          а изображение менее чётким. Используйте аргумент
          <parameter>args</parameter> для задания уровня гладкости.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Применяет эффект
          пикселирования. Используйте аргумент <parameter>args</parameter>
          для задания размера блока и аргумент <parameter>arg2</parameter>
          для задания режима эффекта пикселирования.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Применяет эффект рассеивания
          к изображению, используйте <parameter>args</parameter> и
          <parameter>arg2</parameter> для определения силы эффекта и
          дополнительно <parameter>arg3</parameter> для применения только
          к выбранным цветам пикселей.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant>: Уровень яркости.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant>: Уровень контрастности.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.red;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant>: Уровень сглаживания.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Размер блока в пикселах.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Уровень уменьшения эффекта.
          Не должен быть больше или равен уровню добавления эффекта, установленному с помощью
          <parameter>arg2</parameter>.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg2</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.green;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Использовать усовершенствованный
          эффект пикселирования или нет (по умолчанию &false;).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Уровень добавления эффекта.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg3</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.blue;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Необязательный массив значений индексации цвета
          для применения эффекта.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg4</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: Альфа канал, значение между
          0 и 127. 0 означает непрозрачность, 127 соответствует абсолютной
          прозрачности.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &gd.changelog.image-param;
      <row>
       <entry>7.4.0</entry>
       <entry>
        Добавлена поддержка рассеивания (<constant>IMG_FILTER_SCATTER</constant>).
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>imagefilter</function> с фильтром grayscale</title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('dave.png');

if($im && imagefilter($im, IMG_FILTER_GRAYSCALE))
{
    echo 'Изображение преобразовано к градациям серого.';

    imagepng($im, 'dave.png');
}
else
{
    echo 'Преобразование не удалось.';
}

imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример использования <function>imagefilter</function> с фильтром яркости
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('sean.png');

if($im && imagefilter($im, IMG_FILTER_BRIGHTNESS, 20))
{
    echo 'Яркость изображения изменена.';

    imagepng($im, 'sean.png');
    imagedestroy($im);
}
else
{
    echo 'Изменить яркость не удалось.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример использования <function>imagefilter</function> с фильтром colorize
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('philip.png');

/* R, G, B, so 0, 255, 0 is green */
if($im && imagefilter($im, IMG_FILTER_COLORIZE, 0, 255, 0))
{
    echo 'Изображение преобразовано к оттенкам зеленого.';

    imagepng($im, 'philip.png');
    imagedestroy($im);
}
else
{
    echo 'Преобразование не удалось.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример использования <function>imagefilter</function> с фильтром negate
    </title>
    <programlisting role="php">
<![CDATA[
<?php
// Определим нашу функцию, которую можно использовать в PHP
// без imagefilter()
function negate($im)
{
    if(function_exists('imagefilter'))
    {
        return imagefilter($im, IMG_FILTER_NEGATE);
    }

    for($x = 0; $x < imagesx($im); ++$x)
    {
        for($y = 0; $y < imagesy($im); ++$y)
        {
            $index = imagecolorat($im, $x, $y);
            $rgb = imagecolorsforindex($index);
            $color = imagecolorallocate($im, 255 - $rgb['red'], 255 - $rgb['green'], 255 - $rgb['blue']);

            imagesetpixel($im, $x, $y, $color);
        }
    }

    return(true);
}

$im = imagecreatefromjpeg('kalle.jpg');

if($im && negate($im))
{
    echo 'Изображение инвертировано успешно.';

    imagejpeg($im, 'kalle.jpg', 100);
    imagedestroy($im);
}
else
{
    echo 'Инвертировать изображение не удалось.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Пример использования <function>imagefilter</function> с фильтром pixelate
    </title>
    <programlisting role="php">
<![CDATA[
<?php
// загрузка PHP логотипа, нам нужно 2 штуки
// для сравнения
$logo1 = imagecreatefrompng('./php.png');
$logo2 = imagecreatefrompng('./php.png');

// подопытный экземпляр
$output = imagecreatetruecolor(imagesx($logo1) * 2, imagesy($logo1));

// Применение пикселирования к каждому изображению с размером блока в 3 пиксела
imagefilter($logo1, IMG_FILTER_PIXELATE, 3);
imagefilter($logo2, IMG_FILTER_PIXELATE, 3, true);

// Совмещение различий в выходном изображении
imagecopy($output, $logo1, 0, 0, 0, 0, imagesx($logo1) - 1, imagesy($logo1) - 1);
imagecopy($output, $logo2, imagesx($logo2), 0, 0, 0, imagesx($logo2) - 1, imagesy($logo2) - 1);
imagedestroy($logo1);
imagedestroy($logo2);

// Вывод различий
header('Content-Type: image/png');
imagepng($output);
imagedestroy($output);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Вывод примера: imagefilter() pixelate</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagefilterpixelate.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
  <para>
   <example>
    <title>Пример использования <function>imagefilter</function> с фильтром scatter</title>
    <programlisting role="php">
<![CDATA[
<?php
// Загрузка изображения
$logo = imagecreatefrompng('./php.png');

// Применение очень мягкого эффекта рассеивания к изображению
imagefilter($logo, IMG_FILTER_SCATTER, 3, 5);

// Вывов изображения с эффектом рассеивания
header('Content-Type: image/png');
imagepng($logo);
imagedestroy($logo);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Вывод примера: imagefilter() scatter</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/scatter.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Результат <constant>IMG_FILTER_SCATTER</constant> всегда случайный.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imageconvolution</function></member>
  </simplelist>
 </refsect1>
</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
