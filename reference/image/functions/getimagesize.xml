<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f8d1e172bd6d11986f0dfeb11756b90c039a39bc Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="function.getimagesize">
 <refnamediv>
  <refname>getimagesize</refname>
  <refpurpose>Получает размер изображения</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>getimagesize</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">image_info</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>getimagesize</function> определит размер любого заданного,
   поддерживаемого изображения и вернёт этот размер вместе с типом файла и текстовой
   строкой <literal>height/width</literal>, которую можно будет использовать внутри тега
   <acronym>HTML</acronym> <tag>IMG</tag>, а также вернёт соответствующий тип
   содержимого <acronym>HTTP</acronym>.
  </para>
  <para>
   Также <function>getimagesize</function> может вернуть дополнительные сведения об
   изображении через аргумент <parameter>image_info</parameter>.
  </para>
  <caution>
   <para>
    Функция ожидает, что <parameter>filename</parameter> является корректным файлом
    изображения. Если будет передан файл не содержащий изображения, он может быть
    некорректно интерпретирован как изображение и функция завершится успешно, но
    массив при этом будет содержать бессмысленные значения.
   </para>
   <para>
    Не используйте <function>getimagesize</function> для проверки того, что файл является изображением. Для этих целей используйте модуль
    <link linkend="book.fileinfo">Fileinfo</link>.
   </para>
  </caution>
  <note>
   <simpara>
    Обратите внимание, отдельные части JPC- и JP2-изображений часто
    содержат компоненты с разной глубиной цвета, тогда элемент "bits"
    содержит максимальное значение, которое обнаружила функция. Файлы в формате JP2 также иногда содержат
    множественные кодовые потоки <literal>multiple JPEG 2000 codestreams</literal>, тогда
    функция <function>getimagesize</function> вернёт значения первого потока кода,
    который обнаружит в корне файла.
   </simpara>
  </note>
  <note>
   <simpara>
    Сведения об иконках извлекаются из иконки с наибольшим битрейтом.
   </simpara>
  </note>
  <note>
   <simpara>
    Изображения GIF состоят из одного или нескольких кадров, где каждый кадр иногда
    занимает только часть изображения. Размер изображения, который возвращается
    функцией <function>getimagesize</function>, указывает общий размер, который функция считала
    из дескриптора логического экрана.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Аргумент задаёт файл, сведения о котором требуется извлечь.
       В параметр передают путь на локальный или, если поддерживает конфигурация, удалённый файл.
       Передачу данных удалённого файла выполняют через
       <link linkend="wrappers">потоки</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>image_info</parameter></term>
     <listitem>
      <para>
       Необязательный параметр, с которым функция извлекает расширенные сведения
       из файла изображения. В текущей реализации доступно извлечение
       APP-маркеров <acronym>JPG</acronym> в виде ассоциативного массива. Отдельные
       программы через эти APP-маркеры встраивают текст в изображение. Наиболее часто
       встраивают <link xlink:href="&url.iptc;">IPTC</link>-сведения в APP13-маркер.
       Для преобразования двоичных данных APP13-маркера во что-то удобное для чтения
       вызывают функцию <function>iptcparse</function>.
      </para>
      <note>
       <para>
        <parameter>image_info</parameter> поддерживает только
        файлы <acronym>JFIF</acronym>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает массив из 7 элементов. Не каждый тип изображения содержит элементы с каналами
   <literal>channels</literal> и битрейтом <literal>bits</literal>.
  </para>
  <para>
   Индексы 0 и 1 содержат ширину и высоту изображения.
  </para>
  <note>
   <para>
    Отдельные форматы файлов хранят набор изображений или вообще не содержат
    изображений. Для таких форматов функцией <function>getimagesize</function>
    невозможно определить размер изображения. Функция <function>getimagesize</function>
    вернёт нули как значения высоты и ширины.
   </para>
  </note>
   <note>
   <simpara>
    Функция <function>getimagesize</function> не учитывает метаданные изображения,
    поэтому когда, например, значения Exif-флага <literal>Orientation</literal>
    поворачивают изображение на 90 или 270 градусов, индексы 0 и 1 меняются местами:
    индекс 0 содержит высоту, а индекс 1 — ширину.
   </simpara>
  </note>
  <para>
   Индекс 2 содержит константу семейства <constant>IMAGETYPE_<replaceable>*</replaceable></constant>,
   которая обозначает тип изображения.
  </para>
  <para>
   Индекс 3 содержит строку со значениями ширины и высоты изображения
   <literal>height="yyy" width="xxx"</literal>, которые указывают
   внутри тега <acronym>IMG</acronym>.
  </para>
  <para>
   <literal>mime</literal> — MIME-тип, который соответствует изображению. Эти сведения
   помогают корректно обрабатывать изображения на основании
   заголовка <literal>Content-Type</literal>:
   <example>
    <title>Функция <function>getimagesize</function> и MIME-типы</title>
    <programlisting role="php">
<![CDATA[
<?php

$size = getimagesize($filename);
$fp = fopen($filename, "rb");

if ($size && $fp) {
    header("Content-Type: {$size['mime']}");
    fpassthru($fp);
    exit;
} else {
    // Ошибка
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Элемент <literal>channels</literal> принимает значение 3 для RGB-картинок и 4 для цветовой модели CMYK.
  </para>
  <para>
   <literal>bits</literal> — глубина цвета, число битов для каждого цвета.
  </para>
  <para>
   Для отдельных типов изображений присутствие значений <literal>channels</literal>
   и <literal>bits</literal> иногда сбивает с толку. Например, формат <acronym>GIF</acronym>
   всегда задействует 3 канала на пиксель, но глубину цвета невозможно вычислить
   для анимированных <acronym>GIF</acronym>-изображений с глобальной таблицей цветов.
  </para>
  <para>
   Функция вернёт &false;, если возникнет ошибка.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   При недоступности файла по пути <parameter>filename</parameter>
   функция <function>getimagesize</function> выдаёт ошибку уровня
   <constant>E_WARNING</constant>. Функция <function>getimagesize</function>
   выдаёт ошибку уровня <constant>E_NOTICE</constant>, если возникла ошибка чтения файла.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Функция теперь возвращает фактические размеры, биты и каналы изображений в формате AVIF;
        раньше размеры сообщались как <literal>0x0</literal>,
        а биты и каналы не сообщались вообще.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        Добавили поддержку формата WebP.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример получения размера изображения функцией <function>getimagesize</function></title>
    <programlisting role="php">
<![CDATA[
<?php

list($width, $height, $type, $attr) = getimagesize("img/flag.jpg");
echo "<img src=\"img/flag.jpg\" $attr alt=\"пример getimagesize()\" />";

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Пример получения размера изображения по URL-адресу функцией getimagesize</title>
    <programlisting role="php">
<![CDATA[
<?php

$size = getimagesize("http://www.example.com/gifs/logo.gif");

// Названия файлов с пробелами требуется правильно кодировать
$size = getimagesize("http://www.example.com/gifs/lo%20go.gif");

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Пример возврата IPTC-метаданных функцией getimagesize()</title>
    <programlisting role="php">
<![CDATA[
<?php

$size = getimagesize("testimg.jpg", $info);
if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.notrequired;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>image_type_to_mime_type</function></member>
   <member><function>exif_imagetype</function></member>
   <member><function>exif_read_data</function></member>
   <member><function>exif_thumbnail</function></member>
   <member><function>imagesx</function></member>
   <member><function>imagesy</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
