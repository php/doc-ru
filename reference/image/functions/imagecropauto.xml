<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.imagecropauto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagecropauto</refname>
  <refpurpose>Обрезает изображение автоматически, используя один из доступных режимов</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>GdImage</type><type>false</type></type><methodname>imagecropauto</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>IMG_CROP_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>float</type><parameter>threshold</parameter><initializer>0.5</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>color</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Автоматически обрезает изображение в соответствии с заданным
   <parameter>mode</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &gd.image.description;
   <varlistentry>
    <term><parameter>mode</parameter></term>
    <listitem>
     <para>
      Одна из следующих констант:
     </para>
     <variablelist>
      <varlistentry>
       <term><constant>IMG_CROP_DEFAULT</constant></term>
       <listitem>
        <simpara>
         То же, что и <constant>IMG_CROP_TRANSPARENT</constant>.
         До PHP 7.4.0, связанный libgd использовал <constant>IMG_CROP_SIDES</constant>,
         если изображение не имело прозрачного цвета.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_TRANSPARENT</constant></term>
       <listitem>
        <simpara>
         Обрезает прозрачный фон.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_BLACK</constant></term>
       <listitem>
        <simpara>
         Обрезает чёрный фон.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_WHITE</constant></term>
       <listitem>
        <simpara>
          Обрезает белый фон.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_SIDES</constant></term>
       <listitem>
        <simpara>
         Использует 4 угла изображения, чтобы попытаться обнаружить фон для обрезки.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_THRESHOLD</constant></term>
       <listitem>
        <simpara>
         Обрезает изображение, используя заданные <parameter>threshold</parameter> и
         <parameter>color</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>threshold</parameter></term>
    <listitem>
     <para>
      Определяет допуск в процентах, который будет использоваться при сравнении цвета изображения
      и цвета обрезки. Метод, используемый для расчёта цветовой
      разницы, основан на цветовом расстоянии в кубе RGB(a).
     </para>
     <para>
      Используется только в режиме <constant>IMG_CROP_THRESHOLD</constant>.
     </para>
     <note>
      <simpara>
       До PHP 7.4.0 в комплекте libgd использовался несколько иной алгоритм,
       поэтому один и тот же <parameter>threshold</parameter> давал разные результаты
       для системного и связанного libgd.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>color</parameter></term>
    <listitem>
     <para>
      Либо значение цвета RGB, либо индекс палитры.
     </para>
     <para>
      Используется только в режиме <constant>IMG_CROP_THRESHOLD</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает объект обрезанного изображения в случае успешного выполнения&return.falseforfailure;.
   Если полное изображение было обрезано, <function>imagecrop</function> возвращает &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
     <row>
      <entry>8.0.0</entry>
      <entry>
       В случае успешного выполнения функция теперь возвращает объект <classname>GDImage</classname>;
       ранее возвращался ресурс (<type>resource</type>).
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       Поведение imagecropauto() в комплекте libgd синхронизировано
       с системным libgd: <constant>IMG_CROP_DEFAULT</constant> больше
       не использует <constant>IMG_CROP_SIDES</constant>, и для обрезки порога теперь
       используется тот же алгоритм, что и системным libgd.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       Значение по умолчанию <parameter>mode</parameter> было изменено на
       <constant>IMG_CROP_AUTO</constant>. Ранее значение по умолчанию было
       <literal>-1</literal>, что соответствует <constant>IMG_CROP_DEFAULT</constant>,
       но передача <literal>-1</literal> теперь устарела.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Правильная обработка автообрезки</title>
    <para>
     Как отмечено в разделе возвращаемого значения, <function>imagecropauto</function>
     возвращает &false;, если все изображение
     было обрезано. В этом примере у нас есть ресурс изображения
     <literal>$im</literal>, который должен быть автоматически обрезан, только
     если есть что обрезать; в противном случае мы хотим перейти к исходному изображению.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$cropped = imagecropauto($im, IMG_CROP_DEFAULT);
if ($cropped !== false) { // в случае возврата нового объекта изображения
    imagedestroy($im);    // мы уничтожаем исходное изображение
    $im = $cropped;       // и назначаем обрезанное изображение в $im
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecrop</function></member>
  </simplelist>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
