<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.imagegif" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagegif</refname>
  <refpurpose>&gd.image.output;</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagegif</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>string</type><type>null</type></type><parameter>file</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>imagegif</function> создаёт изображение в формате <acronym>GIF</acronym>
   в файле или ресурсе потока, который указали в аргументе <parameter>file</parameter>.
   Функция берёт за основу изображение <parameter>image</parameter>.
   Аргумент <parameter>image</parameter> — изображение, которое возвращает
   функция <function>imagecreate</function> или функции семейства
   <literal>imagecreatefrom*</literal>.
  </para>
  <para>
   Функция создаст файл в формате <acronym>GIF87a</acronym>, если только изображение
   не сделали прозрачным функцией <function>imagecolortransparent</function>,
   тогда функция создаст изображение в формате <acronym>GIF89a</acronym>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>file</parameter></term>
     <listitem>
      <para>&gd.image.path;</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
  &gd.return.trueonerror;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример вывода изображения функцией <function>imagegif</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Создание изображения
$im = imagecreatetruecolor(100, 100);

// Создание белого фона
imagefilledrectangle($im, 0, 0, 99, 99, 0xFFFFFF);

// Отрисовка текста на изображении
imagestring($im, 3, 40, 20, 'GD библиотека', 0xFFBA00);

// Вывод изображения в браузер
header('Content-Type: image/gif');

imagegif($im);

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Пример преобразования PNG-изображения в формат GIF функцией <function>imagegif</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// Загрузка PNG-файла
$png = imagecreatefrompng('./php.png');

// Сохранение файла в формате GIF
imagegif($png, './php.gif');

// Готово
echo 'Преобразование PNG-файла в GIF-файл завершилось успешно!';

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Следующий фрагмент кода помогает писать переносимые PHP-приложения
    и автоматически определяет доступный тип GD-изображения. Замените строки
    <literal>header ("Content-Type: image/gif"); imagegif ($im);</literal>
    на более гибкую последовательность:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

// Создание нового изображения
$im = imagecreatetruecolor(100, 100);

// Какие-либо операции с изображением

// Обработка вывода
if (function_exists('imagegif')) {
    // Для GIF-файлов
    header('Content-Type: image/gif');

    imagegif($im);
} elseif (function_exists('imagejpeg')) {
    // Для JPEG-файлов
    header('Content-Type: image/jpeg');

    imagejpeg($im, NULL, 100);
} elseif (function_exists('imagepng')) {
    // Для PNG-файлов
    header('Content-Type: image/png');

    imagepng($im);
} elseif (function_exists('imagewbmp')) {
    // Для WBMP-файлов
    header('Content-Type: image/vnd.wap.wbmp');

    imagewbmp($im);
} else {
    die('На этом PHP-сервере нет поддержки изображений');
}

?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
  <note>
   <para>
    Проверить поддержку формата помогает функция <function>imagetypes</function>:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

if (imagetypes() & IMG_GIF) {
    header('Content-Type: image/gif');
    imagegif($im);
} elseif (imagetypes() & IMG_JPG) {
    /* ... и т. д. */
}

?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagepng</function></member>
   <member><function>imagewbmp</function></member>
   <member><function>imagejpeg</function></member>
   <member><function>imagetypes</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
