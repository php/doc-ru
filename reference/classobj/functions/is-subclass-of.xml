<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c44475e1fafcbee203ed4935a6d5d7a01379fcdc Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.is-subclass-of" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_subclass_of</refname>
  <refpurpose>Проверяет, принадлежит ли объект к потомкам класса, или реализует ли объект или родители объекта интерфейс</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_subclass_of</methodname>
   <methodparam><type>mixed</type><parameter>object_or_class</parameter></methodparam>
   <methodparam><type>string</type><parameter>class</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>allow_string</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Проверяет, принадлежит ли объект или класс <parameter>object_or_class</parameter>
   к потомкам класса <parameter>class</parameter>,
   или реализует ли объект или класс, или родители объекта или класса, интерфейс.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object_or_class</parameter></term>
     <listitem>
      <para>
       Имя класса или экземпляр объекта. Если класс не найден,
       ошибка не будет выдана.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class</parameter></term>
     <listitem>
      <para>
       Имя класса.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allow_string</parameter></term>
     <listitem>
      <para>
       Если для параметра установлено значение &false;,
       то функция определит принадлежность типа проверяемого объекта к подтипу класса,
       только если в параметр <parameter>object_or_class</parameter>
       будет передан экземпляр объекта, а не имя класса.
       Это также предотвратит вызов автозагрузчика, если класс не найден.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true;, если объект или класс <parameter>object_or_class</parameter>
   принадлежит к потомкам класса <parameter>class</parameter>,
   или если объект или класс, или предок объекта или класса, реализует интерфейс,
   иначе &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>is_subclass_of</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Объявить класс
class WidgetFactory
{
  var $oink = 'moo';
}

// Объявить наследника
class WidgetFactory_Child extends WidgetFactory
{
  var $oink = 'oink';
}

// Создать новые объекты
$WF = new WidgetFactory();
$WFC = new WidgetFactory_Child();

if (is_subclass_of($WFC, 'WidgetFactory')) {
  echo "Да, объект \$WFC наследует класс WidgetFactory\n";
} else {
  echo "Нет, объект \$WFC не наследует класс WidgetFactory\n";
}


if (is_subclass_of($WF, 'WidgetFactory')) {
  echo "Да, объект \$WF наследует класс WidgetFactory\n";
} else {
  echo "Нет, объект \$WF не наследует класс WidgetFactory\n";
}

if (is_subclass_of('WidgetFactory_Child', 'WidgetFactory')) {
  echo "Да, класс WidgetFactory_Child наследует класс WidgetFactory\n";
} else {
  echo "Нет, класс WidgetFactory_Child не наследует класс WidgetFactory\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Да, объект $WFC наследует класс WidgetFactory
Нет, объект $WF не наследует класс WidgetFactory
Да, класс WidgetFactory_Child наследует класс WidgetFactory
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Пример использования функции <function>is_subclass_of</function> с интерфейсами</title>
    <programlisting role="php">
<![CDATA[
<?php

// Определяем интерфейс
interface MyInterface
{
  public function MyFunction();
}

// Определяем реализацию интерфейса классом
class MyClass implements MyInterface
{
  public function MyFunction()
  {
    return "Класс MyClass реализует интерфейс MyInterface!";
  }
}

// Создаём объект
$my_object = new MyClass;

// Код ниже работает с PHP 5.3.7

// Проверяем экземпляр объекта класса
if (is_subclass_of($my_object, 'MyInterface')) {
  echo "Да, тип экземпляра объекта \$my_object наследует тип интерфейса MyInterface\n";
} else {
  echo "Нет, тип экземпляра объекта \$my_object не наследует тип интерфейса MyInterface\n";
}

// Проверяем строку — имя класса
if (is_subclass_of('MyClass', 'MyInterface')) {
  echo "Да, класс-тип MyClass наследует класс-тип MyInterface\n";
} else {
  echo "Нет, класс-тип MyClass не наследует класс-тип MyInterface\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Да, тип экземпляра объекта $my_object наследует тип интерфейса MyInterface
Да, класс-тип MyClass наследует класс-тип MyInterface
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.uses-autoload;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>get_parent_class</function></member>
    <member><function>is_a</function></member>
    <member><function>class_parents</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
