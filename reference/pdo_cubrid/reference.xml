<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c1bec9d700807df36994cf368ba291214cd424d Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="ref.pdo-cubrid" xmlns="http://docbook.org/ns/docbook"><?phpdoc extension-membership="pecl" ?>
 <title>PDO_CUBRID: драйвер модуля PDO для СУБД CUBRID</title>
 <titleabbrev>PDO-драйвер СУБД CUBRID</titleabbrev>
 <partintro>

  <section xml:id="pdo-cubrid.intro">&reftitle.intro;
   <para>
    PDO_CUBRID — драйвер, через который PHP получает доступ к базам данных CUBRID.
    Для этого драйвер реализует интерфейс модуля <link linkend="intro.pdo">PDO</link>.
   </para>
   <note><para>
     Текущая версия драйвера PDO_CUBRID не поддерживает постоянные соединения.
   </para></note>
  </section>

  <!-- Information found in configure.xml -->
  &reference.pdo-cubrid.configure;

  <section xml:id="ref.pdo-cubrid.features">
   <title>Функции драйвера PDO_CUBRID</title>

   <section>
    <title>Прокручиваемые курсоры</title>
    <simpara>
     Драйвер PDO_CUBRID поддерживает прокручиваемые курсоры. Тип курсора по умолчанию —
     "forward only" (только вперёд), и чтобы изменить тип курсора в методе
     <function>PDO::prepare</function> указывают параметр driver_options.
    </simpara>
   </section>

   <section>
    <title>Время ожидания</title>
    <simpara>
     Драйвер PDO_CUBRID поддерживает настройку времени ожидания выполнения SQL-запроса;
     значение времени ожидания устанавливают методом <function>PDO::setAttribute</function>.
    </simpara>
   </section>

   <section>
    <title>Режим автоподтверждения и транзакции</title>

    <simpara>
     Драйвер PDO_CUBRID поддерживает как режим автоподтверждения autocommit_mode,
     так и работу с транзакциями, а по умолчанию включён режим автоподтверждения.
     Состояние режима изменяют методом <function>PDO::setAttribute</function>.
    </simpara>

    <simpara>
     Автоподтверждение будет автоматически запрещено и снова разрешено
     после вызова метода <function>PDO::commit</function> или
     <function>PDO::rollBack</function>, если для старта транзакции вызвали метод
     <function>PDO::beginTransaction</function>.
    </simpara>

    <note>
     <simpara>
      Перед отключением автоподтверждения ожидающие запросы
      автоматически фиксируются.
     </simpara>
    </note>
   </section>

   <section>
    <title>Множественные SQL-запросы</title>

    <simpara>
     Драйвер PDO_CUBRID поддерживает множественные SQL-запросы. Множественные
     SQL-запросы разделяются точкой с запятой (<literal>;</literal>).
    </simpara>
   </section>

   <section>
    <title>Информация о схеме</title>

    <simpara>
     Драйвер PDO_CUBRID реализует метод <methodname>PDO::cubrid_schema</methodname>,
     чтобы получать информацию о схеме.
    </simpara>
   </section>

   <section>
    <title>Большие объекты</title>

    <simpara>
     Драйвер PDO_CUBRID поддерживает типы данных BLOB и CLOB. Тип данных LOB (англ. сокр.: Large Objects)
     в модуле PDO представили как поток. Поэтому разрешается вставлять LOB-объект в базу данных
     путём связывания подготовленного запроса с потоком и получения LOB-объекта считыванием из потока,
     который возвращает PDO-объект, который настроили на работу с драйвером БД CUBRID. Например:
    </simpara>

    <example>
     <title>Пример вставки LOB-объекта в БД CUBRID</title>
     <programlisting role="php">
<![CDATA[
<?php

$fp = fopen('lob_test.png', 'rb');

$sql_stmt = "INSERT INTO lob_test(name, content) VALUES('lob_test.png', ?)";

$stmt = $dbh->prepare($sql_stmt);
$ret = $stmt->bindParam(1, $fp, PDO::PARAM_LOB);
$ret = $stmt->execute();

?>
]]>
     </programlisting>
    </example>

    <example>
     <title>Пример получения LOB-объекта из БД CUBRID</title>
     <programlisting role="php">
<![CDATA[
<?php

$sql_stmt = "SELECT content FROM lob_test WHERE name='lob_test.png'";

$stmt = $dbh->prepare($sql_stmt);
$stmt->execute();
$result = $stmt->fetch(PDO::FETCH_NUM);

header("Content-Type: image/png");
fpassthru($result[0]);

?>
]]>
     </programlisting>
    </example>
   </section>

   <section>
    <title>Метаинформация о столбцах</title>

    <para>
     Метод <function>PDOStatement::getColumnMeta</function> в PDO-объекте,
     который настроили на работу с БД CUBRID,
     вернёт ассоциативный массив, который содержит следующие значения:
     <simplelist>
      <member>type</member>
      <member>name</member>
      <member>table</member>
      <member>def</member>
      <member>precision</member>
      <member>scale</member>
      <member>not_null</member>
      <member>auto_increment</member>
      <member>unique_key</member>
      <member>multiple_key</member>
      <member>primary_key</member>
      <member>foreign_key</member>
      <member>reverse_index</member>
      <member>reverse_unique</member>
     </simplelist>
    </para>
   </section>

   <section>
    <title>Тип данных Коллекция</title>

    <simpara>
     Драйвер PDO_CUBRID поддерживает типы данных SET, MULTISET и SEQUENCE.
     Тип данных по умолчанию — char, если тип данных не указали вручную.
     Например:
    </simpara>

    <example>
     <title>Пример вставки коллекции в БД CUBRID с типом данных по умолчанию</title>
     <programlisting role="php">
<![CDATA[
<?php

$conn_str ="cubrid:dbname=demodb;host=localhost;port=33000";
$cubrid_pdo = new PDO($conn_str, 'dba', '');

$cubrid_pdo->exec("DROP TABLE if exists test_tbl");
$cubrid_pdo->exec("CREATE TABLE test_tbl (col_1 SET(VARCHAR))");

$sql_stmt_insert = "INSERT INTO test_tbl VALUES (?);";
$stmt = $cubrid_pdo->prepare($sql_stmt_insert);

$data = array("abc","def","ghi");

$ret = $stmt->bindParam(1, $data, PDO::PARAM_NULL);

$ret = $stmt->execute();

var_Dump($ret);

?>
]]>
     </programlisting>
    </example>

    <example>
     <title>Пример указания типа данных при вставке коллекции в БД CUBRID</title>
     <programlisting role="php">
<![CDATA[
<?php

$conn_str ="cubrid:dbname=demodb;host=localhost;port=33000";
$cubrid_pdo = new PDO($conn_str, 'dba', '');

$cubrid_pdo->exec("DROP TABLE if exists test_tbl");
$cubrid_pdo->exec("CREATE TABLE test_tbl (col_1 SET(int))");

$sql_stmt_insert = "INSERT INTO test_tbl VALUES (?);";
$stmt = $cubrid_pdo->prepare($sql_stmt_insert);

$data = array(1,2,3,4);

$ret = $stmt->bindParam(1, $data, 0,0,"int");

$ret = $stmt->execute();

var_Dump($ret);

?>
]]>
     </programlisting>
    </example>

    <para>
     База данных CUBRID связывает типы данных для пятого параметра метода
     <methodname>PDOStatement::bindParam</methodname>:
      <simplelist>
      <member>CHAR</member>
      <member>STRING</member>
      <member>NCHAR</member>
      <member>VARNCHAR</member>
      <member>BIT</member>
      <member>VARBIT</member>
      <member>NUMERIC</member>
      <member>NUMBER</member>
      <member>INT</member>
      <member>SHORT</member>
      <member>BIGINT</member>
      <member>MONETARY</member>
      <member>FLOAT</member>
      <member>DOUBLE</member>
      <member>DATE</member>
      <member>TIME</member>
      <member>DATETIME</member>
      <member>TIMESTAMP</member>
     </simplelist>
    </para>
   </section>
  </section>

   <!-- Information found in constants.xml -->
   &reference.pdo-cubrid.constants;

  </partintro>

  <refentry xml:id="ref.pdo-cubrid.connection">
   <refnamediv>
    <refname>DSN-строка подключения через драйвер PDO_CUBRID</refname>
    <refpurpose>Соединение с базой данных CUBRID</refpurpose>
   </refnamediv>

   <refsect1 role="description">
    &reftitle.description;
    <para>
     DSN-строка подключения (англ. сокр.: Data Source Name — имя источника данных)
     через драйвер PDO_CUBRID состоит из следующих элементов, разделённых точкой с запятой:
     <variablelist>
      <varlistentry>
       <term>DSN-префикс</term>
       <listitem>
        <para>
         DSN-префикс — строка <userinput>cubrid:</userinput>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>host</literal></term>
       <listitem>
        <para>
         Имя хоста, на котором развернули базу данных.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>port</literal></term>
       <listitem>
        <para>
         Порт, на котором база данных слушает подключения.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>dbname</literal></term>
       <listitem>
        <para>
         Название базы данных.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </refsect1>

   <refsect1 role="notes">
    &reftitle.notes;
    <note>
     <para>
      При соединении с БД CUBRID требуется указать имя пользователя и пароль.
     </para>
    </note>
   </refsect1>

   <refsect1 role="examples">
    &reftitle.examples;
    <para>
     <example>
      <title>Пример DSN-строки подключения через драйвер PDO_CUBRID</title>
      <para>
       Следующий пример показывает DSN-строку подключения через драйвер PDO_CUBRID
       для соединения с базой CUBRID:
       <programlisting><![CDATA[
cubrid:host=localhost;port=33000;dbname=demodb
]]>
       </programlisting>
      </para>
     </example>
    </para>
   </refsect1>
  </refentry>

 &reference.pdo-cubrid.entities.pdo-overloaded;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
