<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.zmq" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Класс ZMQ</title>
 <titleabbrev>ZMQ</titleabbrev>

 <partintro>

  <!-- {{{ ZMQ intro -->
  <section xml:id="zmq.intro">
   &reftitle.intro;
   <para>

   </para>
  </section>
  <!-- }}} -->

  <section xml:id="zmq.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>ZMQ</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>ZMQ</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-pair">ZMQ::SOCKET_PAIR</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-pub">ZMQ::SOCKET_PUB</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-sub">ZMQ::SOCKET_SUB</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-req">ZMQ::SOCKET_REQ</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-rep">ZMQ::SOCKET_REP</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-xreq">ZMQ::SOCKET_XREQ</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-xrep">ZMQ::SOCKET_XREP</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-push">ZMQ::SOCKET_PUSH</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-pull">ZMQ::SOCKET_PULL</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-router">ZMQ::SOCKET_ROUTER</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-dealer">ZMQ::SOCKET_DEALER</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-xpub">ZMQ::SOCKET_XPUB</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-xsub">ZMQ::SOCKET_XSUB</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.socket-stream">ZMQ::SOCKET_STREAM</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-hwm">ZMQ::SOCKOPT_HWM</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-sndhwm">ZMQ::SOCKOPT_SNDHWM</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-rcvhwm">ZMQ::SOCKOPT_RCVHWM</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-affinity">ZMQ::SOCKOPT_AFFINITY</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-identity">ZMQ::SOCKOPT_IDENTITY</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-subscribe">ZMQ::SOCKOPT_SUBSCRIBE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-unsubscribe">ZMQ::SOCKOPT_UNSUBSCRIBE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-rate">ZMQ::SOCKOPT_RATE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-recovery-ivl">ZMQ::SOCKOPT_RECOVERY_IVL</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-reconnect-ivl">ZMQ::SOCKOPT_RECONNECT_IVL</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-reconnect-ivl-max">ZMQ::SOCKOPT_RECONNECT_IVL_MAX</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-mcast-loop">ZMQ::SOCKOPT_MCAST_LOOP</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-sndbuf">ZMQ::SOCKOPT_SNDBUF</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-rcvbuf">ZMQ::SOCKOPT_RCVBUF</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-rcvmore">ZMQ::SOCKOPT_RCVMORE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-type">ZMQ::SOCKOPT_TYPE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-linger">ZMQ::SOCKOPT_LINGER</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-backlog">ZMQ::SOCKOPT_BACKLOG</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-maxmsgsize">ZMQ::SOCKOPT_MAXMSGSIZE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-sndtimeo">ZMQ::SOCKOPT_SNDTIMEO</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-rcvtimeo">ZMQ::SOCKOPT_RCVTIMEO</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-ipv4only">ZMQ::SOCKOPT_IPV4ONLY</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-last-endpoint">ZMQ::SOCKOPT_LAST_ENDPOINT</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-tcp-keepalive-idle">ZMQ::SOCKOPT_TCP_KEEPALIVE_IDLE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-tcp-keepalive-cnt">ZMQ::SOCKOPT_TCP_KEEPALIVE_CNT</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-tcp-keepalive-intvl">ZMQ::SOCKOPT_TCP_KEEPALIVE_INTVL</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-tcp-accept-filter">ZMQ::SOCKOPT_TCP_ACCEPT_FILTER</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-tcp-accept-filter">ZMQ::SOCKOPT_TCP_ACCEPT_FILTER</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-delay-attach-on-connect">ZMQ::SOCKOPT_DELAY_ATTACH_ON_CONNECT</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-xpub-verbose">ZMQ::SOCKOPT_XPUB_VERBOSE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-router-raw">ZMQ::SOCKOPT_ROUTER_RAW</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.sockopt-ipv6">ZMQ::SOCKOPT_IPV6</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.ctxopt-max-sockets">ZMQ::CTXOPT_MAX_SOCKETS</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.poll-in">ZMQ::POLL_IN</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.poll-out">ZMQ::POLL_OUT</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.mode-noblock">ZMQ::MODE_NOBLOCK</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.mode-dontwait">ZMQ::MODE_DONTWAIT</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.mode-sndmore">ZMQ::MODE_SNDMORE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.err-internal">ZMQ::ERR_INTERNAL</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.err-eagain">ZMQ::ERR_EAGAIN</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.err-enotsup">ZMQ::ERR_ENOTSUP</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.err-efsm">ZMQ::ERR_EFSM</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zmq.constants.err-eterm">ZMQ::ERR_ETERM</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">Methods</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.zmq')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->

  </section>

  <!-- {{{ ZMQ constants -->
  <section xml:id="zmq.constants">
   &reftitle.constants;
   <section xml:id="zmq.constants.types">
    <title>Типы констант ZMQ</title>
    <variablelist>

     <varlistentry xml:id="zmq.constants.socket-pair">
      <term><constant>ZMQ::SOCKET_PAIR</constant></term>
      <listitem>
       <para>Эксклюзивный парный шаблон</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-pub">
      <term><constant>ZMQ::SOCKET_PUB</constant></term>
      <listitem>
       <para>Сокет источника</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-sub">
      <term><constant>ZMQ::SOCKET_SUB</constant></term>
      <listitem>
       <para>Сокет подписчика</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-req">
      <term><constant>ZMQ::SOCKET_REQ</constant></term>
      <listitem>
       <para>Сокет запроса</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-rep">
      <term><constant>ZMQ::SOCKET_REP</constant></term>
      <listitem>
       <para>Сокет ответа</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-xreq">
      <term><constant>ZMQ::SOCKET_XREQ</constant></term>
      <listitem>
       <para>Псевдоним для SOCKET_DEALER</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-xrep">
      <term><constant>ZMQ::SOCKET_XREP</constant></term>
      <listitem>
       <para>Псевдоним для SOCKET_ROUTER</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-push">
      <term><constant>ZMQ::SOCKET_PUSH</constant></term>
      <listitem>
       <para>Сокет конвейера отправки</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-pull">
      <term><constant>ZMQ::SOCKET_PULL</constant></term>
      <listitem>
       <para>Сокет конвейера приёма</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-router">
      <term><constant>ZMQ::SOCKET_ROUTER</constant></term>
      <listitem>
       <para>Расширенный REP-сокет, маршрутизирующий ответы потребителям</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-dealer">
      <term><constant>ZMQ::SOCKET_DEALER</constant></term>
      <listitem>
       <para>Расширенный REP-сокет, осуществляющий балансировку нагрузки для всех связанных пар</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-xpub">
      <term><constant>ZMQ::SOCKET_XPUB</constant></term>
      <listitem>
       <para>Аналогично SOCKET_PUB, за исключением того, что вы можете получать
        подписку как сообщения.
        Сообщение о подписке будет 0 (отписаться) или 1 (подписаться) с последующим содержимым сообщения</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-xsub">
      <term><constant>ZMQ::SOCKET_XSUB</constant></term>
      <listitem>
       <para>Аналогично SOCKET_SUB, за исключением того, что вы можете отсылать
        подписку как сообщения. Смотрите SOCKET_XPUB.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.socket-stream">
      <term><constant>ZMQ::SOCKET_STREAM</constant></term>
      <listitem>
       <para>Используется для отсылки и приёма данных по TCP от не-ØMQ клиентов.
        Доступно, если скомпилировано с ZeroMQ 4.x или выше (Значение: &integer;).</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-hwm">
      <term><constant>ZMQ::SOCKOPT_HWM</constant></term>
      <listitem>
       <para>Верхняя граница для входящих и исходящих сообщений жёстко ограничена
        максимальным количеством сообщений, которые ØMQ может держать в памяти для
        одного клиента, связанного с соответствующим сокетом. Установка данной
        опции для сокета будет влиять только на соединения, установленные после её установки.
        В ZeroMQ 3.x это является обёрткой для одновременной установки SNDHWM
        и RCVHWM. (Значение: &integer;).</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-sndhwm">
      <term><constant>ZMQ::SOCKOPT_SNDHWM</constant></term>
      <listitem>
       <para>Опция ZMQ_SNDHWM должна устанавливать верхнюю границу для
        исходящих сообщений на конкретном сокете. Доступно, если собрано с ZeroMQ 3.x
        или выше (Значение: &integer;).</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-rcvhwm">
      <term><constant>ZMQ::SOCKOPT_RCVHWM</constant></term>
      <listitem>
       <para>Опция SOCKOPT_RCVHWM должна устанавливать верхнюю границу для
        входящих сообщений на конкретном сокете. Доступно, если собрано с ZeroMQ 3.x
        или выше (Значение: &integer;).</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-affinity">
      <term><constant>ZMQ::SOCKOPT_AFFINITY</constant></term>
      <listitem>
       <para>Установить сходство потока ввода / вывода (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-identity">
      <term><constant>ZMQ::SOCKOPT_IDENTITY</constant></term>
      <listitem>
       <para>Установить идентификатор сокета (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-subscribe">
      <term><constant>ZMQ::SOCKOPT_SUBSCRIBE</constant></term>
      <listitem>
       <para>Установить фильтр сообщений. Корректно для сокета подписчика (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-unsubscribe">
      <term><constant>ZMQ::SOCKOPT_UNSUBSCRIBE</constant></term>
      <listitem>
       <para>Удалить фильтр сообщений. Корректно для сокета подписчика (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-rate">
      <term><constant>ZMQ::SOCKOPT_RATE</constant></term>
      <listitem>
       <para>Установить скорость для сокетов групповой рассылки (pgm) (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-recovery-ivl">
      <term><constant>ZMQ::SOCKOPT_RECOVERY_IVL</constant></term>
      <listitem>
       <para>Установить интервал восстановления для сокетов групповой рассылки (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-reconnect-ivl">
      <term><constant>ZMQ::SOCKOPT_RECONNECT_IVL</constant></term>
      <listitem>
       <para>Установить начальный интервал пересоединения (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-reconnect-ivl-max">
      <term><constant>ZMQ::SOCKOPT_RECONNECT_IVL_MAX</constant></term>
      <listitem>
       <para>Установить максимальный интервал пересоединения (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-mcast-loop">
      <term><constant>ZMQ::SOCKOPT_MCAST_LOOP</constant></term>
      <listitem>
       <para> Контроль закольцовки групповой рассылки (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-sndbuf">
      <term><constant>ZMQ::SOCKOPT_SNDBUF</constant></term>
      <listitem>
       <para>Установить размер буфера передачи ядра (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-rcvbuf">
      <term><constant>ZMQ::SOCKOPT_RCVBUF</constant></term>
      <listitem>
       <para>Установить размер буфера приёма ядра (Значение: &integer; >= 0)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-rcvmore">
      <term><constant>ZMQ::SOCKOPT_RCVMORE</constant></term>
      <listitem>
       <para>Получить многосоставные сообщения (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-type">
      <term><constant>ZMQ::SOCKOPT_TYPE</constant></term>
      <listitem>
       <para>Получить тип сокета. Корректно для getSockOpt (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-linger">
      <term><constant>ZMQ::SOCKOPT_LINGER</constant></term>
      <listitem>
       <para>Линейное значение сокета. Определяет, как долго сокет блокирует попытки
        очистки сообщений после его закрытия. (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-backlog">
      <term><constant>ZMQ::SOCKOPT_BACKLOG</constant></term>
      <listitem>
       <para>Опция SOCKOPT_BACKLOG устанавливает максимальную длину очереди
        клиентского соединения для указанного сокета. Работает только с
        транспортом ориентированным на соединение. (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-maxmsgsize">
      <term><constant>ZMQ::SOCKOPT_MAXMSGSIZE</constant></term>
      <listitem>
       <para>Ограничивает максимальный размер входящего сообщения. -1 означает, что
        ограничений нет. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-sndtimeo">
      <term><constant>ZMQ::SOCKOPT_SNDTIMEO</constant></term>
      <listitem>
       <para>Устанавливает таймаут для операции отправки на сокете. -1 означает отсутствие ограничений. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-rcvtimeo">
      <term><constant>ZMQ::SOCKOPT_RCVTIMEO</constant></term>
      <listitem>
       <para>Устанавливает таймаут для операции приёма на сокете. -1 означает отсутствие ограничений. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-ipv4only">
      <term><constant>ZMQ::SOCKOPT_IPV4ONLY</constant></term>
      <listitem>
       <para>Если равно 1, то запрещает IPV6. Доступно, если собрано с ZeroMQ 3.x (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-last-endpoint">
      <term><constant>ZMQ::SOCKOPT_LAST_ENDPOINT</constant></term>
      <listitem>
       <para>Извлекает последнего присоединившегося клиента. Для использования с * wildcard-портами.
        Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-tcp-keepalive-idle">
      <term><constant>ZMQ::SOCKOPT_TCP_KEEPALIVE_IDLE</constant></term>
      <listitem>
       <para>Время простоя для отправки TCP-keepalive. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-tcp-keepalive-cnt">
      <term><constant>ZMQ::SOCKOPT_TCP_KEEPALIVE_CNT</constant></term>
      <listitem>
       <para>Подсчитать время для TCP-keepalive. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-tcp-keepalive-intvl">
      <term><constant>ZMQ::SOCKOPT_TCP_KEEPALIVE_INTVL</constant></term>
      <listitem>
       <para>Интервал для TCP-keepalive. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-delay-attach-on-connect">
      <term><constant>ZMQ::SOCKOPT_DELAY_ATTACH_ON_CONNECT</constant></term>
      <listitem>
       <para>Послать строку CIDR для сверки с входящим соединением по TCP.
        Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-tcp-accept-filter">
      <term><constant>ZMQ::SOCKOPT_TCP_ACCEPT_FILTER</constant></term>
      <listitem>
       <para>Послать строку CIDR для сверки с входящим соединением по TCP.
        Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-xpub-verbose">
      <term><constant>ZMQ::SOCKOPT_XPUB_VERBOSE</constant></term>
      <listitem>
       <para>Установить XPUB для приёма сообщения приложения для каждого экземпляра
        подписчика. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-router-raw">
      <term><constant>ZMQ::SOCKOPT_ROUTER_RAW</constant></term>
      <listitem>
       <para>Если 1, то устанавливает для ROUTER режим "без обработки". В режиме
        "без обработки", если используется транспорт tcp://, сокет будет читать и
        писать без использования фреймов ZeroMQ.
        Доступно, если собрано с ZeroMQ 4.0 и выше (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.sockopt-ipv6">
      <term><constant>ZMQ::SOCKOPT_IPV6</constant></term>
      <listitem>
       <para>Разрешает IPV6. Доступно, если собрано с ZeroMQ 4.0 и выше (Значение: &string;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.ctxopt-max-sockets">
      <term><constant>ZMQ::CTXOPT_MAX_SOCKETS</constant></term>
      <listitem>
       <para>Ограничение сокета на контекст. Доступно, если собрано с ZeroMQ 3.x и выше (Значение: &integer;)</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.poll-in">
      <term><constant>ZMQ::POLL_IN</constant></term>
      <listitem>
       <para>Опросить на предмет входящих данных</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.poll-out">
      <term><constant>ZMQ::POLL_OUT</constant></term>
      <listitem>
       <para>Опросить на предмет исходящих данных</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.mode-noblock">
      <term><constant>ZMQ::MODE_NOBLOCK</constant></term>
      <listitem>
       <para>Неблокирующая работа. Объявлено устаревшим, используйте ZMQ::MODE_DONTWAIT</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.mode-dontwait">
      <term><constant>ZMQ::MODE_DONTWAIT</constant></term>
      <listitem>
       <para>Неблокирующая работа</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.mode-sndmore">
      <term><constant>ZMQ::MODE_SNDMORE</constant></term>
      <listitem>
       <para>Послать многосоставное сообщение</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.device-forwarder">
      <term><constant>ZMQ::DEVICE_FORWARDER</constant></term>
      <listitem>
       <para>Устройство пересылки</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.device-queue">
      <term><constant>ZMQ::DEVICE_QUEUE</constant></term>
      <listitem>
       <para>Устройство очереди</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.device-streamer">
      <term><constant>ZMQ::DEVICE_STREAMER</constant></term>
      <listitem>
       <para>Устройство потокового вещания</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.err-internal">
      <term><constant>ZMQ::ERR_INTERNAL</constant></term>
      <listitem>
       <para>Внутренняя ошибка модуля ZMQ</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.err-eagain">
      <term><constant>ZMQ::ERR_EAGAIN</constant></term>
      <listitem>
       <para>Подразумевает, что операция будет блокироваться при использовании ZMQ::MODE_DONTWAIT</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.err-enotsup">
      <term><constant>ZMQ::ERR_ENOTSUP</constant></term>
      <listitem>
       <para>Операция не поддерживается типом сокета</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.err-efsm">
      <term><constant>ZMQ::ERR_EFSM</constant></term>
      <listitem>
       <para>Операция не будет выполнена, поскольку сокет находится в некорректном состоянии</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="zmq.constants.err-eterm">
      <term><constant>ZMQ::ERR_ETERM</constant></term>
      <listitem>
       <para>Контекст был прерван</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
  </section>
  <!-- }}} -->


 </partintro>

 &reference.zmq.entities.zmq;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
