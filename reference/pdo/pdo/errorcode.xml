<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3d69f8f11fcade2ce4fd908d176cbf874603fe57 Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="pdo.errorcode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::errorCode</refname>
  <refpurpose>
   Возвращает код SQLSTATE результата последней операции с базой данных
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>string</type><type>null</type></type><methodname>PDO::errorCode</methodname>
   <void/>
  </methodsynopsis>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает SQLSTATE - пятисимвольный идентификатор, определённый в стандарте
   ANSI SQL-92. Первые два символа SQLSTATE отвечают за класс ошибки, а следующие
   три определяют её подкласс. Класс ошибок 01 означает предупреждение, которому
   сопутствует возвращаемый код SQL_SUCCESS_WITH_INFO. Классы отличные от 01,
   за исключением 'IM', означают ошибки выполнения запросов к базе данных. Класс
   'IM' свидетельствует об ошибках и предупреждениях, которые вызваны самой
   реализацией PDO (или, возможно, ODBC, если используется драйвер ODBC). Значение
   подкласса '000' в любом классе означает, что подкласс для этого SQLSTATE
   отсутствует.
  </para>
  <para>
   <function>PDO::errorCode</function> выдаёт код ошибки только для операций,
   совершаемых с базой данных напрямую из PDO. Если создать объект PDOStatement
   методами <function>PDO::prepare</function> или
   <function>PDO::query</function>, и вызвать ошибку его методами,
   <function>PDO::errorCode</function> эту ошибку не отобразит. Вам нужно вызвать
   <function>PDOStatement::errorCode</function>, чтобы получить код ошибки для операции,
   выполняемой на определённом объекте PDOStatement.
  </para>
  <para>
   Возвращает &null;, если никаких операций над базой данных средствами PDO-объекта
   не производилось.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Получение кода SQLSTATE</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Спровоцируем ошибку -- таблицы BONES не существует */
$dbh->exec("INSERT INTO bones(skull) VALUES ('lucy')");

echo "\nPDO::errorCode(): ", $dbh->errorCode();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PDO::errorCode(): 42S02
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::errorInfo</function></member>
    <member><function>PDOStatement::errorCode</function></member>
    <member><function>PDOStatement::errorInfo</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
