<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c9c158137b0f4658c29faef4043472dc74896d0c Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::exec</refname>
  <refpurpose>
   Выполняет SQL-запрос и возвращает количество затронутых строк
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>int</type><type>false</type></type><methodname>PDO::exec</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>PDO::exec</function> запускает SQL-запрос на выполнение и
   возвращает количество строк, задействованных в ходе его выполнения.
  </para>
  <para>
   <function>PDO::exec</function> не возвращает результат выборки оператором
   SELECT. Если вам нужно выбрать данные этим оператором единожды в ходе выполнения
   программы, воспользуйтесь методом <function>PDO::query</function>. Если требуется
   запускать один и тот же запрос на выборку множество раз, лучше создать
   подготовленный запрос PDOStatement методом <function>PDO::prepare</function>,
   а затем запускать его методом <function>PDOStatement::execute</function> столько
   раз, сколько потребуется.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       SQL-выражение, которое необходимо подготовить и запустить.
      </para>
      <para>
       Данные внутри запроса должны быть
       <link linkend="pdo.quote">правильно экранированы</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>PDO::exec</function> возвращает количество строк, которые были
   модифицированы или удалены в ходе его выполнения. Если таких строк нет,
   <function>PDO::exec</function> вернёт <literal>0</literal>.
  </para>

  &return.falseproblem;
  <para>
   В этом примере разработчик допустил ошибку, полагаясь на возвращаемый
   результат <function>PDO::exec</function>. В результате, если запрос отработал
   без ошибок, но не модифицировал ни одной строки, работа скрипта будет завершена
   функцией <function>die</function>:
   <programlisting role="php">
<![CDATA[
<?php
$db->exec() or die(print_r($db->errorInfo(), true)); // неправильно
?>
]]>
   </programlisting>
  </para>

 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Выполнение запроса DELETE</title>
    <para>
     Получение количества удалённых записей запросом DELETE без условий WHERE.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$dbh = new PDO('odbc:sample', 'db2inst1', 'ibmdb2');

/* Удаляем все записи из таблицы FRUIT */
$count = $dbh->exec("DELETE FROM fruit");

/* Получим количество удалённых записей */
print("Удалено $count строк.\n");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Удалено 1 строк.
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::prepare</function></member>
    <member><function>PDO::query</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
