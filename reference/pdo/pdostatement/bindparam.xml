<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.bindparam" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindParam</refname>
  <refpurpose>
   Привязывает параметр запроса к переменной
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::bindParam</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>param</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxLength</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>driverOptions</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Связывает переменную PHP с именованным или неименованным параметром
   подготавливаемого SQL-запроса. В отличие от
   <methodname>PDOStatement::bindValue</methodname>, переменная привязывается по
   ссылке и её значение будет вычисляться во время вызова
   <methodname>PDOStatement::execute</methodname>.
  </para>
  <para>
   В большинстве случаев в подготавливаемых запросах используются только входные
   параметры, то есть при построении запроса доступ к ним осуществляется только в
   режиме чтения (возможно приведение
   в соответствии с <parameter>type</parameter>). Тем не менее, некоторые драйверы позволяют запускать хранимые
   процедуры, которые, в свою очередь, могут возвращать данные посредством
   выходных параметров. Зачастую, такие параметры используются одновременно
   как входные и как выходные.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>param</parameter></term>
      <listitem>
       <para>
        Идентификатор параметра. Для подготавливаемых запросов с именованными
        параметрами это будет имя в виде <varname>:name</varname>. Если
        используются неименованные параметры (знаки вопроса ?) это будет позиция
        псевдопеременной в запросе (начиная с 1).
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
      <listitem>
       <para>
        Имя переменной PHP, которую требуется привязать к параметру SQL-запроса.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
      <listitem>
       <para>
        Явно заданный тип данных параметра. Тип задаётся одной из <link linkend="pdo.constants">констант
        <literal>PDO::PARAM_*</literal></link>. Если параметр используется, в том числе для вывода информации
        из хранимой процедуры, к значению аргумента
        <parameter>type</parameter> необходимо добавить
        <constant>PDO::PARAM_INPUT_OUTPUT</constant>, используя оператор побитовое ИЛИ.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>maxLength</parameter></term>
      <listitem>
       <para>
        Размер типа данных. Чтобы указать, что параметр используется для вывода
        данных из хранимой процедуры, необходимо явно задать его размер.
        Имеет значение, только если у параметра <parameter>type</parameter>
        установлено значение <constant>PDO::PARAM_INPUT_OUTPUT</constant>.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>driverOptions</parameter></term>
     <listitem>
      <para>

      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>
    Выполнение подготовленного запроса с именованными псевдопеременными
   </title>
   <programlisting role="php">
<![CDATA[
<?php
/* Выполнение запроса с привязкой PHP-переменных */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->bindParam('calories', $calories, PDO::PARAM_INT);
/* Имена также могут начинаться с двоеточия ":" (необязательно) */
$sth->bindParam(':colour', $colour, PDO::PARAM_STR);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>
    Выполнение подготовленного запроса с неименованными псевдопеременными (?)
   </title>
   <programlisting role="php">
<![CDATA[
<?php
/* Выполнение запроса с привязкой PHP-переменных */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $colour, PDO::PARAM_STR);
$sth->execute();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>
    Вызов хранимой процедуры с INOUT-параметром
   </title>
   <programlisting role="php">
<![CDATA[
<?php
/* Вызов хранимой процедуры с INOUT-параметром */
$colour = 'red';
$sth = $dbh->prepare('CALL puree_fruit(?)');
$sth->bindParam(1, $colour, PDO::PARAM_STR|PDO::PARAM_INPUT_OUTPUT, 12);
$sth->execute();
print "После приготовления фруктового пюра, цвет - $colour";
?>
]]>
   </programlisting>
  </example>

 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
    <member><methodname>PDOStatement::bindValue</methodname></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
