<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 93e05c681bfdbfdd60cec941173c6fe8e8c95cf6 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="swoole-coroutine-lock.lock" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Swoole\Coroutine\Lock::lock</refname>
  <refpurpose>Захватывает блокировку, блокируя выполнение, если требуется</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Swoole\Coroutine\Lock::lock</methodname>
   <void />
  </methodsynopsis>
  <para>
   При выполнении операции блокировки, если блокировка уже удерживается другой сопрограммой,
   текущая сопрограмма добровольно освобождает управление процессором и переходит в состояние ожидания.
   Как только сопрограмма, которая удерживает блокировку, вызывает метод unlock(), ожидающая сопрограмма
   возобновляется и снова пытается захватить блокировку.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Метод возвращает <literal>true</literal>, если захватил блокировку,
   иначе <literal>false</literal>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
