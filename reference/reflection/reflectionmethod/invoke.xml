<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f7503d75d526770b3657fecb439b85293106443d Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="reflectionmethod.invoke" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionMethod::invoke</refname>
  <refpurpose>Вызов</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>ReflectionMethod::invoke</methodname>
   <methodparam><type class="union"><type>object</type><type>null</type></type><parameter>object</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Вызывает отражённый метод.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object</parameter></term>
     <listitem>
      <para>
       Объект, метод которого требуется вызвать. Для статических методов
       передаётся <type>null</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Ноль или более аргументов, передаваемых методу. Допускается передавать
       переменное число аргументов.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает результат выполнения метода.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выбрасывает исключение <classname>ReflectionException</classname>, если
   в объекте <parameter>object</parameter> нет определения метода.
  </para>
  <para>
   Выбрасывает исключение <classname>ReflectionException</classname>, если
   вызвать метод на исполнение не удалось.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Пример использования <methodname>ReflectionMethod::invoke</methodname>
    </title>
    <programlisting role="php">
<![CDATA[
<?php
class HelloWorld {

    public function sayHelloTo($name) {
        return 'Привет, ' . $name;
    }

}

$reflectionMethod = new ReflectionMethod('HelloWorld', 'sayHelloTo');
echo $reflectionMethod->invoke(new HelloWorld(), 'Майк');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Привет, Майк
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <methodname>ReflectionMethod::invoke</methodname> не может использоваться, если ожидаются ссылочные параметры.
    Вместо него следует использовать <methodname>ReflectionMethod::invokeArgs</methodname>
    (передача ссылок в списке аргументов).
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionMethod::invokeArgs</methodname></member>
    <member><link linkend="object.invoke">__invoke()</link></member>
    <member><function>call_user_func</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
