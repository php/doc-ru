<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a0ae28d3bc85f927c22649ebd9a590b921534b7d Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->
<refentry xml:id="function.socket-get-option" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_get_option</refname>
  <refpurpose>Получает опции потока для сокета</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>int</type><type>false</type></type><methodname>socket_get_option</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>level</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>socket_get_option</function> извлекает значение для
   опции, указанной параметром <parameter>option</parameter> для заданного
   <parameter>socket</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Экземпляр <classname>Socket</classname>, созданный с помощью <function>socket_create</function>
       или <function>socket_accept</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>level</parameter></term>
     <listitem>
      <para>
       Параметр <parameter>level</parameter> указывает уровень протокола, на
       котором находится опция. Например, для получения опций на уровне
       сокета, должен использовать параметр <parameter>level</parameter>, равный
       <constant>SOL_SOCKET</constant>. Другие уровни, такие как
       <constant>TCP</constant>, можно использовать, указав номер протокола
       этого уровня. Номера протоколов можно найти
       с помощью функции <function>getprotobyname</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <table>
       <title>Доступные опции сокета</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>Опция</entry>
          <entry>Описание</entry>
          <entry>Тип</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>SO_DEBUG</constant></entry>
          <entry>
           Сообщает, записывается ли отладочная информация.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_BROADCAST</constant></entry>
          <entry>
           Сообщает, поддерживается ли передача широковещательных сообщений.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEADDR</constant></entry>
          <entry>
           Сообщает, могут ли локальные адреса использоваться повторно.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEPORT</constant></entry>
          <entry>
            Сообщает, могут ли локальные порты использоваться повторно.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_KEEPALIVE</constant></entry>
          <entry>
           Сообщает, поддерживаются ли соединения с периодической передачей
           сообщений. Если подключённый сокет не отвечает на эти сообщения,
           подключение прерывается и процессы записи в этот сокет уведомляются
           сигналом SIGPIPE.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_LINGER</constant></entry>
          <entry>
           <para>
            Сообщает, будет ли <parameter>socket</parameter> останавливаться
            на <function>socket_close</function>, если данные присутствуют.
            По умолчанию, когда сокет закрыт, он попытается отправить все неотправленные
            данные. В случае сокета, ориентированного на подключение, <function>socket_close</function>
            будет ожидать, пока его одноранговый узел подтвердит данные.
           </para>
           <para>
            Если <varname>l_onoff</varname> отличен от нуля, а
            <varname>l_linger</varname> равно нулю, все неотправленные
            данные будут отброшены и RST (сброс) отправлен одноранговому узлу
            в случае сокета, ориентированного на подключение.
           </para>
           <para>
            С другой стороны, если <varname>l_onoff</varname> и <varname>l_linger</varname>
            отличны от нуля, <function>socket_close</function> будет блокироваться до тех пор,
            пока все данные не будут отправлены или если время, указанное в <varname>l_linger</varname>, не истечёт.
            Если сокет не блокируется, <function>socket_close</function> потерпит неудачу и вернёт ошибку.
           </para>
          </entry>
          <entry>
           <type>array</type>. Массив будет содержать два ключа:
           <varname>l_onoff</varname> и
           <varname>l_linger</varname>.
          </entry>
         </row>
         <row>
          <entry><constant>SO_OOBINLINE</constant></entry>
          <entry>
           Сообщает, выходит ли <parameter>socket</parameter> из встроенных данных.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDBUF</constant></entry>
          <entry>
           Сообщает размер отправленного буфера.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVBUF</constant></entry>
          <entry>
           Сообщает о размере полученного буфера.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_ERROR</constant></entry>
          <entry>
           Сообщает информацию о статусе ошибки и очищает её.
          </entry>
          <entry>
           <type>int</type> (не может быть установлен <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_TYPE</constant></entry>
          <entry>
           Сообщает о типе <parameter>socket</parameter> (например,
           <constant>SOCK_STREAM</constant>).
          </entry>
          <entry>
           <type>int</type> (не может быть установлен <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_DONTROUTE</constant></entry>
          <entry>
           Сообщает, что исходящие сообщения обходят стандартные средства маршрутизации.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVLOWAT</constant></entry>
          <entry>
           Сообщает минимальное количество байтов для обработки операций ввода <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVTIMEO</constant></entry>
          <entry>
           Сообщает значение тайм-аута для операций ввода.
          </entry>
          <entry>
           <type>array</type>. Массив будет содержать два ключа:
           <varname>sec</varname>, который является частью секунд для значения тайм-аута
           и <varname>usec</varname>, который является микросекундной частью значения тайм-аута.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDTIMEO</constant></entry>
          <entry>
           Сообщает значение тайм-аута, указывающее количество времени, которое блокирует функция вывода,
           поскольку управление потоком предотвращает отправку данных.
          </entry>
          <entry>
           <type>array</type>. Массив будет содержать два ключа:
           <varname>sec</varname>, который является частью секунд для значения тайм-аута
           и <varname>usec</varname>, который является микросекундной частью значения тайм-аута.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDLOWAT</constant></entry>
          <entry>
           Сообщает минимальное количество байтов для обработки операцией вывода <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_NODELAY</constant></entry>
          <entry>
           Сообщает, отключён ли алгоритм Nagle TCP.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_JOIN_GROUP</constant></entry>
          <entry>
           Присоединяется к многоадресной группе.
          </entry>
          <entry>
           массив (<type>array</type>) с ключами <literal>"group"</literal>, указав
           строку (<type>string</type>) с многоадресным адресом IPv4 или IPv6
           и <literal>"interface"</literal>, указав либо номер интерфейса (тип <type>int</type>),
           либо строку (<literal>string</literal>) с именем интерфейса, например <literal>"eth0"</literal>.
           <literal>0</literal> можно указать, чтобы сообщить, что интерфейс должен быть выбран с использованием правил маршрутизации.
           (может использоваться только в <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_LEAVE_GROUP</constant></entry>
          <entry>
           Оставляет многоадресную группу.
          </entry>
          <entry>
           массив (<type>array</type>). Смотрите <constant>MCAST_JOIN_GROUP</constant> для получения
           дополнительной информации. (может использоваться только в
           <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_BLOCK_SOURCE</constant></entry>
          <entry>
           Блокирует пакеты, поступающие из определённого источника
           в определённую группу многоадресной передачи,
           которые должны быть предварительно соединены.
          </entry>
          <entry>
           массив (<type>array</type>) с такими же ключами, как у
           <constant>MCAST_JOIN_GROUP</constant>, плюс один дополнительный ключ,
           <literal>source</literal>, который представляет строку (<type>string</type>),
           указывающую адрес IPv4 или IPv6 источника, который должен быть заблокирован.
           (может использоваться только в <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_UNBLOCK_SOURCE</constant></entry>
          <entry>
           Разблокирует (начинает приём снова) пакеты, поступающие с определённого
           исходного адреса в определённую группу многоадресной передачи,
           которая должна предварительно соединена.
          </entry>
          <entry>
           массив (<type>array</type>) с таким же форматом, как у
           <constant>MCAST_BLOCK_SOURCE</constant>.
           (может использоваться только в <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_JOIN_SOURCE_GROUP</constant></entry>
          <entry>
           Получать пакеты, предназначенные для конкретной группы многоадресной передачи,
           исходный адрес которого совпадает определённому значению.
          </entry>
          <entry>
           массив (<type>array</type>) с тем же самым форматом, что у
           <constant>MCAST_BLOCK_SOURCE</constant>.
           (может использоваться только в <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_LEAVE_SOURCE_GROUP</constant></entry>
          <entry>
           Остановить приём пакетов, предназначенных для конкретной группы многоадресной передачи,
           исходный адрес которого совпадает определённому значению.
          </entry>
          <entry>
           массив (<type>array</type>) с тем же самым форматом, что у
           <constant>MCAST_BLOCK_SOURCE</constant>.
           (может использоваться только в <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_IF</constant></entry>
          <entry>
           Исходящий интерфейс для многоадресных пакетов IPv4.
          </entry>
          <entry>
           Любое целое число (<type>int</type>), указывающее номер интерфейса или
           строку (<type>string</type>) с именем интерфейса, например,
           <literal>eth0</literal>. Значение <type>0</type> может использоваться
           для указания, что таблица маршрутизации используется для выбора интерфейса.
           Функция <function>socket_get_option</function> возвращает индекс
           интерфейса.
           Обратите внимание, что в отличие от C API, эта опция НЕ принимает IP-адрес.
           Это устраняет разницу в интерфейсе между
           <constant>IP_MULTICAST_IF</constant> и <constant>IPV6_MULTICAST_IF</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_IF</constant></entry>
          <entry>
           Исходящий интерфейс для многоадресных пакетов IPv6.
          </entry>
          <entry>
           То же, что и <constant>IP_MULTICAST_IF</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_LOOP</constant></entry>
          <entry>
           Политика петли групповой передачи для пакетов IPv4, которая
           определяет, могут ли пакеты многоадресной передачи, отправленные
           этим сокетом, также достигать приёмники на том же хосте, которые
           присоединились к той же группе многоадресной передачи на исходящем
           интерфейсе, который используется этим сокетом. Это случай по
           умолчанию.
          </entry>
          <entry>
           целое число (<type>int</type>) (либо <literal>0</literal>, либо
           <literal>1</literal>). Для <function>socket_set_option</function>
           любое значение будет принято и преобразовано в тип boolean,
           согласно обычным правилам PHP.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_LOOP</constant></entry>
          <entry>
           Аналогично <constant>IP_MULTICAST_LOOP</constant>, но для IPv6.
          </entry>
          <entry>
           <type>int</type>. See <constant>IP_MULTICAST_LOOP</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_TTL</constant></entry>
          <entry>
           Время ожидания исходящих пакетов IPv4 для
           многоадресной передачи. Это должно быть значение между
           0 (не оставлять интерфейс) и 255. Значение по умолчанию - 1
           (достигается только локальная сеть).
          </entry>
          <entry>
           целое число (<type>int</type>) между 0 и 255.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_HOPS</constant></entry>
          <entry>
           Аналогично <constant>IP_MULTICAST_TTL</constant>, но для пакетов IPv6.
           Значение -1 также принимается, что означает использование маршрута по умолчанию.
          </entry>
          <entry>
           целое число (<type>int</type>) между 0 и 255.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает значение заданной опции или &false; в случае возникновения ошибки.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>socket_get_option</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = socket_create_listen(1223);

$linger = array('l_linger' => 1, 'l_onoff' => 1);
socket_set_option($socket, SOL_SOCKET, SO_LINGER, $linger);

var_dump(socket_get_option($socket, SOL_SOCKET, SO_REUSEADDR));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_create_listen</function></member>
    <member><function>socket_set_option</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
