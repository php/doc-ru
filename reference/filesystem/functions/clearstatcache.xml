<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 0c9c2dd669fe9395eaa73d487fbd160f9057429a Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.clearstatcache" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>clearstatcache</refname>
  <refpurpose>Очищает кеш состояния файлов</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>clearstatcache</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>clear_realpath_cache</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filename</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   Для обеспечения большей производительности при использовании
   функций <function>stat</function>, <function>lstat</function>
   или любой другой функции, перечисленных в приведённом ниже списке,
   PHP кеширует результаты их выполнения. Однако, в некоторых
   случаях вам может потребоваться очистка этого кеша. Например,
   когда ваш скрипт несколько раз проверяет состояние одного и того же файла,
   который может быть изменён или удалён во время выполнения скрипта,
   вы можете захотеть очистить кеш состояния. В этом случае необходимо
   использовать функцию <function>clearstatcache</function> для очистки
   в PHP кешированной информации об указанном файле.
  </para>
  <para>
   Обратите внимание, что PHP не кеширует информацию о несуществующих
   файлах. Так что, если вы вызовете <function>file_exists</function>
   на несуществующем файле, она будет возвращать &false; до тех пор, пока
   вы не создадите этот файл. Если же вы создадите файл, она будет
   возвращать &true;, даже если затем вы его удалите. Однако, функция
   <function>unlink</function> очистит данный кеш автоматически.
  </para>
  <note>
   <para>
    Данная функция кеширует информацию об определённых файлах, поэтому
    имеет смысл вызывать <function>clearstatcache</function> только
    в том случае, если вы совершаете несколько операций с одним и
    тем же файлом и не хотите получать кешированную информацию об
    этом файле.
   </para>
  </note>
  <para>
   Список функций, результаты выполнения которых кешируются:
   <function>stat</function>,
   <function>lstat</function>,
   <function>file_exists</function>,
   <function>is_writable</function>,
   <function>is_readable</function>,
   <function>is_executable</function>,
   <function>is_file</function>,
   <function>is_dir</function>,
   <function>is_link</function>,
   <function>filectime</function>,
   <function>fileatime</function>,
   <function>filemtime</function>,
   <function>fileinode</function>,
   <function>filegroup</function>,
   <function>fileowner</function>,
   <function>filesize</function>,
   <function>filetype</function> и
   <function>fileperms</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>clear_realpath_cache</parameter></term>
     <listitem>
      <para>
       Очищать кеш realpath или нет.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Очистить кеш realpath и stat только для определённого файла, используется
       только если параметр <parameter>clear_realpath_cache</parameter>
       установлен в &true;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>clearstatcache</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'output_log.txt';

function get_owner($file)
{
    $stat = stat($file);
    $user = posix_getpwuid($stat['uid']);
    return $user['name'];
}

$format = "UID @ %s: %s\n";

printf($format, date('r'), get_owner($file));

chown($file, 'ross');
printf($format, date('r'), get_owner($file));

clearstatcache();
printf($format, date('r'), get_owner($file));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: ross
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
