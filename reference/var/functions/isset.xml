<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: dd100db2cb8b7d7384e5daf3a1818ed090b1ad5a Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.isset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>isset</refname>
  <refpurpose>Определяет, объявили ли переменную и отличается ли её значение от &null;</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>isset</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>vars</parameter></methodparam>
  </methodsynopsis>
  <para>
   Языковая конструкция определяет, установили ли переменную.
   Установленная переменная — переменная, которую объявили и присвоили значение,
   которое не равняется &null;.
  </para>
  <para>
   PHP не считает переменную установленной,
   если переменную удалили языковой конструкцией <function>unset</function>.
  </para>
  <para>
   Языковая конструкция <function>isset</function> вернёт &false; при проверке переменной,
   для которой установили значение &null;.
   Обратите внимание, что NULL-символ <literal>"\0"</literal> не эквивалентен
   PHP-константе &null;.
  </para>
  <para>
   При передаче набора аргументов конструкция <function>isset</function>
   вернёт &true;, только если результат каждого выражения в списке аргументов определён.
   Проверка выполняется слева направо и останавливается,
   как только обнаруживается неустановленная переменная.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Переменная, которую требуется проверить.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       Дополнительные переменные.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Языковая конструкция возвращает &true;, если переменную <parameter>var</parameter> объявили
   и значение переменной не равняется &null;, иначе возвращает &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример проверки переменной языковой конструкцией <function>isset</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Проверка вернёт TRUE, поэтому PHP выведет текст
if (isset($var)) {
    echo "Эту переменную установили, поэтому я выведу её.", PHP_EOL;
}

// В следующих примерах для вывода значения, которое возвращает языковая конструкция isset(),
// вызывается функция var_dump

$a = "test";
$b = "anothertest";

var_dump(isset($a));     // TRUE
var_dump(isset($a, $b)); // TRUE

unset ($a);

var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE

$foo = NULL;
var_dump(isset($foo));   // FALSE

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Конструкция также работает с элементами массивов:
   <example>
    <title>Пример проверки конструкцией <function>isset</function> элментов массива</title>
    <programlisting role="php">
<![CDATA[
<?php

$a = array ('test' => 1, 'hello' => NULL, 'pie' => array('a' => 'apple'));

var_dump(isset($a['test']));            // TRUE
var_dump(isset($a['foo']));             // FALSE
var_dump(isset($a['hello']));           // FALSE

// Элемент с ключом "hello" равен NULL, поэтому конструкция считает элемент неопределённым.
// Функция array_key_exists сообщит, содержит ли массив ключ, даже если значение элемента равно NULL
var_dump(array_key_exists('hello', $a)); // TRUE

// Проверка вложенных элементов массива
var_dump(isset($a['pie']['a']));        // TRUE
var_dump(isset($a['pie']['b']));        // FALSE
var_dump(isset($a['cake']['a']['b']));  // FALSE

?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title>Языковая конструкция <function>isset</function> и строковые индексы</title>
   <programlisting role="php">
<![CDATA[
<?php

$expected_array_got_string = 'somestring';
var_dump(isset($expected_array_got_string['some_key']));
var_dump(isset($expected_array_got_string[0]));
var_dump(isset($expected_array_got_string['0']));
var_dump(isset($expected_array_got_string[0.5]));
var_dump(isset($expected_array_got_string['0.5']));
var_dump(isset($expected_array_got_string['0 Mostel']));

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
bool(true)
bool(true)
bool(true)
bool(false)
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Конструкция <function>isset</function> работает только с переменными, поэтому передача
    в аргументах других значений выдаст ошибку синтаксического анализа.
    Для проверки определения <link linkend="language.constants">констант</link>
    пользуются функцией <function>defined</function>.
   </para>
  </warning>
  &note.language-construct;
  <note>
   <para>
    При вызове конструкции <function>isset</function>
    на недоступных свойствах объекта вызывается магический метод перегрузки
    <link linkend="object.isset">__isset()</link>, если магический метод определили в классе.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>empty</function></member>
    <member><link linkend="object.isset">__isset()</link></member>
    <member><function>unset</function></member>
    <member><function>defined</function></member>
    <member><link linkend="types.comparisons">Таблица сравнения типов</link></member>
    <member><function>array_key_exists</function></member>
    <member><function>is_null</function></member>
    <member>Оператор управления ошибками <link linkend="language.operators.errorcontrol">@</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
