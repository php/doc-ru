<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4a86f6e16db9a4b73c3580bcdc1a9c772c9fea66 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->

<phpdoc:classref xml:id="class.ffi" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Основной интерфейс к коду и данным C</title>
 <titleabbrev>FFI</titleabbrev>

 <partintro>

  <!-- {{{ FFI intro -->
  <section xml:id="ffi.intro">
   &reftitle.intro;
   <para>
    Объекты этого класса создаются фабричными методами
    <methodname>FFI::cdef</methodname>,
    <methodname>FFI::load</methodname> и
    <methodname>FFI::scope</methodname>. Объявленные
    переменные C доступны как свойства экземпляра FFI, а функции
    как его методы. Объявленные типы C можно использовать
    для создания структур данных с помощью
    <methodname>FFI::new</methodname> и
    <methodname>FFI::type</methodname>.
   </para>
   <para>
    Разбор объявлений FFI и загрузка разделяемой библиотеки
    может занять значительное время. Не имеет смысла делать
    это для каждого HTTP-запроса в окружении Web. Тем не
    менее можно перезагрузить объявления FFI и библиотеки
    при старте PHP и инстанциировать объекты FFI по
    необходимости. Заголовочные файлы могут быть расширены
    специальными объявлениями <literal>FFI_SCOPE</literal>
    (например, <code>#define FFI_SCOPE "foo"”"</code>;
    скоуп по умолчанию "C") и загружены с помощью
    <methodname>FFI::load</methodname> во время предзагрузки.
    Это приведёт к созданию постоянных привязок, которые
    будут доступны для всех запросов через
    <methodname>FFI::scope</methodname>.
    Более подробно читайте на странице
    <link linkend="ffi.examples-complete">Простые примеры использования FFI</link>.
   </para>
   <para>
    В один и тот же скоуп можно загрузить несколько
    заголовочных файлов.
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="ffi.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>FFI</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>FFI</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.ffi')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
   </classsynopsis>
   <!-- }}} -->

  </section>

 </partintro>

 &reference.ffi.entities.ffi;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
