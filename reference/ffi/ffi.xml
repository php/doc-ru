<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 246772c44786e141bf76c6b492e1c3e7b8400c30 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.ffi" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Основной интерфейс к коду и данным языка C</title>
 <titleabbrev>FFI</titleabbrev>

 <partintro>

  <!-- {{{ FFI intro -->
  <section xml:id="ffi.intro">
   &reftitle.intro;
   <para>
    Объекты этого класса создаются фабричными методами
    <methodname>FFI::cdef</methodname>,
    <methodname>FFI::load</methodname> и
    <methodname>FFI::scope</methodname>. Объявленные
    переменные языка C доступны как свойства экземпляра класса FFI,
    а функции как методы. Методы <methodname>FFI::new</methodname>
    и <methodname>FFI::type</methodname> принимают или возвращают
    объявленные типы языка C, когда создают структуры данных C.
   </para>
   <para>
    Разбор объявлений FFI и загрузка разделяемой библиотеки
    может занять значительное время. Не имеет смысла делать
    это для каждого HTTP-запроса в Web-окружении. Тем не
    менее можно перезагрузить объявления FFI и библиотеки
    при старте PHP и инстанциировать объекты класса FFI по
    необходимости. Заголовочные файлы могут быть расширены
    специальными объявлениями <literal>FFI_SCOPE</literal>
    (например, <code>#define FFI_SCOPE "foo"</code>;
    скоуп по умолчанию — «C») и загружены методом
    <methodname>FFI::load</methodname> во время предзагрузки.
    Это приведёт к созданию постоянных привязок, которые
    будут доступны для всех запросов через
    метод <methodname>FFI::scope</methodname>.
    Более подробно читайте на странице
    <link linkend="ffi.examples-complete">Простые примеры использования класса FFI</link>.
   </para>
   <para>
    В один и тот же скоуп можно предзагрузить несколько заголовочных файлов.
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="ffi.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <modifier>final</modifier>
     <classname>FFI</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="ffi.constants.biggest-alignment">FFI::__BIGGEST_ALIGNMENT__</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.ffi')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='FFI'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="ffi-ffi.constants">
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="ffi.constants.biggest-alignment">
     <term><constant>FFI::__BIGGEST_ALIGNMENT__</constant></term>
     <listitem>
      <para/>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>

 </partintro>

 &reference.ffi.entities.ffi;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
