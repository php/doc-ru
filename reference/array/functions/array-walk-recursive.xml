<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d42b32e96ba3a36544b453128b5f515166bfc14c Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.array-walk-recursive" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk_recursive</refname>
  <refpurpose>Рекурсивно применяет пользовательскую функцию к каждому элементу массива</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk_recursive</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>arg</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Применяет пользовательскую функцию <parameter>callback</parameter> к каждому
   элементу массива <parameter>input</parameter>. Эта функция обрабатывает
   каждый элемент многомерного массива.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Входной массив.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Обычно, <parameter>callback</parameter> принимает два параметра.
       Первым параметром является значение элемента массива <parameter>input</parameter>, а
       вторым - его ключ.
      </para>
      <note>
       <para>
        Если требуется, чтобы функция <parameter>callback</parameter> изменила
        значения в массиве, определите первый параметр
        <parameter>callback</parameter> как
        <link linkend="language.references">ссылку</link>. Тогда
        все изменения будут применены к элементам массива.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg</parameter></term>
     <listitem>
      <para>
       Если указан необязательный параметр <parameter>arg</parameter>,
       то он будет передан третьим параметром функции <parameter>callback</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>array_walk_recursive</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$sweet = array('a' => 'apple', 'b' => 'banana');
$fruits = array('sweet' => $sweet, 'sour' => 'lemon');

function test_print($item, $key)
{
    echo "$key содержит $item\n";
}

array_walk_recursive($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
a содержит apple
b содержит banana
sour содержит lemon
]]>
    </screen>
    <para>
     Обратите внимание, что ключ '<literal>sweet</literal>' никогда не отображается.
     Любой ключ, содержащий значение типа <type>array</type>,
     не будет передаваться в функцию.
    </para>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
