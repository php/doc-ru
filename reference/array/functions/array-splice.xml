<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cd943f94a013b74df8765ab8e1a620a916a64a85 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.array-splice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_splice</refname>
  <refpurpose>Удаляет часть массива и заменяет её чем-нибудь ещё</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_splice</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>replacement</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Удаляет <parameter>length</parameter> элементов, расположенных на расстоянии
   <parameter>offset</parameter> из массива <parameter>array</parameter>, и заменяет их
   элементами массива <parameter>replacement</parameter>, если он передан в качестве
   параметра.
  </para>
  <note>
   <para>
    Обратите внимание, что числовые ключи в массиве <parameter>array</parameter>
    не сохраняются.
   </para>
  </note>
  <note>
   <simpara>
    Если параметр <parameter>replacement</parameter> не является массивом, он будет
    <link linkend="language.types.array.casting">преобразован</link> к нему (то есть <code>
    (array) $parameter</code>). Это может привести к неожиданным результатам при
    использовании объекта или &null; в качестве <parameter>replacement</parameter>.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Входной массив.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Если параметр <parameter>offset</parameter> положительный, будут удалены элементы,
       находящиеся на расстоянии offset от начала <parameter>array</parameter>.
      </para>
      <para>
       Если <parameter>offset</parameter> отрицательный, будут удалены
       элементы, находящиеся на расстоянии offset от конца <parameter>input</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Если параметр <parameter>length</parameter> опущен, будут удалены все элементы
       начиная с позиции <parameter>offset</parameter> и до конца массива.
      </para>
      <para>
       Если <parameter>length</parameter> указан и он положителен, то будет удалено именно
       столько элементов.
       </para>
       <para>
        Если параметр <parameter>length</parameter> отрицателен, то
        конец удаляемой части элементов будет отстоять на это количество от конца массива.
       </para>
       <para>
        Если <parameter>length</parameter> задан как 0, ничего удалено не будет.
       </para>
       <tip>
        <para>
         Совет: для того, чтобы удалить все элементы массива, начиная с позиции
         <parameter>offset</parameter> до конца массива, в то время как указан параметр
         <parameter>replacement</parameter>, используйте <code>count($input)</code> в
         качестве параметра <parameter>length</parameter>.
        </para>
       </tip>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><parameter>replacement</parameter></term>
      <listitem>
       <para>
        Если передан массив <parameter>replacement</parameter> в качестве аргумента, тогда
        удалённые элементы будут заменены элементами этого массива.
       </para>
       <para>
        Если параметры <parameter>offset</parameter> и <parameter>length</parameter>
        таковы, что из исходного массива не будет ничего удалено, тогда элементы массива
        <parameter>replacement</parameter> будут вставлены на позицию
        <parameter>offset</parameter>.
        <note>
         <para>
          Обратите внимание, что ключи массива
          <parameter>replacement</parameter> не сохраняются.
         </para>
        </note>
       </para>
       <para>
        Совет: если <parameter>replacement</parameter> является просто
        одним элементом, нет необходимости заключать его в <literal>array()</literal>
        или квадратные скобки,
        если только этот элемент сам не является массивом, объектом или &null;.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает массив, содержащий удалённые элементы.
  </para>
 </refsect1>

  <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> теперь допускает значение null.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Примеры использования <function>array_splice</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("red", "green", "blue", "yellow");
array_splice($input, 2);
var_dump($input);

$input = array("red", "green", "blue", "yellow");
array_splice($input, 1, -1);
var_dump($input);

$input = array("red", "green", "blue", "yellow");
array_splice($input, 1, count($input), "orange");
var_dump($input);

$input = array("red", "green", "blue", "yellow");
array_splice($input, -1, 1, array("black", "maroon"));
var_dump($input);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  string(3) "red"
  [1]=>
  string(5) "green"
}
array(2) {
  [0]=>
  string(3) "red"
  [1]=>
  string(6) "yellow"
}
array(2) {
  [0]=>
  string(3) "red"
  [1]=>
  string(6) "orange"
}
array(5) {
  [0]=>
  string(3) "red"
  [1]=>
  string(5) "green"
  [2]=>
  string(4) "blue"
  [3]=>
  string(5) "black"
  [4]=>
  string(6) "maroon"
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Примеры использования <function>array_splice</function></title>
    <para>
     Следующие выражения эквивалентны:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// добавить два элемента в $input
array_push($input, $x, $y);
array_splice($input, count($input), 0, array($x, $y));


// удалить последний элемент из $input
array_pop($input);
array_splice($input, -1);


// удалить первый элемент из $input
array_shift($input);
array_splice($input, 0, 1);


// добавить элемент в начало $input
array_unshift($input, $x, $y);
array_splice($input, 0, 0, array($x, $y));


// заменить в $input элемент с индексом $x на значение $y
$input[$x] = $y; // для массивов, где ключ равен смещению
array_splice($input, $x, 1, $y);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_merge</function></member>
    <member><function>array_slice</function></member>
    <member><function>unset</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
