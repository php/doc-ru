<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d42b32e96ba3a36544b453128b5f515166bfc14c Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Применяет заданную пользователем функцию к каждому элементу массива</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>arg</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Применяет пользовательскую функцию <parameter>callback</parameter> к каждому
   элементу массива <parameter>array</parameter>.
  </simpara>
  <para>
   <function>array_walk</function> не подвержена влиянию внутреннего
   указателя массива <parameter>array</parameter>.
   <function>array_walk</function> обойдёт все элементы массива
   независимо от позиции указателя.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Входной массив.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Обычно функция <parameter>callback</parameter> принимает два параметра.
       В качестве первого параметра идёт значение элемента массива
       <parameter>array</parameter>, а ключ - в качестве второго.
      </para>
      <note>
       <para>
        Если требуется, чтобы функция <parameter>callback</parameter> изменила
        значения в массиве, определите первый параметр
        <parameter>callback</parameter> как
        <link linkend="language.references">ссылку</link>. Тогда
        все изменения будут применены к элементам оригинального массива.
       </para>
      </note>
      <note>
       <para>
        Множество встроенных функций (например, <function>strtolower</function>)
        выводят предупреждение, если им передано больше параметров, чем
        они ожидают, или которые не могут непосредственно использоваться в
        <parameter>callback</parameter>.
       </para>
      </note>
      <para>
       Потенциально изменены могут быть только значения массива
       <parameter>array</parameter>; структура самого массива не может
       быть изменена, то есть нельзя добавить, удалить или поменять
       порядок элементов. Если callback-функция не соответствует этому
       требованию, поведение данной функции станет неопределённым и
       непредсказуемым.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg</parameter></term>
     <listitem>
      <para>
       Если указан необязательный параметр <parameter>arg</parameter>,
       он будет передан в качестве третьего параметра в
       callback-функцию <parameter>callback</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true;
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Начиная с PHP 7.1.0, в случае если <parameter>callback</parameter>-функция
   требует больше двух параметров (ключ и значение элемента массива), будет
   выброшено исключение <classname>ArgumentCountError</classname>. Ранее в таком
   случае при каждом вызове <parameter>callback</parameter>, генерировалась
   ошибка уровня <link linkend="errorfunc.constants">E_WARNING</link>.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>array_walk</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");

function test_alter(&$item1, $key, $prefix)
{
    $item1 = "$prefix: $item1";
}

function test_print($item2, $key)
{
    echo "$key. $item2\n";
}

echo "До ...:\n";
array_walk($fruits, 'test_print');

array_walk($fruits, 'test_alter', 'fruit');
echo "... и после:\n";

array_walk($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
До ...:
d. lemon
a. orange
b. banana
c. apple
... и после:
d. fruit: lemon
a. fruit: orange
b. fruit: banana
c. fruit: apple
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>iterator_apply</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
