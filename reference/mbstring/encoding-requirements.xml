<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 96c9d88bad9a7d7d44bfb7f26c226df7ee9ddf26 Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->

<chapter xml:id="mbstring.php4.req" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Требования, предъявляемые к кодировкам символов в PHP</title>
 <para>
  Типы кодировок, использование которых в PHP безопасно.
  <itemizedlist>
   <listitem>
    <para>
     Однобайтовые кодировки,
     <itemizedlist>
      <listitem>
       <simpara>
        имеющие ASCII-совместимую (совместимую с ISO646) разметку в диапазоне
        с <literal>00h</literal> по <literal>7fh</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
   <listitem>
    <para>
     Многобайтовые кодировки,
     <itemizedlist>
      <listitem>
       <simpara>
        имеющие ASCII-совместимую разметку в диапазоне
        с <literal>00h</literal> по <literal>7fh</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        не использующие escape-последовательности ISO2022.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        не использующие значения в байтах с <literal>00h</literal> по
        <literal>7fh</literal> по отдельности, когда эти байты
        представляют один символ.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  Далее приведены примеры кодировок, использование которых в PHP нежелательно.
  <informalexample>
   <programlisting>
<![CDATA[
JIS, SJIS, ISO-2022-JP, BIG-5
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Даже если PHP-скрипт написан в рекомендуемой кодировке, он может оказаться
  неработоспособным. Зачастую так происходит, когда кодированные строки
  появляются в скрипте в качестве идентификаторов или литералов. Можно исключить
  большую часть таких ситуаций путём использования функции фильтрации кодировок во
  входящих HTTP-запросах (функция есть в модуле <literal>mbstring</literal>).
 </para>
 <note>
  <para>
   Крайне не рекомендуется использовать SJIS, BIG5, CP936, CP949 и GB18030 в
   качестве внутренних кодировок, если вы недостаточно разбираетесь в устройстве
   парсера, сканера и кодировки.
  </para>
 </note>
 <note>
  <para>
   Если вы подключаетесь к базе данных средствами PHP, рекомендуется использовать
   одинаковые кодировки для базы данных и в качестве
   <literal>внутренней кодировки</literal>. Это облегчит разработку и повысит
   быстродействие.
  </para>
  <para>
   Если вы используете PostgreSQL, совпадение кодировок в базе данных и
   используемой в PHP необязательно, так как PostgreSQL поддерживает
   автоматическое преобразование кодировок между СУБД и клиентом.
  </para>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
