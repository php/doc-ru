<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f5a5f5ae75cf140bd3dd65da52b70f6236b0e131 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.startbuffering">
 <refnamediv>
  <refname>Phar::startBuffering</refname>
  <refpurpose>Запускает буферизацию операций записи, отключая запись изменений Phar-архива на диск</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>Phar::startBuffering</methodname>
   <void/>
  </methodsynopsis>

  <para>
   Метод <function>Phar::startBuffering</function> может дать значительный прирост
   производительности при создании, либо модификации phar-архива с большим
   количеством файлов. Обычно, когда добавляется новый файл, либо
   изменяется существующий, запускается операция пересоздания phar-архива.
   С включённой буферизацией архив будет пересоздан один раз в самом конце
   внесения изменений.
  </para>
  <para>
   Эта концепция работает аналогично транзакции в базе данных, что
   позволяет сделать вне необходимые изменения и применить их
   одновременно, в рамках одной операции. Такое поведение обеспечивает пара
   методов <function>Phar::startBuffering</function>/<function>Phar::stopBuffering</function>.
  </para>
  <para>
   Настройки буферизации индивидуальны для каждого архива.
   Включённая буферизация для <literal>foo.phar</literal> никак не влияет
   на режим работы с <literal>bar.phar</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>Phar::startBuffering</function></title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// удалим на всякий случай
@unlink('brandnewphar.phar');
try {
    $p = new Phar(dirname(__FILE__) . '/brandnewphar.phar', 0, 'brandnewphar.phar');
} catch (Exception $e) {
    echo 'не могу создать phar:', $e;
}
echo 'В новом phar содержится ' . $p->count() . " записей\n";
$p->startBuffering();
$p['file.txt'] = 'hi';
$p['file2.txt'] = 'there';
$p['file2.txt']->setCompressedGZ();
$p['file3.txt'] = 'babyface';
$p['file3.txt']->setMetadata(42);
$p->setStub("<?php
function __autoload($class)
{
    include 'phar://myphar.phar/' . str_replace('_', '/', $class) . '.php';
}
Phar::mapPhar('myphar.phar');
include 'phar://myphar.phar/startup.php';
__HALT_COMPILER();");
$p->stopBuffering();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::stopBuffering</function></member>
    <member><function>Phar::isBuffering</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
