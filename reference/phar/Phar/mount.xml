<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28046efaba656e158bdf45a2585c23a339943869 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="phar.mount" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::mount</refname>
  <refpurpose>Монтирование внешнего путь или файла к виртуальному пути в phar-архиве</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>void</type><methodname>Phar::mount</methodname>
   <methodparam><type>string</type><parameter>pharPath</parameter></methodparam>
   <methodparam><type>string</type><parameter>externalPath</parameter></methodparam>
  </methodsynopsis>
  <para>
   Очень похоже на концепцию файловой системы unix по монтированию внешнего
   устройства в существующее дерево директорий. <function>Phar::mount</function>
   позволяет ссылаться на внешние файлы и директории, как будто они находятся
   внутри архива. Это позволяет повысить уровень абстракции обращаясь ко внешним
   конфигурационным файлам так, как будто они являются частью архива.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pharPath</parameter></term>
     <listitem>
      <para>
       Внутренний путь в архиве, по которому необходимо примонтировать внешний путь.
       Это должен быть несуществующий относительный путь внутри архива.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>externalPath</parameter></term>
     <listitem>
      <para>
       Путь или URL внешнего файла или директории
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Ничего не возвращает. В случае возникновения ошибки выбрасывает исключение <classname>PharException</classname>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выбрасывает исключение <classname>PharException</classname> при возникновении ошибок.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>Phar::mount</function></title>
    <para>
     В следующем примере демонстрируется доступ к внешнему конфигурационному файлу,
     как будто он находится внутри архива.
    </para>
    <para>
     Для начала код, содержащийся в архиве:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$configuration = simplexml_load_string(file_get_contents(
    Phar::running(false) . '/config.xml'));
?>
]]>
    </programlisting>
    <para>
     Далее внешний код, монтирующий файл в архив:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// для начала настроим ассоциацию между абстрактным config.xml
// и конкретным файлом на диске
Phar::mount('phar://config.xml', '/home/example/config.xml');
// а теперь запускаем приложение
include '/path/to/archive.phar';
?>
]]>
    </programlisting>
    <para>
     Другой метод - поместить монтирующий код в заглушку (stub) Phar-архива.
     Пример использования конфигурационного файла по умолчанию,
     если пользовательский файл конфигурации не задан:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// для начала настроим связь между абстрактным config.xml
// и конкретным файлом на диске
if (defined('EXTERNAL_CONFIG')) {
    Phar::mount('config.xml', EXTERNAL_CONFIG);
    if (file_exists(__DIR__ . '/extra_config.xml')) {
        Phar::mount('extra.xml', __DIR__ . '/extra_config.xml');
    }
} else {
    Phar::mount('config.xml', 'phar://' . __FILE__ . '/default_config.xml');
    Phar::mount('extra.xml', 'phar://' . __FILE__ . '/default_extra.xml');
}
// а теперь запускаем приложение
include 'phar://' . __FILE__ . '/index.php';
__HALT_COMPILER();
?>
]]>
    </programlisting>
    <para>
     ... и код для загрузки этого phar-архива:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
define('EXTERNAL_CONFIG', '/home/example/config.xml');
// а теперь запускаем приложение
include '/path/to/archive.phar';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
