<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c8ba91f7e546462dc66c2a11a7eab6f55c93915b Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.copy" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::copy</refname>
  <refpurpose>Копирует файл внутри phar-архива в новый файл внутри phar-архива</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>true</type><methodname>Phar::copy</methodname>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  &phar.write;

  <para>
   Метод копирует внутренний файл phar-архива в другой новый файл внутри phar-архива.
   Это объектно-ориентированная альтернатива функции <function>copy</function>
   с обёрткой потока phar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод выбрасывает исключение <classname>UnexpectedValueException</classname>,
   если исходный файл не существует, целевой файл уже существует, доступ на запись
   запретили, если хотя бы один файл невозможно открыть или невозможно прочитать исходный файл,
   или выбрасывает исключение <classname>PharException</classname>,
   если в phar-файл невозможно записать изменения.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример копирования файла внутри phar-архива методом <function>Phar::copy</function></title>
    <para>
     Пример показывает работу метода <function>Phar::copy</function>
     и эквивалентной ему по функциональности обёртки потока для решения одной
     и той же задачи. Основная разница между подходами состоит
     в обработке ошибок. Методы класса Phar выбрасывают исключения, а обёртка потока
     использует функцию <function>trigger_error</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

try {
    $phar = new Phar('myphar.phar');

    $phar['a'] = 'привет';
    $phar->copy('a', 'b');

    echo $phar['b']; // "phar://myphar.phar/b"
} catch (Exception $e) {
    // Обработка ошибок
}

// Обёртка потока эквивалентна приведённому коду.
// Вместо исключения срабатывает ошибка уровня E_WARNING
copy('phar://myphar.phar/a', 'phar//myphar.phar/c');
echo file_get_contents('phar://myphar.phar/c'); // Выведет "привет"

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
