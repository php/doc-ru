<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c8ba91f7e546462dc66c2a11a7eab6f55c93915b Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phardata.decompressfiles" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PharData::decompressFiles</refname>
  <refpurpose>Распаковывает все файлы в текущем zip-архиве</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PharData">
   <modifier>public</modifier> <type>true</type><methodname>PharData::decompressFiles</methodname>
   <void/>
  </methodsynopsis>
  &phar.write;

  <para>
   При распаковке файлов в tar-архиве метод выбрасывает исключение
   <classname>BadMethodCallException</classname>, поскольку сжатие отдельных файлов
   в tar-архиве не поддерживается форматом файла. Для сжатия tar-архива
   пользуются методом <function>PharData::compress</function>.
  </para>
  <para>
   В zip-архиве метод распаковывает все файлы.
   Для сжатия файлов методом bzip2 или zlib потребуется включить модуль,
   который соответствует формату сжатия, — <link linkend="ref.bzip2">bzip2</link>
   или <link linkend="ref.zlib">zlib</link>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод выбрасывает исключение <classname>BadMethodCallException</classname>,
   если модуль <link linkend="ref.zlib">zlib</link> недоступен,
   или если хотя бы один файл сжат методом bzip2, а модуль <link linkend="ref.bzip2">bzip2</link>
   не включили.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример распаковки всех файло в zip-архиве методом <function>PharData::decompressFiles</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$p = new PharData('/path/to/my.zip');

$p['myfile.txt'] = 'hi';
$p['myfile2.txt'] = 'hi';

$p->compressFiles(Phar::GZ);
foreach ($p as $file) {
    var_dump($file->getFileName());
    var_dump($file->isCompressed());
    var_dump($file->isCompressed(Phar::BZ2));
    var_dump($file->isCompressed(Phar::GZ));
}

$p->decompressFiles();
foreach ($p as $file) {
    var_dump($file->getFileName());
    var_dump($file->isCompressed());
    var_dump($file->isCompressed(Phar::BZ2));
    var_dump($file->isCompressed(Phar::GZ));
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(10) "myfile.txt"
int(4096)
bool(false)
bool(true)
string(11) "myfile2.txt"
int(4096)
bool(false)
bool(true)
string(10) "myfile.txt"
bool(false)
bool(false)
bool(false)
string(11) "myfile2.txt"
bool(false)
bool(false)
bool(false)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::getCompressedSize</function></member>
    <member><function>PharFileInfo::isCompressed</function></member>
    <member><function>PharFileInfo::compress</function></member>
    <member><function>PharFileInfo::decompress</function></member>
    <member><function>Phar::canCompress</function></member>
    <member><function>Phar::isCompressed</function></member>
    <member><function>PharData::compressFiles</function></member>
    <member><function>Phar::getSupportedCompression</function></member>
    <member><function>PharData::compress</function></member>
    <member><function>PharData::decompress</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
