<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28046efaba656e158bdf45a2585c23a339943869 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="phardata.copy" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>PharData::copy</refname>
  <refpurpose>Скопировать файл из tar/zip-архива в новый файл внутри него же</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PharData::copy</methodname>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
  </methodsynopsis>

  <para>
   Копирует файл из tar/zip-архива в новый файл внутри него же.
   Это объектно-ориентированная альтернатива для <function>copy</function> с
   потоковой обёрткой phar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true; в случае успешного выполнения. Но лучше использовать механизм перехвата исключений для контроля успешности.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выбрасывает исключение <classname>UnexpectedValueException</classname>, если копируемый
   файл не отсутствует, новый файл уже существует, запись запрещена или возникли проблемы
   с открытием чтением исходного файла. В случае проблем с записью на диск бросается
   исключение <classname>PharException</classname>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>PharData::copy</function></title>
    <para>
     В примере показано использование <function>PharData::copy</function> и
     аналог с использованием потоковой обёртки. Главное различие между
     этими подходами - обработка ошибок. Все методы PharData выбрасывают исключения,
     тогда как потоковые обёртки используют функцию <function>trigger_error</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $phar = new PharData('myphar.tar');
    $phar['a'] = 'hi';
    $phar->copy('a', 'b');
    echo $phar['b']; // выводит "phar://myphar.tar/b"
} catch (Exception $e) {
    // Обработка ошибок
}

// Аналог с использованием потоковых обёрток.
// В случае проблем вместо исключения вызывается ошибка уровня E_WARNINGS
copy('phar://myphar.tar/a', 'phar//myphar.tar/c');
echo file_get_contents('phar://myphar.tar/c'); // выводит "hi"
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
