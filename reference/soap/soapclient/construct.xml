<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e64ea89bbe0bd2cc28d48adfb3723f9ed5720fd1 Maintainer: mch Status: ready -->
<!-- $Revision$ -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="soapclient.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapClient::__construct</refname>
  <refpurpose>Конструктор SoapClient</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>SoapClient::__construct</methodname>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>wsdl</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Конструктор создаёт объекты <classname>SoapClient</classname>
   в режиме <literal>WSDL</literal> или <literal>не-WSDL</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       URI файла <literal>WSDL</literal> или &null;, если
       работа происходит в режиме <literal>не-WSDL</literal>.
      </para>
      <note>
       <para>
        Во время разработки кеширование WSDL можно отключить,
        используя настройку <literal>soap.wsdl_cache_ttl</literal> в &php.ini;,
        иначе изменения, сделанные в WSDL файле, не будут иметь эффекта
        до тех пор, пока не истечёт время, указанное в <literal>soap.wsdl_cache_ttl</literal>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Массив настроек. Если работа происходит в режиме WSDL, то этот параметр необязательный.
       Если в не-WSDL режиме, то должны быть установлены опции
       <literal>location</literal> и <literal>uri</literal>,
       где <literal>location</literal> - URL сервера SOAP, к которому отправляется запрос, а
       <literal>uri</literal> - целевое пространство имён SOAP-сервиса.
      </para>
      <para>
       Опции <literal>style</literal> и <literal>use</literal>
       используются только в не-WSDL режиме. В режиме WSDL они поступают из WSDL-файла.
      </para>
      <para>
       Опция <literal>soap_version</literal> должна быть равна
       либо <constant>SOAP_1_1</constant>, либо <constant>SOAP_1_2</constant>,
       чтобы использовать соответственно SOAP 1.1 или 1.2. Если параметр пропущен,
       то используется 1.1.
      </para>
      <para>
       Для HTTP-аутентификации могут быть использованы опции
       <literal>login</literal> и <literal>password</literal> для предоставления учётных данных.
       Для реализации HTTP-соединения через прокси-сервер доступны настройки
       <literal>proxy_host</literal>, <literal>proxy_port</literal>,
       <literal>proxy_login</literal> и <literal>proxy_password</literal>.
       Для аутентификации сертификата клиента HTTPS используются
       опции <literal>local_cert</literal> и <literal>passphrase</literal>.
       Аутентификация может быть предоставлена в опции <literal>authentication</literal>.
       Метод аутентификации может быть
       <constant>SOAP_AUTHENTICATION_BASIC</constant> (по умолчанию) или
       <constant>SOAP_AUTHENTICATION_DIGEST</constant>.
      </para>
      <para>
       Опция <literal>compression</literal> позволяет использовать
       сжатие запросов и ответов HTTP SOAP.
      </para>
      <para>
       Опция <literal>encoding</literal> определяет внутреннюю кодировку.
       Опция не меняет кодировку SOAP-запросов (она всегда utf-8),
       но преобразует строки в неё.
      </para>
      <para>
       Опция <literal>trace</literal> включает отслеживание запроса и в случае возникновения ошибки
       можно получить обратную трассировку. По умолчанию имеет значение &false;.
      </para>
      <para>
       Опция <literal>classmap</literal> может использоваться для сопоставления
       некоторых WSDL-типов с PHP-классами. Опция должна представлять собой массив,
       в качестве ключей которого указаны WSDL-типы, а в качестве значений - имена классов PHP.
      </para>
      <para>
       Установленная булевая опция <literal>trace</literal>
       позволяет использовать следующие методы:
       <link linkend="soapclient.getlastrequest">
        SoapClient->__getLastRequest</link>,
       <link linkend="soapclient.getlastrequestheaders">
        SoapClient->__getLastRequestHeaders</link>,
       <link linkend="soapclient.getlastresponse">
        SoapClient->__getLastResponse</link> и
       <link linkend="soapclient.getlastresponseheaders">
        SoapClient->__getLastResponseHeaders</link>.
      </para>
      <para>
       Опция <literal>exceptions</literal> принимает логическое значение, определяющее,
       будут ли SOAP-ошибки бросать исключения типа <link linkend="soapfault.construct">
       SoapFault</link>.
      </para>
      <para>
       Опция <literal>connection_timeout</literal> определяет тайм-аут в секундах
       для соединения с SOAP-сервисом. Опция не устанавливает тайм-аут для сервисов с
       медленными ответами. Для ограничения времени ожидания вызовов используется
       <link linkend="ini.default-socket-timeout">default_socket_timeout</link>.
      </para>
      <para>
       Опция <literal>typemap</literal> является массивом сопоставления типов.
       Массив сопоставления типов - это массив с ключами <literal>type_name</literal>,
       <literal>type_ns</literal> (URI пространства имён), <literal>from_xml</literal>
       (функция обратного вызова принимает один строковый параметр) и
       <literal>to_xml</literal> (функция обратного вызова принимает объект в качестве параметра).
      </para>
      <para>
       Опция <literal>cache_wsdl</literal> принимает одно из значений:
       <constant>WSDL_CACHE_NONE</constant>,
       <constant>WSDL_CACHE_DISK</constant>,
       <constant>WSDL_CACHE_MEMORY</constant> или
       <constant>WSDL_CACHE_BOTH</constant>.
      </para>
      <para>
       Опция <literal>user_agent</literal> определяет строку для использования
       в заголовке <literal>User-Agent</literal>.
      </para>
      <para>
       Опция <literal>stream_context</literal> - это <type>resource</type> для
       <link linkend="context">context</link>.
      </para>
      <para>
       Опция <literal>features</literal> является битовой маской
       <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant>,
       <constant>SOAP_USE_XSI_ARRAY_TYPE</constant>,
       <constant>SOAP_WAIT_ONE_WAY_CALLS</constant>.
      </para>
      <para>
       Опция <literal>keep_alive</literal> является логическим значением, определяющим,
       какой заголовок отправлять: <literal>Connection: Keep-Alive</literal> или
       <literal>Connection: close</literal>.
      </para>
      <para>
       Опция <literal>ssl_method</literal> должна быть равной
       <constant>SOAP_SSL_METHOD_TLS</constant>,
       <constant>SOAP_SSL_METHOD_SSLv2</constant>,
       <constant>SOAP_SSL_METHOD_SSLv3</constant> или
       <constant>SOAP_SSL_METHOD_SSLv23</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <methodname>SoapClient::SoapClient</methodname> генерирует ошибку
   <constant>E_ERROR</constant>, если опции <literal>location</literal> и
   <literal>uri</literal> не передаются в не-WSDL режиме.
  </para>
  <para>
   Исключение <classname>SoapFault</classname> будет выбрасываться, если
   <parameter>wsdl</parameter> URI не может быть загружен.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>SoapClient::SoapClient</function></title>
    <programlisting role="php">
     <![CDATA[
<?php

$client = new SoapClient("some.wsdl");

$client = new SoapClient("some.wsdl", array('soap_version'   => SOAP_1_2));

$client = new SoapClient("some.wsdl", array('login'          => "some_name",
                                            'password'       => "some_password"));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080,
                                            'proxy_login'    => "some_name",
                                            'proxy_password' => "some_password"));

$client = new SoapClient("some.wsdl", array('local_cert'     => "cert_key.pem"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/",
                                     'style'    => SOAP_DOCUMENT,
                                     'use'      => SOAP_LITERAL));

$client = new SoapClient("some.wsdl",
  array('compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP));

$client = new SoapClient("some.wsdl", array('encoding'=>'ISO-8859-1'));

class MyBook {
    public $title;
    public $author;
}

$client = new SoapClient("books.wsdl", array('classmap' => array('book' => "MyBook")));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
