<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e587d0655e426f97b3fcb431453da5030e743b23 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.types.object">
 <title>Объекты</title>

 <sect2 xml:id="language.types.object.init">
  <title>Инициализация объекта</title>

  <para>
   Новые объекты создают выражением
   <literal>new</literal>, которое создаёт в переменной экземпляр класса:
  </para>

  <example>
   <title>Создание объекта</title>
   <programlisting role="php">
<![CDATA[
<?php

class foo
{
    function do_foo()
    {
        echo "Код foo.";
    }
}

$bar = new foo();
$bar->do_foo();

?>
]]>
   </programlisting>
  </example>

  <simpara>
   Полное рассмотрение производит раздел «<link linkend="language.oop5">Классы и объекты</link>».
  </simpara>

 </sect2>

 <sect2 xml:id="language.types.object.casting">
  <title>Преобразование в объект</title>

  <para>
   Преобразование типа <type>object</type> в тип <type>object</type> не изменит тип значения.
   Объект не изменится при преобразовании значения с типом <type>object</type> в тип <type>object</type>.
   При преобразовании значения другого типа
   в <type>object</type> PHP создаёт новый экземпляр встроенного класса <classname>stdClass</classname>.
   Новый экземпляр будет пустым, если значение равнялось &null;.
   Массивы преобразовываются в тип <type>object</type> с именами полей
   как у ключей массива и теми же значениями.
   Обратите внимание, что до PHP 7.2.0 при таком преобразовании доступ к числовым ключам
   появляется только при итерации объекта.
  </para>

  <example>
   <title>Приведение к объекту</title>
   <programlisting role="php">
<![CDATA[
<?php

$obj = (object) array('1' => 'foo');

var_dump(isset($obj->{'1'})); // Выводит 'bool(true)'

// Начиная с PHP 8.1 вызов функции key() на объектах устарел
var_dump(key($obj)); // Выводит 'string(1) "1"'

?>
]]>
   </programlisting>
  </example>

  <para>
   Остальные значения при преобразовании PHP поместит
   в переменную-член объекта с названием <literal>scalar</literal> с исходным типом значения.
  </para>

  <example>
   <title>Преобразование в объект через приведение типа <literal>(object)</literal></title>
   <programlisting role="php">
<![CDATA[
<?php

$obj = (object) 'Привет';
echo $obj->scalar;  // Выводит 'Привет'

?>
]]>
   </programlisting>
  </example>

 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
