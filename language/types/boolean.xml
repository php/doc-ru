<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 161dde4fe721309398dd324edbf02aec409f127b Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.types.boolean">
 <title>Логические значения</title>

 <simpara>
  У логического типа (<type>bool</type>) есть только два значения
  и они выражают истинность значения.
  Он может быть либо &true;, либо &false;.
 </simpara>

 <sect2 xml:id="language.types.boolean.syntax">
  <title>Синтаксис</title>
  <para>
   Чтобы задать логический литерал <type>bool</type>, указывают константы &true; или
   &false;. Они обе регистронезависимы.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

$foo = True; // Присвоить переменной $foo значение TRUE

?>
]]>
   </programlisting>
  </informalexample>

  <para>
   Обычно, некоторый <link linkend="language.operators">оператор</link>
   возвращает логическое значение <type>bool</type>, которое потом передаётся
   <link linkend="language.control-structures">управляющей конструкции</link>.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

// == это оператор, который проверяет
// эквивалентность и возвращает boolean
if ($action == "show_version") {
    echo "Версия 1.23";
}

// это необязательно...
if ($show_separators == TRUE) {
    echo "<hr>\n";
}

// ...потому что следующее имеет тот же самый смысл:
if ($show_separators) {
    echo "<hr>\n";
}

?>
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="language.types.boolean.casting">
  <title>Преобразование в логический тип</title>

  <simpara>
   Чтобы явно преобразовать значение в логическое <type>bool</type>,
   пользуются приведением <literal>(bool)</literal>.
   Обычно это не нужно, поскольку значение в логическом контексте
   автоматически интерпретируется как значение логического типа (<type>bool</type>).
   Дополнительную информацию даёт раздел
   «<link linkend="language.types.type-juggling">Манипуляции с типами</link>».
  </simpara>

  <para>
   При преобразовании в логическое значение <type>bool</type>,
   следующие значения рассматриваются как
   &false;:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     само значение <link linkend="language.types.boolean">boolean</link> &false;
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.integer">integer</link> <literal>0</literal> (ноль)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.float">float</link> <literal>0.0</literal> (ноль)
     и <literal>-0.0</literal> (минус ноль)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     пустая <link linkend="language.types.string">строка</link> <literal>""</literal> и
     <link linkend="language.types.string">строка</link> <literal>"0"</literal>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.array">массив</link> без элементов
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     особый тип <link linkend="language.types.null">NULL</link> (включая
     неустановленные переменные)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     внутренние объекты, которые перегружают своё поведение приведения к логическому типу.
     Например: объекты <link linkend="ref.simplexml">SimpleXML</link>,
     созданные из пустых элементов без атрибутов.
    </simpara>
   </listitem>
  </itemizedlist>

  <para>
   Все остальные значения считаются &true;
   (включая <link linkend="language.types.resource">resource</link>
   и <constant>NAN</constant>).
  </para>

  <warning>
   <simpara>
    Число <literal>-1</literal> рассматривается как &true;, как и любое другое ненулевое
    (отрицательное или положительное) число!
   </simpara>
  </warning>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump((bool) "");        // bool(false)
var_dump((bool) "0");       // bool(false)
var_dump((bool) 1);         // bool(true)
var_dump((bool) -2);        // bool(true)
var_dump((bool) "foo");     // bool(true)
var_dump((bool) 2.3e5);     // bool(true)
var_dump((bool) array(12)); // bool(true)
var_dump((bool) array());   // bool(false)
var_dump((bool) "false");   // bool(true)

?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
