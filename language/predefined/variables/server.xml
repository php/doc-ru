<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a124543dd3f6b1e5567b07420d23899e582514dc Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<refentry role="variable" xml:id="reserved.variables.server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>$_SERVER</refname>
  <refpurpose>Информация о сервере и среде исполнения</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   Переменная <varname>$_SERVER</varname> — массив (&array;), который содержит информацию
   о заголовках, путях и расположениях скриптов.
   Записи в этом массиве создаются веб-сервером, поэтому нет гарантии, что каждый веб-сервер будет
   предоставлять каждую из этих переменных; серверы иногда опускают отдельные переменные или предоставляют другие,
   которые здесь не указали.
   Однако большинство из этих переменных учтены в спецификации
   <link xlink:href="&url.rfc;3875">CGI/1.1</link> и, скорее всего, определятся.
  </para>
  <note>
   <simpara>
    При запуске PHP <link linkend="features.commandline">в командной строке</link>
    бо́льшая часть этих записей недоступна или не содержит никакого значения.
   </simpara>
  </note>
  <para>
   В дополнение к перечисленным ниже элементам PHP создаст дополнительные элементы
   со значениями из заголовков запросов. Элементам присваивается название с префиксом <literal>HTTP_</literal>,
   за которым идёт название заголовка, написанное с заглавной буквы и с подчёркиванием вместо дефиса.
   Например, заголовок <literal>Accept-Language</literal> будет доступен как <code>$_SERVER['HTTP_ACCEPT_LANGUAGE']</code>.
  </para>
 </refsect1>

 <refsect1 role="indices">
  &reftitle.indices;

  <para>
   <variablelist>
    <varlistentry>
     <term>'<varname>PHP_SELF</varname>'</term>
     <listitem>
      <simpara>
       Название файла скрипта, который выполняется в текущий момент, относительно
       корня документов. Например, переменная <varname>$_SERVER['PHP_SELF']</varname> в скрипте
       по адресу <filename>http://example.com/foo/bar.php</filename>
       примет значение <filename>/foo/bar.php</filename>.
       Константа <link linkend="language.constants.magic">__FILE__</link>
       содержит полный путь и название файла текущего (то есть
       подключённого) файла.
      </simpara>
      <simpara>
       Переменная содержит название скрипта,
       если PHP запустили в командной строке.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argv">argv</link>'</term>
     <listitem>
      <simpara>
       Массив аргументов, которые передали скрипту. При запуске скрипта
       в командой строке это даёт C-подобный доступ
       к параметрам командной строки. При вызове через метод GET
       этот массив содержит строку запроса.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argc">argc</link>'</term>
     <listitem>
      <simpara>
       Содержит количество параметров, которые передали скрипту,
       если скрипт запустили в командной строке.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>GATEWAY_INTERFACE</varname>'</term>
     <listitem>
      <simpara>
       Содержит используемую сервером версию спецификации CGI-интерфейса;
       например <literal>'CGI/1.1'</literal>..
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADDR</varname>'</term>
     <listitem>
      <simpara>
       IP-адрес сервера, по которому выполняется текущий скрипт.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_NAME</varname>'</term>
     <listitem>
      <simpara>
       Имя хоста, на котором выполняется текущий скрипт.
       Переменная содержит имя, которое определили для виртуального хоста,
       если скрипт выполняется на виртуальном хосте.
      </simpara>
      <note>
       <simpara>
        В Apache 2 потребуется установить директивы <literal>UseCanonicalName = On</literal>
        и <literal>ServerName</literal>,
        иначе значение отразит имя хоста, которое предоставил
        клиент и которое подделывают злоумышленники.
        Небезопасно полагаться на это значение в контексте, который требует безопасности.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SOFTWARE</varname>'</term>
     <listitem>
      <simpara>
       Строка идентификации сервера, указанная в заголовках,
       когда происходит ответ на запрос.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_PROTOCOL</varname>'</term>
     <listitem>
      <simpara>
       Имя и версия информационного протокола, через который
       запросили страницу; например <literal>'HTTP/1.0'</literal>;
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_METHOD</varname>'</term>
     <listitem>
      <simpara>
       Метод, которым запросили страницу; например <literal>'GET'</literal>,
       <literal>'HEAD'</literal>, <literal>'POST'</literal>, <literal>'PUT'</literal>.
      </simpara>
      <note>
       <para>
        При запросе методом <literal>HEAD</literal>
        PHP-скрипт завершается после отправки заголовков — после
        любого вывода без буферизации вывода.
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_TIME</varname>'</term>
     <listitem>
      <simpara>
       Метка времени начала запроса.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_TIME_FLOAT</varname>'</term>
     <listitem>
      <simpara>
       Метка времени начала запроса с точностью до микросекунд.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>QUERY_STRING</varname>'</term>
     <listitem>
      <simpara>
       Строка запроса, если адрес содержит такую, через которую получили доступ к странице.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>DOCUMENT_ROOT</varname>'</term>
     <listitem>
      <simpara>
       Директория корня документов, в которой выполняется текущий скрипт,
       в точности та, которую указали в конфигурационном файле сервера.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTPS</varname>'</term>
     <listitem>
      <simpara>
       Принимает непустое значение, если запрос выполнили через протокол HTTPS.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_ADDR</varname>'</term>
     <listitem>
      <simpara>
       IP-адрес, с которого пользователь просматривает текущую страницу.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_HOST</varname>'</term>
     <listitem>
      <simpara>
       Удалённый хост, с которого пользователь просматривает текущую
       страницу. Обратный поиск DNS основан на значении переменной
       <varname>REMOTE_ADDR</varname>.
      </simpara>
      <note>
       <simpara>
        Сервер потребуется настроить, чтобы создавать эту переменную.
        Например, для веб-сервера Apache потребуется указать директиву
        <literal>HostnameLookups On</literal> в файле &httpd.conf;, чтобы эта
        переменная создавалась. Смотрите также описание функции <function>gethostbyaddr</function>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_PORT</varname>'</term>
     <listitem>
      <simpara>
       Порт на удалённой машине, на котором устанавливается соединение с сервером.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
       Аутентифицированный пользователь.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REDIRECT_REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
       Аутентифицированный пользователь, если запрос перенаправлен изнутри.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_FILENAME</varname>'</term>
     <listitem>
      <para>
       Абсолютный путь к исполняемому скрипту.
       <note>
        <para>
         Переменная <varname>$_SERVER['SCRIPT_FILENAME']</varname>
         содержит относительный путь, который указал пользователь,
         если скрипт запустили в командной строке (CLI)
         по относительному пути наподобие <filename>file.php</filename>
         или <filename>../file.php</filename>.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADMIN</varname>'</term>
     <listitem>
      <simpara>
       Значение директивы SERVER_ADMIN веб-сервера Apache,
       которое указали в конфигурационном файле сервера. При запуске скрипта
       на виртуальном хосте значение
       определяется для этого виртуального хоста.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_PORT</varname>'</term>
     <listitem>
      <simpara>
       Порт, на котором сервер принимает запросы.
       При стандартной конфигурации сервера переменная содержит значение <literal>'80'</literal>;
       для соединений по протоколу SSL, например, значение переменной соответствует
       порту, который определили для защищённых HTTP-соединений.
      </simpara>
      <note>
       <simpara>
        На веб-сервере Apache 2 потребуется установить директивы
        установить <literal>UseCanonicalName = On</literal>
        и <literal>UseCanonicalPhysicalPort = On</literal>, чтобы получить реальный физический порт,
        иначе значение подделают и переменная не вернёт реальное значение физического порта.
        В контекстах, которые требуют усиленной безопасности,
        полагаться на это значение небезопасно.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SIGNATURE</varname>'</term>
     <listitem>
      <simpara>
       Строка, которая содержит версию сервера и имя виртуального хоста. Эта информация
       добавляются на страницы, которые генерирует сервер, если в конфигурации сервера
       включили директиву, которая отвечает за добавление такой строки.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_TRANSLATED</varname>'</term>
     <listitem>
      <simpara>
       Путь к текущему скрипту после выполнения сервером сопоставления virtual-to-real.
       Путь строится на основе файловой системы, а не на основе корневого каталога сервера.
      </simpara>
      <note>
       <simpara>
        Пользователи Apache 2 включают директиву
        <literal>AcceptPathInfo = On</literal> в конфигурационном файле
        <filename>httpd.conf</filename>, чтобы определить значение переменной <envar>PATH_INFO</envar>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_NAME</varname>'</term>
     <listitem>
      <simpara>
       Путь к текущему исполняемому скрипту. Переменная полезна на страницах,
       которым требуется указывать на самих себя.
       Полный путь и название текущего включаемого файла
       содержит константа <link linkend="language.constants.magic">__FILE__</link>.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_URI</varname>'</term>
     <listitem>
      <simpara>
       URI-идентификатор наподобие '<literal>/index.html</literal>',
       который указали для доступа к странице.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_DIGEST</varname>'</term>
     <listitem>
      <simpara>
       При HTTP-аутентификации по дайджесту переменной присваивается
       значение заголовка 'Authorization', который отправил клиент и которое затем
       проверяют.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_USER</varname>'</term>
     <listitem>
      <simpara>
       При выполнении HTTP-аутентификации переменной присваивается
       имя пользователя, которое предоставил пользователь.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_PW</varname>'</term>
     <listitem>
      <simpara>
       При выполнении HTTP-аутентификации переменной присваивается
       пароль, которое предоставил пользователь.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>AUTH_TYPE</varname>'</term>
     <listitem>
      <simpara>
       При выполнении HTTP-аутентификации переменной присваивается
       тип аутентификации, который сервер устанавливает на основе клиентских данных.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       Содержит информацию о пути, которую предоставил клиент. Значение идёт
       после фактического названия скрипта, но до строки запроса, если строку запроса указали.
       Переменная <varname>$_SERVER['PATH_INFO']</varname> получит значение
       <literal>/some/stuff</literal>,
       если текущий скрипт запросили по URL-адресу наподобие
       <filename>http://www.example.com/php/path_info.php/some/stuff?foo=bar</filename>.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>ORIG_PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       Исходное значение переменной '<varname>PATH_INFO</varname>' перед
       обработкой PHP.
      </simpara>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.server.basic">
    <title>Пример вывода значения переменной <varname>$_SERVER</varname></title>
    <programlisting role="php">
<![CDATA[
<?php

echo $_SERVER['SERVER_NAME'];

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
www.example.com
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="book.filter">Фильтрация данных</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
