<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e347a6856ebf825de819b7ca28c510b961a33e07 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<refentry xml:id="generator.send" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Generator::send</refname>
  <refpurpose>Передать значение в генератор</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Generator::send</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Передача заданного значения в генератор как результат текущего выражения &yield;
   и возобновление его работы.
  </para>
  <para>
   Если генератор ещё не дошёл до первого вызова оператора &yield;, он выполнится до
   момента первого вызова &yield;, прежде чем передаст в него значение.
   Так что нет необходимости вызывать генератор с помощью <methodname>Generator::next</methodname>
   перед вызовом этого метода (как это делается в Python).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      Значение, которое отправляется в генератор. Это значение будет текущим
      возвращаемым значением выражения &yield; генератора.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает сгенерированное значение.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Использование <methodname>Generator::send</methodname> для внедрения значений</title>
    <programlisting role="php">
<![CDATA[
<?php
function printer() {
    echo "I'm printer!".PHP_EOL;
    while (true) {
        $string = yield;
        echo $string.PHP_EOL;
    }
}

$printer = printer();
$printer->send('Hello world!');
$printer->send('Bye world!');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
I'm printer!
Hello world!
Bye world!
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
