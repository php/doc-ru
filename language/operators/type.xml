<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 43d07782b514d0c7a8487f2c74063739f302df8d Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.type">
 <title>Оператор проверки типа</title>
 <titleabbrev>Проверка типа</titleabbrev>
 <para>
  Оператор <literal>instanceof</literal> определяет,
  относится ли сохранённый в PHP-переменной объект
  к конкретному <link linkend="language.oop5.basic.class">классу</link>.
  <example>
   <title>Пример использования оператора <literal>instanceof</literal> с классами</title>
   <programlisting role="php">
<![CDATA[
<?php

class MyClass {}

class NotMyClass {}

$a = new MyClass();

var_dump($a instanceof MyClass);
var_dump($a instanceof NotMyClass);

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(false)
]]>
   </screen>
  </example>
 </para>
 <para>
  Оператор <literal>instanceof</literal> также определяет,
  принадлежит ли сохранённый в переменной объект к классу-наследнику:
  <example>
   <title>Использование оператора <literal>instanceof</literal> с наследуемыми классами</title>
   <programlisting role="php">
<![CDATA[
<?php

class ParentClass {}

class MyClass extends ParentClass {}

$a = new MyClass();

var_dump($a instanceof MyClass);
var_dump($a instanceof ParentClass);

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </para>
 <para>
  Для проверки <emphasis>непринадлежности</emphasis> объекта классу,
  указывают <link linkend="language.operators.logical">логический оператор
  <literal>not</literal>
  </link>.
  <example>
   <title>Использование оператора <literal>instanceof</literal> для проверки того, что объект —
   это <emphasis>не</emphasis> экземпляр класса</title>
   <programlisting role="php">
<![CDATA[
<?php

class MyClass {}

$a = new MyClass();
var_dump(!($a instanceof stdClass));

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
]]>
   </screen>
  </example>
 </para>
 <para>
  Наконец, оператор <literal>instanceof</literal> также проверяет,
  реализует ли объект <link linkend="language.oop5.interfaces">интерфейс</link>:
  <example>
   <title>Использование оператора <literal>instanceof</literal> с интерфейсами</title>
   <programlisting role="php">
<![CDATA[
<?php

interface MyInterface {}

class MyClass implements MyInterface {}

$a = new MyClass();

var_dump($a instanceof MyClass);
var_dump($a instanceof MyInterface);

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </para>
 <para>
  Хотя оператор <literal>instanceof</literal> обычно указывают с буквальным именем класса,
  его можно также указывать с переменной объекта или строковой переменной:
  <example>
   <title>Использование оператора <literal>instanceof</literal> с другими переменными</title>
<programlisting role="php">
<![CDATA[
<?php

interface MyInterface {}

class MyClass implements MyInterface {}

$a = new MyClass();
$b = new MyClass();
$c = 'MyClass';
$d = 'NotMyClass';
var_dump($a instanceof $b); // $b — объект класса MyClass
var_dump($a instanceof $c); // $c — строка 'MyClass'
var_dump($a instanceof $d); // $d — строка 'NotMyClass'

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(true)
bool(false)
]]>
   </screen>
  </example>
 </para>
 <para>
  Оператор instanceof не выбрасывает никаких ошибок, если проверяемая переменная —
  не объект, он просто возвращает &false;. Константы, однако,
  не были разрешены до PHP 7.3.0.
  <example>
   <title>Пример использования оператора <literal>instanceof</literal> для проверки других переменных</title>
   <programlisting role="php">
<![CDATA[
<?php

$a = 1;
$b = NULL;
$c = imagecreate(5, 5);
var_dump($a instanceof stdClass); // $a — целое типа integer
var_dump($b instanceof stdClass); // $b — NULL
var_dump($c instanceof stdClass); // $c — значение типа resource
var_dump(FALSE instanceof stdClass);

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
bool(false)
bool(false)
PHP Fatal error:  instanceof expects an object instance, constant given
]]>
   </screen>
  </example>
 </para>
 <para>
  Начиная с PHP 7.3.0 константы разрешены в левой части оператора <literal>instanceof</literal>.
  <example>
   <title>Использование <literal>instanceof</literal> для проверки констант</title>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(FALSE instanceof stdClass);

]]>
   </programlisting>
   &example.outputs.73;
   <screen>
<![CDATA[
bool(false)
]]>
   </screen>
  </example>
 </para>
 <para>
  Начиная с PHP 8.0.0 <literal>instanceof</literal> можно использовать с произвольными выражениями.
  Выражение должно быть заключено в круглые скобки и быть строкой (<type>string</type>).
  <example>
   <title>Пример использования <literal>instanceof</literal> с произвольным выражением</title>
   <programlisting role="php">
<![CDATA[
<?php

class ClassA extends \stdClass {}
class ClassB extends \stdClass {}
class ClassC extends ClassB {}
class ClassD extends ClassA {}

function getSomeClass(): string
{
    return ClassA::class;
}

var_dump(new ClassA instanceof ('std' . 'Class'));
var_dump(new ClassB instanceof ('Class' . 'B'));
var_dump(new ClassC instanceof ('Class' . 'A'));
var_dump(new ClassD instanceof (getSomeClass()));

]]>
   </programlisting>
   &example.outputs.8;
   <screen>
<![CDATA[
bool(true)
bool(true)
bool(false)
bool(true)
]]>
   </screen>
  </example>
 </para>
 <simpara>
  Оператор <literal>instanceof</literal> аналогичен функции <function>is_a</function>.
 </simpara>
 <sect2 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>is_a</function></member>
   </simplelist>
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
