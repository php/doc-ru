<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 52407313885d27a4e891e08dd2e2481bcc39e244 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.logical">
 <title>Логические операторы</title>
 <table>
  <title>Логические операторы</title>
  <tgroup cols="3">
   <thead>
    <row>
     <entry>Пример</entry>
     <entry>Название</entry>
     <entry>Результат</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>$a and $b</entry>
     <entry>И</entry>
     <entry>&true;, если и <varname>$a</varname>, и <varname>$b</varname> &true;.</entry>
    </row>
    <row>
     <entry>$a or $b</entry>
     <entry>Или</entry>
     <entry>&true;, если или <varname>$a</varname>, или <varname>$b</varname> &true;.</entry>
    </row>
    <row>
     <entry>$a xor $b</entry>
     <entry>Исключающее или</entry>
     <entry>&true;, если <varname>$a</varname>, или <varname>$b</varname> &true;, но не оба.</entry>
    </row>
    <row>
     <entry>! $a</entry>
     <entry>Отрицание</entry>
     <entry>&true;, если <varname>$a</varname> не &true;.</entry>
    </row>
    <row>
     <entry>$a &amp;&amp; $b</entry>
     <entry>И</entry>
     <entry>&true;, если и <varname>$a</varname>, и <varname>$b</varname> &true;.</entry>
    </row>
    <row>
     <entry>$a || $b</entry>
     <entry>Или</entry>
     <entry>&true;, если или <varname>$a</varname>, или <varname>$b</varname> &true;.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 <simpara>
  Смысл двух разных вариантов для операторов and и or в том, что
  они работают с разным приоритетом (смотрите таблицу
  <link linkend="language.operators.precedence">Приоритет выполнения операторов</link>).
 </simpara>
 <example>
  <title>Объяснение логических операторов</title>
  <programlisting role="php">
<![CDATA[
<?php

// --------------------
// foo() никогда не будет вызвана, т. к. эти операторы являются шунтирующими (short-circuit)

$a = (false && foo());
$b = (true || foo());
$c = (false and foo());
$d = (true or foo());

// --------------------
// "||" имеет больший приоритет, чем "or"

// Результат выражения (false || true) присваивается переменной $e
// Действует как: ($e = (false || true))
$e = false || true;

// Константа false присваивается $f, а затем значение true игнорируется
// Действует как: (($f = false) or true)
$f = false or true;

var_dump($e, $f);

// --------------------
// "&&" имеет больший приоритет, чем "and"

// Результат выражения (true && false) присваивается переменной $g
// Действует как: ($g = (true && false))
$g = true && false;

// Константа true присваивается $h, а затем значение false игнорируется
// Действует как: (($h = true) and false)
$h = true and false;

var_dump($g, $h);

?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
bool(true)
bool(false)
bool(false)
bool(true)
]]>
  </screen>
 </example>
</sect1>
