<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 16934048f79c6e117cd16a23c09c1b2ea502e284 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.execution">
 <title>Операторы выполнения</title>
 <titleabbrev>Выполнение</titleabbrev>
 <para>
  PHP поддерживает один оператор выполнения: обратные машинописные апострофы, или обратные кавычки, — <literal>``</literal>.
  Обратите внимание, что это не одинарные кавычки! PHP попытается выполнить строку
  в обратных апострофах как консольную команду; PHP вернёт
  данные вывода, а не просто сбросит данные в поток вывода;
  вывод присваивают переменной. Оператор обратных кавычек работает
  аналогично функции <function>shell_exec</function>.
 </para>
 <para>
  <example>
   <title>Оператор выполнения</title>
   <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php

$output = `ls -al`;
echo "<pre>$output</pre>";

?>
]]>
  </programlisting>
  </example>
 </para>
 <note>
  <para>
  Обратные кавычки недоступны,
  если функцию <function>shell_exec</function> отключили.
  </para>
 </note>
 <note>
  <para>
  В отличие от ряда других языков, обратные кавычки
  не несут отдельного значения внутри строк в двойных кавычках.
  </para>
 </note>
 <sect2 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ref.exec">Функции выполнения программ</link></member>
    <member><function>popen</function></member>
    <member><function>proc_open</function></member>
    <member><link linkend="features.commandline">Работа с PHP из командной строки</link></member>
   </simplelist>
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
