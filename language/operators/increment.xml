<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 43d07782b514d0c7a8487f2c74063739f302df8d Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.increment">
 <title>Операторы инкремента и декремента</title>
 <titleabbrev>Инкремент и декремент</titleabbrev>
 <para>
  PHP поддерживает префиксные и постфиксные операторы инкремента и декремента.
  Эти унарные операторы разрешают увеличивать или уменьшать значение на единицу.
 </para>
 <table>
  <title>Операторы инкремента и декремента</title>
  <tgroup cols="3">
   <thead>
    <row>
     <entry>Пример</entry>
     <entry>Название</entry>
     <entry>Действие</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>++$a</entry>
     <entry>Префиксный инкремент</entry>
     <entry>Увеличивает <varname>$a</varname> на единицу, затем возвращает значение <varname>$a</varname>.</entry>
    </row>
    <row>
     <entry>$a++</entry>
     <entry>Постфиксный инкремент</entry>
     <entry>Возвращает значение <varname>$a</varname>, затем увеличивает <varname>$a</varname> на единицу.</entry>
    </row>
    <row>
     <entry>--$a</entry>
     <entry>Префиксный декремент</entry>
     <entry>Уменьшает <varname>$a</varname> на единицу, затем возвращает значение <varname>$a</varname>.</entry>
    </row>
    <row>
     <entry>$a--</entry>
     <entry>Постфиксный декремент</entry>
     <entry>Возвращает значение <varname>$a</varname>, затем уменьшает <varname>$a</varname> на единицу.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>

 <para>
  Приведём пример простого скрипта:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

echo 'Постфиксный инкремент:', PHP_EOL;
$a = 5;
var_dump($a++);
var_dump($a);

echo 'Префиксный инкремент:', PHP_EOL;
$a = 5;
var_dump(++$a);
var_dump($a);

echo 'Постфиксный декремент:', PHP_EOL;
$a = 5;
var_dump($a--);
var_dump($a);

echo 'Префиксный декремент:', PHP_EOL;
$a = 5;
var_dump(--$a);
var_dump($a);

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Постфиксный инкремент:
int(5)
int(6)
Префиксный инкремент:
int(6)
int(6)
Постфиксный декремент:
int(5)
int(4)
Префиксный декремент:
int(4)
int(4)
]]>
   </screen>
  </informalexample>

  <warning>
   <para>
    Операторы инкремента и декремента не влияют на логические значения (<type>bool</type>).
    Начиная с PHP 8.3.0 вызывается ошибка уровня <constant>E_WARNING</constant>,
    потому что в будущем это будет неявно приведено к значению целого числа (<type>int</type>).
   </para>
   <para>
    Оператор декремента не влияет на значения <type>null</type>.
    Начиная с PHP 8.3.0 вызывается ошибка уровня <constant>E_WARNING</constant>,
    потому что в будущем это будет неявно приведено к значению целого числа (<type>int</type>).
   </para>
   <para>
    Оператор декремента не влияет на не-
    <link linkend="language.types.numeric-strings">числовые строки</link>.
    Начиная с PHP 8.3.0 вызывается ошибка уровня <constant>E_WARNING</constant>,
    потому в будущем будет выбрасываться исключение <classname>TypeError</classname>.
   </para>
  </warning>
  <note>
   <para>
    Внутренние объекты, которые поддерживают перегрузку сложения и/или вычитания,
    могут также быть инкрементированы и/или декрементированы.
    Один такой внутренний объект — это <classname>GMP</classname>.
   </para>
  </note>
 </para>

 <sect2 xml:id="language.operators.increment.string">
  <title>Функция увеличения строки PERL</title>
  <warning>
   <simpara>
    Начиная с PHP 8.3.0 эта функция мягко устарела.
    Вместо этого вызывают функцию <function>str_increment</function>.
   </simpara>
  </warning>

  <para>
   В PHP можно инкрементировать не-
   <link linkend="language.types.numeric-strings">числовую строку</link>.
   Строка  должна быть буквенно-цифровой последовательностью в кодировке ASCII.
   Буквы увеличиваются до следующей буквы, при достижении буквы
   <literal>Z</literal> инкремент переносится в следующий разряд слева.
   Например, выражение <code>$a = 'Z'; $a++;</code> превратит значение переменной <varname>$a</varname>
   в значение <literal>«AA»</literal>.
  </para>

  <example>
   <title>Пример увеличения строки PERL</title>
   <programlisting role="php">
<![CDATA[
<?php

echo '== Буквенные строки ==' . PHP_EOL;
$s = 'W';
for ($n=0; $n<6; $n++) {
    echo ++$s . PHP_EOL;
}
// Буквенно-цифровые строки ведут себя иначе
echo '== Буквенно-цифровые строки ==' . PHP_EOL;
$d = 'A8';
for ($n=0; $n<6; $n++) {
    echo ++$d . PHP_EOL;
}
$d = 'A08';
for ($n=0; $n<6; $n++) {
    echo ++$d . PHP_EOL;
}

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
== Буквенные строки ==
X
Y
Z
AA
AB
AC
== Буквенно-цифровые строки ==
A9
B0
B1
B2
B3
B4
A09
A10
A11
A12
A13
A14
]]>
   </screen>
  </example>

  <warning>
   <para>
    Если буквенно-цифровая строка может быть интерпретирована как
    <link linkend="language.types.numeric-strings">числовая строка</link>,
    она будет приведена к типу <type>int</type> или <type>float</type>.
    Эта проблема встаёт особенно остро со строками, которые выглядят как числа с плавающей точкой,
    записанные в научной нотации.
    Функция <function>str_increment</function> не страдает от эти неявных приведений типов.
   </para>
   <example>
    <title>Буквенно-цифровая строка, преобразованная в число с плавающей точкой</title>
    <programlisting role="php">
<![CDATA[
<?php

$s = "5d9";
var_dump(++$s);
var_dump(++$s);

]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(3) "5e0"
float(6)
]]>
    </screen>
    <para>
     Так происходит потому, что значение <literal>«5e0»</literal> было интерпретировано
     как число с плавающей точкой (<type>float</type>) и приведено к значению <literal>5.0</literal>
     перед началом увеличения.
    </para>
   </example>
  </warning>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
