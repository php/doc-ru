<?xml version="1.0" encoding="utf-8"?>
<!-- Reviewed: no -->
<sect1 xml:id="language.operators.increment">
 <title>Операторы инкремента и декремента</title>
 <para>
  PHP поддерживает префиксные и постфиксные операторы инкремента и декремента
  в стиле C.
 </para>
 <note>
  <simpara>
  Операторы инкремента/декремента влияют только на числа и строки.
  Массивы, объекты, булевы значения и ресурсы не будут изменены.
  Декремент &null; также не даст никакого эффекта, однако инкремент
  даст значение <literal>1</literal>.
  </simpara>
 </note>
 <table>
  <title>Операторы инкремента и декремента</title>
  <tgroup cols="3">
  <thead>
   <row>
   <entry>Пример</entry>
   <entry>Название</entry>
   <entry>Действие</entry>
   </row>
  </thead>
  <tbody>
   <row>
   <entry>++$a</entry>
   <entry>Префиксный инкремент</entry>
   <entry>Увеличивает <varname>$a</varname> на единицу, затем возвращает значение <varname>$a</varname>.</entry>
   </row>
   <row>
   <entry>$a++</entry>
   <entry>Постфиксный инкремент</entry>
   <entry>Возвращает значение <varname>$a</varname>, затем увеличивает <varname>$a</varname> на единицу.</entry>
   </row>
   <row>
   <entry>--$a</entry>
   <entry>Префиксный декремент</entry>
   <entry>Уменьшает <varname>$a</varname> на единицу, затем возвращает значение <varname>$a</varname>.</entry>
   </row>
   <row>
   <entry>$a--</entry>
   <entry>Постфиксный декремент</entry>
   <entry>Возвращает значение <varname>$a</varname>, затем уменьшает <varname>$a</varname> на единицу.</entry>
   </row>
  </tbody>
  </tgroup>
 </table>
 <para>
  Приведём пример простого скрипта:
  <informalexample>
  <programlisting role="php">
<![CDATA[
<?php
echo "<h3>Постфиксный инкремент</h3>";
$a = 5;
echo "Должно быть 5: " . $a++ . "<br />\n";
echo "Должно быть 6: " . $a . "<br />\n";
echo "<h3>Префиксный инкремент</h3>";
$a = 5;
echo "Должно быть 6: " . ++$a . "<br />\n";
echo "Должно быть 6: " . $a . "<br />\n";
echo "<h3>Постфиксный декремент</h3>";
$a = 5;
echo "Должно быть 5: " . $a-- . "<br />\n";
echo "Должно быть 4: " . $a . "<br />\n";
echo "<h3>Префиксный декремент</h3>";
$a = 5;
echo "Должно быть 4: " . --$a . "<br />\n";
echo "Должно быть 4: " . $a . "<br />\n";
?>
]]>
  </programlisting>
  </informalexample>
 </para>
 <para>
  PHP следует соглашениям Perl (в отличие от С) касательно выполнения
  арифметических операций с символьными переменными. Например, в PHP и Perl
  <literal>$a = 'Z'; $a++;</literal> присвоит <literal>$a</literal>
  значение <literal>'AA'</literal>, в то время как в C
  <literal>a = 'Z'; a++;</literal> присвоит <literal>a</literal>
  значение <literal>'['</literal> (ASCII-значение
  <literal>'Z'</literal> равно 90, а ASCII-значение
  <literal>'['</literal> равно 91). Следует учесть, что к
  символьным переменным можно применять операцию инкремента,
  в то время как операцию декремента применять нельзя, кроме того,
  поддерживаются только ASCII-символы (a-z, A-Z и 0-9).
  Попытка инкремента/декремента других символьных переменных не
  будет иметь никакого эффекта, исходная строка останется
  неизменной.
  <example>
  <title>Арифметические операции с символьными переменными</title>
  <programlisting role="php">
<![CDATA[
<?php
echo '== Буквенные строки ==' . PHP_EOL;
$s = 'W';
for ($n=0; $n<6; $n++) {
  echo ++$s . PHP_EOL;
}
// Буквенно-цифровые строки ведут себя по-разному
echo '== Буквенно-цифровые строки ==' . PHP_EOL;
$d = 'A8';
for ($n=0; $n<6; $n++) {
  echo ++$d . PHP_EOL;
}
$d = 'A08';
for ($n=0; $n<6; $n++) {
  echo ++$d . PHP_EOL;
}
?>
]]>
  </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
== Буквенные строки ==
X
Y
Z
AA
AB
AC
== Буквенно-цифровые строки ==
A9
B0
B1
B2
B3
B4
A09
A10
A11
A12
A13
A14
]]>
  </screen>
  </example>
 </para>
 <para>
  Инкрементирование или декрементирование булевых переменных не приводит ни к какому результату.
 </para>
</sect1>
