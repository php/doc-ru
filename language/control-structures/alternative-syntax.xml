<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8208b81cf1129e23e421c81b339aa8dbee653f70 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="control-structures.alternative-syntax"  xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Альтернативный синтаксис управляющих структур</title>
 <?phpdoc print-version-for="control-structures.alternative-syntax"?>
 <para>
  PHP предлагает альтернативный синтаксис для некоторых его
  управляющих структур, а именно: <literal>if</literal>,
  <literal>while</literal>, <literal>for</literal>,
  <literal>foreach</literal> и <literal>switch</literal>.
  В каждом случае основной формой альтернативного синтаксиса является изменение
  открывающей фигурной скобки на двоеточие (:), а закрывающей скобки
  на <literal>endif;</literal>, <literal>endwhile;</literal>,
  <literal>endfor;</literal>, <literal>endforeach;</literal> или
  <literal>endswitch;</literal> соответственно.
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php if ($a == 5): ?>
A равно 5
<?php endif; ?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  В приведённом выше примере, блок HTML "A равно 5" вложен внутрь
  структуры <literal>if</literal>, написанной с альтернативным синтаксисом.
  Блок HTML будет показан только если переменная <varname>$a</varname> равна 5.
 </simpara>
 <para>
  Альтернативный синтаксис также применяется и к <literal>else</literal> и
  <literal>elseif</literal>. Ниже приведена структура
  <literal>if</literal> с <literal>elseif</literal> и <literal>else</literal>
  в альтернативном формате:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
if ($a == 5):
    echo "a равно 5";
    echo "...";
elseif ($a == 6):
    echo "a равно 6";
    echo "!!!";
else:
    echo "a не равно ни 5 ни 6";
endif;
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <note>
  <para>
   Смешивание синтаксиса в одном и том же блоке управления не поддерживается.
  </para>
 </note>
 <warning>
  <para>
   Любой вывод (включая пробельные символы) между выражением <literal>switch</literal>
   и первым <literal>case</literal> приведут к синтаксической ошибке.
   Например, данный код не будет работать:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php switch ($foo): ?>
    <?php case 1: ?>
    ...
<?php endswitch ?>
]]>
   </programlisting>
  </informalexample>
  <para>
   В то же время следующий пример будет работать,
   так как завершающий перевод строки после выражения
   <literal>switch</literal> считается частью закрывающего <literal>?&gt;</literal>
   и следовательно ничего не выводится между
   <literal>switch</literal> и <literal>case</literal>:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php switch ($foo): ?>
<?php case 1: ?>
    ...
<?php endswitch ?>
]]>
   </programlisting>
  </informalexample>
 </warning>
 <para>
  Смотрите также  <link linkend="control-structures.while">while</link>,
  <link linkend="control-structures.for">for</link> и <link
  linkend="control-structures.if">if</link> для дальнейших примеров.
 </para>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
