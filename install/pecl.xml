<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d1fa3096926b6cbaf9da1f831b6fe3302ae2e490 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Установка PECL-модулей</title>

 <sect1 xml:id="install.pecl.intro">
  <title>Введение в установку модулей из репозитория PECL</title>
  &pecl.moving.to.pie;
  <simpara>
   &link.pecl; — репозиторий PHP-модулей. Модули устанавливают непосредственно из репозитория
   или через <link xlink:href="&url.php.pear;">PEAR</link> — платформу и систему распространения PHP-компонентов.
   Эта часть руководства рассказывает, как получить и установить PECL-модули.
  </simpara>
  <simpara>
   Эти инструкции подразумевают, что <literal>/path/to/php/src/dir/</literal> — путь
   к каталогу с дистрибутивом исходного кода PHP, а <literal>extname</literal> — название
   PECL-модуля. Так что указывайте соответствующие коррективы. Эти инструкции также подразумевают
   знакомство с <link xlink:href="&url.php.pear.cli;">командой pear</link>.
   Информация в руководстве PEAR для команды
   <command>pear</command>
   также применима для команды
   <command>pecl</command>.
  </simpara>
  <simpara>
   Общедоступный модуль потребуется создать, установить и загрузить, чтобы модуль стал доступен для работы.
   Следующие разделы описывают методы, которые дают инструкции
   по сборке и установке модулей, но эти способы не загружают модули автоматически.
   Модули загружают через директиву <link linkend="ini.extension">extension</link>
   в файле &php.ini;
   или функцией <function>dl</function>.
  </simpara>
  <simpara>
   При сборке PHP-модулей потребуется установить стабильные версии утилит
   autoconf, automake, libtool и других инструментов сборки и компиляции. Подробная информация
   об инструментах и совместимых версиях доступна
   на странице <link xlink:href="&url.php.anongit;">Инструкции по анонимному доступу к Git</link>.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.downloads">
  <title>Загрузка модулей PECL</title>
  &pecl.moving.to.pie;
  <simpara>
   PECL-модули загружают следующими способами:
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     Команда <command>pecl install extname</command> автоматически скачивает
     исходный код модуля, компилирует и устанавливает файл модуля в каталог с расширениями,
     поэтому отдельно скачивать и компилировать файлы не потребуется.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Сайт <link xlink:href="&url.pecl;">&url.pecl;</link>.
    </simpara>
    <simpara>
     Сайт PECL содержит информацию о модулях, которые предлагает
     команда разработчиков языка PHP.
     Доступная на сайте информация включает:
     лог изменений, заметки о выпусках,
     требования и другие похожие сведения.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <command>pecl download extname</command>
    </simpara>
    <simpara>
     Модули PECL, выпуски которых перечисляются на сайте PECL, доступны
     для скачивания и установки <link xlink:href="&url.php.pear.cli;">командой pecl</link>.
     При скачивании возможно указать конкретную версию модуля.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>git</acronym>
    </simpara>
    <simpara>
     Часть PECL-модулей доступна на сайте GitHub.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>SVN</acronym>
    </simpara>
    <simpara>
     Часть PECL-модулей также доступна в <acronym>SVN</acronym>. Веб-интерфейс
     для просмотра доступен по адресу <link xlink:href="&url.php.svn;pecl/">&url.php.svn;pecl/</link>.
     Для загрузки прямо из <acronym>SVN</acronym> выполняют следующую последовательность
     команд:
    </simpara>
    <screen>
<![CDATA[
$ svn checkout https://svn.php.net/repository/pecl/extname/trunk extname
]]>
    </screen>
   </listitem>
   <listitem>
    <simpara>
     Загрузка для Windows
    </simpara>
    <simpara>
     Проект PHP компилирует и предлагает DLL-файлы для ОС Windows для большей части PECL-модулей на странице с пакетами.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="install.pecl.windows">
  <title>Установка PHP-модуля в Windows</title>
  <para>
   В ОС Windows PHP-модули подключают двумя способами: либо компилируют PHP
   с модулем, либо загружают модуль как DLL-файл. Загрузка заранее
   скомпилированного модуля — самый простой и предпочтительный способ.
  </para>
  <para>
   Модуль загрузится, только если доступен в системе
   как файл с расширением <filename>.dll</filename>.
   Группа разработчиков PHP автоматически и периодически компилирует
   PHP-модули. Подробнее о скачивании рассказывает следующий раздел.
  </para>
  <para>
   О компиляции модуля вместе с PHP рассказывает раздел документации
   «<link linkend="install.windows.building">Сборка из исходного кода</link>».
  </para>
  <para>
   Для компиляции отдельного модуля в виде DLL-файла,
   обратитесь к разделу
   «<link linkend="install.windows.building">Сборка из исходного кода</link>».
   Возможно, перед подключением модуль потребуется скомпилировать,
   если DLL-файла не оказалось ни в стандартной поставке PHP,
   ни в репозитории PECL.
  </para>

  <sect2 xml:id="install.pecl.windows.find">
   <title>Где найти модуль?</title>
   <para>
    PHP-модулям часто присваивают названия вида <filename>php_*.dll</filename>, где звёздочка —
    название модуля, и размещают модули в папке <filename>PHP\ext</filename>.
   </para>
   <para>
    PHP поставляется с наиболее полезными для большей части разработчиков модулями.
    Такие модули называются <emphasis>встроенными</emphasis>.
   </para>
   <para>
    На сайте &link.pecl; доступны модули, которые решают близкое к 100 % количество задач,
    поэтому хотя бы один необходимый модуль найдётся в репозитории, если встроенные модули не содержат функций, которые потребовались программисту.
    Библиотека модулей PHP-сообщества (англ. The PHP Extension Community Library, PECL) —
    каталогизированный репозиторий PHP-модулей и инфраструктура для хранения, скачивания и разработки модулей.
   </para>
   <para>
    Одни пользователи размещают в репозитории PECL модули, которые разработали для конкретных целей,
    а другие пользователи, которым потребовались аналогичные функции, скачивают модули.
    Разработчики модулей получают шанс на обратную связь,
    благодарности (надеемся, что так и будет), сообщения об ошибках
    и даже исправление ошибок или другие полезные изменения. Примечание <link xlink:href="&url.pecl.submit;">на странице отправки нового PECL-модуля</link>
    даёт инструкции, которые потребуется выполнить перед отправкой модуля в репозиторий PECL.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.which">
   <title>Какой модуль скачать?</title>
   <para>
    <emphasis>
     DLL-модуль выбирают по следующим признакам:
    </emphasis>
    <itemizedlist>
     <listitem>
      <simpara>
       Номер версий, в котором совпадают хотя бы две первые цифры
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Настройки потокобезопасности
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Архитектура процессора: x86, x64 или другая
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Настройки отладки
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>И другие характеристики</literal>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP загрузит модуль, только если характеристики модуля
    соответствуют параметрам исполняемого PHP-файла.
    Следующий PHP-скрипт выведет <emphasis>все</emphasis>
    настройки PHP:
   </para>
   <para>
    <example>
     <title>
      Вызов функции <function>phpinfo</function>
     </title>
     <programlisting role="php">
<![CDATA[
<?php

phpinfo();

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Или запустите из командной строки:
    <screen>
<![CDATA[
drive:\path\to\php\executable\php.exe -i
]]>
    </screen>
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.loading">
   <title>Загрузка модуля</title>
   <para>
    Самый распространённый способ загрузить PHP-модуль —
    включить модуль в конфигурационном файле &php.ini;.
    Обратите внимание, файл &php.ini; уже содержит записи для части модулей,
    и для активации достаточно удалить точку с запятой.
   </para>
   <para>
    Обратите внимание, начиная с PHP 7.2.0 вместо названия файла модуля
    возможно указать только название модуля. Такой способ становится рекомендованным
    для определения списка загружаемых модулей, поскольку это самый простой и платформонезависимый способ.
    Поддержка названий файлов всё ещё сохраняется для совместимости с предыдущими версиями.
   </para>
   <screen>
<![CDATA[
;extension=php_extname.dll
]]>
   </screen>
   <screen>
<![CDATA[
extension=php_extname.dll
]]>
   </screen>
   <screen>
<![CDATA[
; Начиная с PHP 7.2 лучше делать так:
extension=extname
zend_extension=another_extension
]]>
   </screen>
   <para>
    Однако некоторые веб-серверы создают путаницу, поскольку
    не используют файл &php.ini;, который содержится в дистрибутиве PHP.
    Путь расположения файла &php.ini;
    указывается в выводе функции <function>phpinfo</function>:
   </para>
   <screen>
<![CDATA[
Configuration File (php.ini) Path  C:\WINDOWS
]]>
   </screen>
   <screen>
<![CDATA[
Loaded Configuration File   C:\Program Files\PHP\8.2\php.ini
]]>
   </screen>
   <para>
    После активации модуля сохраняют файл &php.ini;, перезагружают веб-сервер
    и повторно проверяют вывод функции <function>phpinfo</function>.
    Для нового модуля появится отдельный раздел.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.problemsolving">
   <title>Решение проблем</title>
   <para>
    Лог-файлы помогают узнать причину ошибки,
    когда модуль не появляется в выводе функции <function>phpinfo</function>.
   </para>
   <para>
    При работе с PHP из командной строки, в режиме CLI,
    сообщение об ошибке загрузки модуля появится на экране.
   </para>
   <para>
    При работе PHP с веб-сервером расположение и формат логов определяет ПО сервера.
    Для поиска путей к журналам знакомятся с документацией к веб-серверу,
    поскольку сам PHP не устанавливает место хранения серверных логов.
   </para>
   <para>
    Часто проблемы возникают из-за неправильного расположения DLL-модуля и DLL-файлов, от которых зависит модуль,
    неправильного значения директивы "<link linkend="ini.extension-dir">extension_dir</link>" в файле <filename>php.ini</filename>
    и из-за несовпадения настроек компиляции.
   </para>
   <para>
    Вероятная причина проблемы, которая возникает из-за несовпадения настроек компиляции,
    состоит в скачивании неправильного DLL-файла. Попробуйте скачать
    модуль снова с правильными настройками. И снова в таких ситуациях
    помогает информация, которую выводит функция <function>phpinfo</function>.
   </para>
  </sect2>

 </sect1>

 <sect1 xml:id="install.pecl.pear">
  <title>Компиляция разделяемых модулей командой pecl</title>
  <simpara>
   PECL упрощает создание общедоступных модулей PHP. Выполните следующую
   <link xlink:href="&url.php.pear.cli;">команду pecl</link>:
  </simpara>
  <screen>
<![CDATA[
$ pecl install extname
]]>
  </screen>
  <simpara>
   Команда скачает исходный код модуля <emphasis>extname</emphasis>,
   скомпилирует и установит файл <filename>extname.so</filename> в директорию
   <link linkend="ini.extension-dir">extension_dir</link>. После установки файл
   <filename>extname.so</filename> получится загрузить через файл &php.ini;
  </simpara>
  <simpara>
   Команда <literal>pecl</literal> по умолчанию не устанавливает
   пакеты с отметкой <literal>alpha</literal>- или <literal>beta</literal>-версии.
   <literal>beta</literal>-версию пакета устанавливают следующей командой,
   если <literal>stable</literal>-версии пакетов недоступны:
  </simpara>
  <screen>
<![CDATA[
$ pecl install extname-beta
]]>
  </screen>
  <para>
   Следующая команда установит конкретную версию:
  </para>
  <screen>
<![CDATA[
$ pecl install extname-0.1
]]>
  </screen>
  <note>
   <para>
    После подключения модуля в файле &php.ini; потребуется перезапустить веб-сервер,
    чтобы изменения вступили в силу.
   </para>
  </note>
 </sect1>

 <sect1 xml:id="install.pecl.phpize">
  <title>Компиляция разделяемых модулей командой phpize</title>
  <simpara>
   Иногда компиляция модулей через установщик <literal>pecl</literal> невозможна.
   Это связано с брандмауэром или с недоступностью устанавливаемого модуля
   в качестве PECL-совместимого пакета
   наподобие модулей из системы управления версиями git, которые ещё не выпустили.
   Такой модуль собирают вручную через низкоуровневые утилиты сборки.
  </simpara>
  <simpara>
   Команду <command>phpize</command> выполняют для подготовки окружения сборки
   PHP-модуля. В следующем примере исходные коды модуля лежат
   в директории с названием <filename>extname</filename>:
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
   </screen>
  </para>
  <simpara>
   Успешная установка создаст <link linkend="ini.extension-dir">в директории PHP-модулей</link>
   файл <filename>extname.so</filename>.
   Модуль станет доступен для работы после корректировки
   файла &php.ini;, в который потребуется добавить
   строку <literal>extension=extname.so</literal>.
  </simpara>
  <simpara>
   Потребуется установить версию PHP для разработки, которая соответствует текущей установке PHP,
   если в системе недоступна команда <command>phpize</command>, но доступна работа
   с предварительно скомпилированными пакетами наподобие RPM. Версия для разработки часто
   включает команду <command>phpize</command> с правильными файлами заголовков
   для сборки интерпретатора PHP и PHP-модулей.
  </simpara>
  <simpara>
   Дополнительную информацию о работе утилиты выводит команда <command>phpize --help</command>.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.php-config">
  <title>
   php-config
  </title>

  <para>
   <command>php-config</command> — простой скрипт командной строки для получения информации о конфигурации
   PHP-дистрибутива, который установили в систему.
  </para>

  <para>
   При компиляции модулей в системах, в которых установили больше одного дистрибутива PHP,
   возможно указать версию PHP, для которой выполняется сборка модуля. Для этого при настройке сборки
   в параметре <option role="configure">--with-php-config</option> указывают путь к скрипту <command>php-config</command>,
   версия которого соответствует PHP-установке.
  </para>

  <para>
   Список доступных для скрипта <command>php-config</command> параметров командной строки
   доступен при запуске команды <command>php-config</command> с параметром <option>-h</option>:
   <screen>
<![CDATA[
Usage: /usr/local/bin/php-config [OPTION]
Options:
  --prefix            [...]
  --includes          [...]
  --ldflags           [...]
  --libs              [...]
  --extension-dir     [...]
  --include-dir       [...]
  --php-binary        [...]
  --php-sapis         [...]
  --configure-options [...]
  --version           [...]
  --vernum            [...]
]]>
   </screen>
  </para>

  <para>
   <table>
    <title>Опции скрипта</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Опция</entry>
       <entry>Описание</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>--prefix</entry>
       <entry>Директория, в которую установили PHP, например /usr/local</entry>
      </row>
      <row>
       <entry>--includes</entry>
       <entry>
        Список <literal>-I</literal> параметров со всеми подключаемыми файлами
       </entry>
      </row>
      <row>
       <entry>--ldflags</entry>
       <entry>
        <literal>LD</literal>, с которыми скомпилировали PHP
       </entry>
      </row>
      <row>
       <entry>--libs</entry>
       <entry>Внешние библиотеки, с которыми скомпилировали PHP</entry>
      </row>
      <row>
       <entry>--extension-dir</entry>
       <entry>Директория, в которой PHP по умолчанию ищет модули</entry>
      </row>
      <row>
       <entry>--include-dir</entry>
       <entry>
        Префикс директории, в которую по умолчанию устанавливаются заголовочные файлы
       </entry>
      </row>
      <row>
       <entry>--php-binary</entry>
       <entry>Полный путь до исполняемых файлов php для режимов CLI или CGI</entry>
      </row>
      <row>
       <entry>--php-sapis</entry>
       <entry>Показывает все доступные модули SAPI</entry>
      </row>
      <row>
       <entry>--configure-options</entry>
       <entry>
        Конфигурационные опции для воссоздания настроек текущей установки PHP.
       </entry>
      </row>
      <row>
       <entry>--version</entry>
       <entry>Версия PHP</entry>
      </row>
      <row>
       <entry>--vernum</entry>
       <entry>Версия PHP в виде целого числа</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>

 <sect1 xml:id="install.pecl.static">
  <title>Компиляция модулей PECL статически в PHP</title>
  <simpara>
   Возможно, потребуется собрать модуль PECL статично в бинарный файл PHP.
   Для этого исходный код модуля размещают в каталоге
   <filename>/path/to/php/src/dir/ext/</filename> и вызывают перегенерацию конфигурационных скриптов
   через систему сборки PHP.
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /path/to/php/src/dir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
   </screen>
  </para>
  <simpara>
   Это создаст следующую директорию:
  </simpara>
  <screen>
<![CDATA[
/path/to/php/src/dir/ext/extname
]]>
  </screen>
  <simpara>
   Затем PHP потребуется принудительно пересобрать скрипт конфигурации,
   после чего скрипт конфигурации собирается как обычно:
  </simpara>
  <screen>
<![CDATA[
$ cd /path/to/php/src/dir
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
]]>
  </screen>
  <note>
   <simpara>
    Для запуска скрипта <command>buildconf</command> потребуется
    команда <command>autoconf</command> версии <literal>2.68</literal>
    и команда <command>automake</command> версии <literal>1.4+</literal>.
    Иногда работают и более новые версии скрипта <command>autoconf</command>,
    но не поддерживаются.
   </simpara>
  </note>
  <simpara>
   При сборке встроенного модуля указывают команду <option role="configure">--enable-extname</option>,
   а для модулей с внешними зависимостями — <option role="configure">--with-extname</option>.
   При сборке модуля, который не требует внешних библиотек,
   указывают параметр <option role="configure">--enable</option>.
   Для проверки синтаксиса параметра конкретного расширения выполните после запуска скрипта <command>buildconf</command> следующую команду:
  </simpara>
  <screen>
<![CDATA[
$ ./configure --help | grep extname
]]>
  </screen>
 </sect1>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
