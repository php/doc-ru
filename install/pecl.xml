<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4eeb07225f615fcde68cbefb84df2fc9bf278f1f Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->

<chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Установка модулей PECL</title>

 <sect1 xml:id="install.pecl.intro">
  <title>Введение в установку PECL</title>
  <simpara>
   <link xlink:href="&url.pecl;">PECL</link> - это репозиторий модулей PHP,
   доступ к которым предоставляется через систему <link xlink:href="&url.php.pear;">PEAR</link>.
   Эта часть руководства предназначена для демонстрации того, как вы можете получить и
   установить модули PECL.
  </simpara>
  <simpara>
   Эти инструкции подразумевают, что <literal>/your/phpsrcdir/</literal> является путём
   к каталогу с дистрибутивом исходного кода PHP, а <literal>extname</literal> - это имя
   модуля PECL, так что вносите соответствующие коррективы. Эти инструкции также подразумевают
   знакомство с <link xlink:href="&url.php.pear.cli;">командой pear</link>.
   Информация в руководстве PEAR для команды <literal>pear</literal> также применима для
   команды <literal>pecl</literal>.
  </simpara>
  <simpara>
   Для того, чтобы модуль можно было использовать, он должен быть собран, установлен
   и загружен. Описанные ниже методы предоставляют различные рекомендации по поводу
   того, как собрать и установить модули, но без применения их автоматической загрузки.
   Модули могут быть загружены с помощью директивы <link linkend="ini.extension">
   extension</link> в файле &php.ini; или путём использования функции <function>dl</function>.
  </simpara>
  <simpara>
   В процессе сборки модулей PHP важно иметь нужные версии необходимых утилит
   (autoconf, automake, libtool и т.д.). Информацию об этих утилитах и их версиях можно посмотреть
   в разделе "<link xlink:href="&url.php.anongit;">Инструкции по осуществлению
   анонимного доступа к Git</link>".
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.downloads">
  <title>Загрузка модулей PECL</title>
  <simpara>
   Есть несколько вариантов для загрузки модулей PECL, в том числе:
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     Команда <literal>pecl install extname</literal> автоматически скачивает
     код модуля, поэтому в этом случае нет нужды в отдельной
     скачке этих файлов.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link xlink:href="&url.pecl;">&url.pecl;</link>
    </simpara>
    <simpara>
     Веб-сайт PECL содержит информацию о различных модулях, предоставляемых
     командой разработчиков PHP. Информация, доступная на этом веб-сайте, включает в себя:
     лог изменений, новости релизов, требования и другие подобные детали.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>pecl download extname</literal>
    </simpara>
    <simpara>
     Модули PECL, имеющие опубликованные релизы на сайте PECL, доступны для
     скачивания и установки с помощью <link xlink:href="&url.php.pear.cli;">команды pecl</link>.
     Можно также указать отдельные ревизии для установки.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>git</acronym>
    </simpara>
    <simpara>
     Многие модули PECL находятся на GitHub.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>SVN</acronym>
    </simpara>
    <simpara>
     Многие модули PECL, также, находятся в <acronym>SVN</acronym>. Веб-интерфейс
     для просмотра доступен по адресу <link xlink:href="&url.php.svn;pecl/">&url.php.svn;pecl/</link>.
     Для загрузки напрямую из <acronym>SVN</acronym> используется следующая последовательность
     команд:
    </simpara>
    <para>
     <screen>
      $ svn checkout http://svn.php.net/repository/pecl/extname/trunk extname
     </screen>
    </para>
   </listitem>
   <listitem>
    <simpara>
     Загрузка для Windows
    </simpara>
    <simpara>
     На данный момент проект PHP не компилирует бинарные файлы Windows
     для модулей PECL.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="install.pecl.windows">
  <title>Установка PHP-модуля в Windows</title>
  <para>
   В Windows есть два способа загрузки PHP-модуля: скомпилировать
   его вместе с PHP или загрузить DLL. Загрузка заранее
   скомпилированного модуля является наиболее простым и предпочитаемым
   способом.
  </para>
  <para>
   Для загрузки модуля, он должен присутствовать в вашей
   системе в виде ".dll" файла.
   Все модули автоматически и периодически компилируются командой
   PHP (смотрите следующий раздел для загрузки).
  </para>
  <para>
   За инструкциями по компиляции модуля в PHP обратитесь к
   разделу "<link linkend="install.windows.building">Сборка из
   исходников</link>".
  </para>
  <para>
   Для компиляции отдельного модуля (или DLL-файла), обратитесь
   к разделу "<link linkend="install.windows.building">
   Сборка из исходников</link>". Если DLL-файла нет ни в стандартной поставке
   PHP ни в PECL, возможно, вам придётся скомпилировать его вручную.
  </para>

  <sect2 xml:id="install.pecl.windows.find">
   <title>Где найти модуль?</title>
   <para>
    PHP-модули обычно имеют имена вида "php_*.dll" (где звёздочка обозначает
    имя модуля) и располагаются в папке "PHP\ext".
   </para>
   <para>
    PHP поставляет модули наиболее полезные большинству разработчиков. Такие
    модули называются "основными" ("core").
   </para>
   <para>
    Однако, если вам требуется функционал, который не предоставляется
    ни одним из основных модулей, возможно, нужный вам модуль есть
    в <link xlink:href="&url.pecl;">PECL</link>. Библиотека модулей сообщества PHP
    (The PHP Extension Community Library, PECL) является
    хранилищем модулей PHP, предоставляя каталог и хостинг
    всех известных модулей для скачки и дальнейшей разработки
    модулей в PHP.
   </para>
   <para>
    Если вы разработали какой-либо модуль для собственных нужд,
    возможно, вы захотите хранить его в PECL, так, чтобы другие также
    могли воспользоваться результатами вашего труда. Хорошим побочным
    эффектом будет неплохой шанс получить обратную связь,
    благодарности (надеемся, что так и будет), сообщения об ошибках
    и даже исправления/патчи. Пожалуйста, прочтите <link xlink:href="&url.pecl.submit;">публикация PECL</link>;
    перед отправкой вашего модуля в PECL.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.which">
   <title>Какой модуль нужно загрузить?</title>
   <para>
    <emphasis>Очень часто существует несколько версий модуля DLL:</emphasis>
    <itemizedlist>
     <listitem>
      <simpara>
       Различные номера версий (по крайней мере первые два числа должны совпадать)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Различные настройки потокобезопасности
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Различная архитектура процессора (x86, x64, ...)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Различные настройки отладки
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>и т.д.</literal>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Помните, что настройки ваших модулей должны совпадать со
    всеми настройками используемого вами бинарного файла PHP.
    Следующий PHP-скрипт выведет вам <emphasis>все</emphasis>
    настройки PHP:
   </para>
   <para>
    <example>
     <title>Вызов <function>phpinfo</function></title>
     <programlisting role="php">
<![CDATA[
<?php
phpinfo();
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Или запустите из командной строки:
    <screen>
<![CDATA[
drive:\\path\to\php\executable\php.exe -i
]]>
    </screen>
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.loading">
   <title>Загрузка модуля</title>
   <para>
    Наиболее распространённым способом загрузки PHP-модуля
    является его включение в конфигурационном файле <filename>php.ini</filename>.
    Обратите внимание, что большинство модулей уже прописаны
    в вашем <filename>php.ini</filename> и для их активации вам
    просто нужно удалить точку с запятой.
   </para>
   <para>
    Обратите внимание, что в PHP 7.2.0 и выше для указания модуля можно использовать
    не имя файла библиотеки, а название самого модуля. Данный подход рекомендуется
    для использования, так как он более простой и платформонезависимый. Однако вы
    всё ещё можете прямо указывать имя файла модуля.
   </para>
   <screen>
<![CDATA[
;extension=php_extname.dll
]]>
   </screen>
   <screen>
<![CDATA[
extension=php_extname.dll
]]>
   </screen>
   <screen>
<![CDATA[
; В PHP 7.2 и выше лучше делать так:
extension=extname
zend_extension=another_extension
]]>
   </screen>
   <para>
    Однако, некоторые веб-серверы создают путаницу, т.к. они не
    используют <filename>php.ini</filename>, расположенный
    в дистрибутиве PHP, а используют свой собственный.
    Узнать, где находится, используемый сервером <filename>php.ini</filename>,
    можно посмотрев на выводимый путь в <function>phpinfo</function>:
   </para>
   <screen>
<![CDATA[
Configuration File (php.ini) Path  C:\WINDOWS
]]>
   </screen>
   <screen>
<![CDATA[
Loaded Configuration File   C:\Program Files\PHP\5.2\php.ini
]]>
   </screen>
   <para>
    После активации модуля сохраните <filename>php.ini</filename>, перезагрузите веб-сервер
    и снова проверьте <function>phpinfo</function>, в нем должен
    появиться отдельный раздел с новым модулем.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.problemsolving">
   <title>Решение проблем</title>
   <para>
    Если модуль не появился в выводе <function>phpinfo</function>,
    проверьте лог-файлы на наличие сообщений об ошибках.
   </para>
   <para>
    Если вы используете PHP в командной строке (CLI), ошибки загрузки
    модуля будут доступны сразу же на экране.
   </para>
   <para>
    Если вы используете PHP на веб-сервере, расположение и формат
    лог-файлов сильно зависит от используемого вами веб-сервера.
    Пожалуйста, обратитесь к документации вашего веб-сервера, т.к.
    в данном случае эта ситуация не управляется самим PHP.
   </para>
   <para>
    Частой проблемой является расположение DLL-файлов, значение "<link linkend="ini.extension-dir">
    extension_dir</link>" в <filename>php.ini</filename>, а также
    несовпадение настроек компиляции.
   </para>
   <para>
    Если проблемой является несовпадение настроек компиляции, то
    возможно, вы скачали не тот DLL-файл. Попробуйте снова скачать
    модуль, на этот раз с правильными настройками. Ещё раз,
    информация функции <function>phpinfo</function> сильно помогает
    в этом случае.
   </para>
  </sect2>

 </sect1>

 <sect1 xml:id="install.pecl.pear">
  <title>Компиляция разделяемых модулей с помощью команды pecl</title>
  <simpara>
   PECL позволяет легко создавать разделяемые модули PHP. Используя
   <link xlink:href="&url.php.pear.cli;">команду pecl</link>, выполните
   следующее:
  </simpara>
  <para>
   <screen>
    $ pecl install extname
   </screen>
  </para>
  <simpara>
   Эта команда загрузит исходный код для модуля <emphasis>extname</emphasis>,
   скомпилирует и установит <filename>extname.so</filename> в вашу директорию
   <link linkend="ini.extension-dir">extension_dir</link>. Файл
   <filename>extname.so</filename> может быть затем загружен в &php.ini;
  </simpara>
  <simpara>
   По умолчанию, команда <literal>pecl</literal> не будет устанавливать пакеты,
   отмеченные состоянием <literal>alpha</literal> или <literal>beta</literal>.
   Если нет доступных стабильных (<literal>stable</literal>) версий пакетов, вы можете
   установить <literal>beta</literal>-версию пакета, используя следующую команду:
  </simpara>
  <para>
   <screen>
    $ pecl install extname-beta
   </screen>
  </para>
  <para>
   Также, вы можете установить определённую версию, используя такой вариант:
  </para>
  <para>
   <screen>
    $ pecl install extname-0.1
   </screen>
  </para>
  <note>
   <para>
    После подключения модуля в &php.ini; необходимо перезапустить веб-сервер
    для того, чтобы изменения вступили в силу.
   </para>
  </note>
 </sect1>

 <sect1 xml:id="install.pecl.phpize">
  <title>Компиляция разделяемых модулей с помощью phpize</title>
  <simpara>
   Иногда использование инсталлятора <literal>pecl</literal> не подходит. Это
   может быть связано с тем, что вы находитесь за файерволом или из-за того,
   что модуль, который вы хотите установить, недоступен в PECL-совместимом
   пакете (к примеру, модули из git, у которых ещё нет релизов). Если вам необходимо
   собрать такой модуль, вы можете использовать низкоуровневые утилиты для
   выполнения сборки вручную.
  </simpara>
  <simpara>
   Команда <literal>phpize</literal> используется для подготовки окружения
   PHP-модуля. В следующем примере директория, где находятся исходные коды
   модуля, называется <filename>extname</filename>:
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
   </screen>
  </para>
  <simpara>
   В случае успешной установки будет создан файл <filename>extname.so</filename> и
   помещён в PHP <link linkend="ini.extension-dir">директорию модулей</link>.
   Вам будет необходимо добавить строку <literal>extension=extname.so</literal> в
   &php.ini; перед использованием этого модуля.
  </simpara>
  <simpara>
   Если в системе нет <literal>phpize</literal>, но существует возможность
   установки заранее скомпилированных пакетов (типа RPM), убедитесь, что установлена
   соответствующая версия пакета PHP для разработчиков, так как они часто
   содержат команду <literal>phpize</literal> с подходящими файлами заголовков для
   сборки PHP и его модулей.
  </simpara>
  <simpara>
   Для дополнительной информации используйте команду <command>phpize --help</command>.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.php-config">
  <title>php-config</title>

  <para>
   php-config - это простой скрипт командной строки для получения информации о конфигурации
   установленного PHP.
  </para>

  <para>
   При компиляции модулей, если у вас установлено сразу несколько версий PHP,
   вы должны уточнить нужную версию с помощью опции <literal>--with-php-config</literal>
   во время конфигурирования сборки, указав путь до соответствующего php-config скрипта.
  </para>

  <para>
   Список параметров командной строки доступных для php-config скрипта всегда можно
   получить запустив php-config с параметром <option>-h</option>:
   <screen>
<![CDATA[
Usage: /usr/local/bin/php-config [OPTION]
Options:
  --prefix            [...]
  --includes          [...]
  --ldflags           [...]
  --libs              [...]
  --extension-dir     [...]
  --include-dir       [...]
  --php-binary        [...]
  --php-sapis         [...]
  --configure-options [...]
  --version           [...]
  --vernum            [...]
]]>
   </screen>
  </para>

  <para>
   <table>
    <title>Опции скрипта</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Опция</entry>
       <entry>Описание</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>--prefix</entry>
       <entry>Директория, в которой установлен PHP, например, /usr/local</entry>
      </row>
      <row>
       <entry>--includes</entry>
       <entry>Список -I опций со всеми подключаемыми файлами</entry>
      </row>
      <row>
       <entry>--ldflags</entry>
       <entry>LD-флаги, с которыми был скомпилирован PHP</entry>
      </row>
      <row>
       <entry>--libs</entry>
       <entry>Внешние библиотеки, с которыми был скомпилирован PHP</entry>
      </row>
      <row>
       <entry>--extension-dir</entry>
       <entry>Директория, в которой по умолчанию ищутся модули</entry>
      </row>
      <row>
       <entry>--include-dir</entry>
       <entry>Директория, куда по умолчанию устанавливаются заголовочные файлы</entry>
      </row>
      <row>
       <entry>--php-binary</entry>
       <entry>Полный путь до исполняемых файлов php CLI или CGI</entry>
      </row>
      <row>
       <entry>--php-sapis</entry>
       <entry>Показывает все доступные модули SAPI</entry>
      </row>
      <row>
       <entry>--configure-options</entry>
       <entry>Конфигурационные опции для воссоздания настроек текущей установки PHP.</entry>
      </row>
      <row>
       <entry>--version</entry>
       <entry>Версия PHP</entry>
      </row>
      <row>
       <entry>--vernum</entry>
       <entry>Версия PHP в виде целого числа</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>

 <sect1 xml:id="install.pecl.static">
  <title>Компиляция модулей PECL статически в PHP</title>
  <simpara>
   Возможно, вы захотите собрать модуль PECL статично в ваш бинарный файл PHP.
   Для этого необходимо поместить код модуля в директорию
   <filename>php-src/ext/</filename> и вызвать перегенерацию конфигурационных скриптов
   через систему сборки PHP.
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
   </screen>
  </para>
  <simpara>
   В результате будет создана следующая директория:
  </simpara>
  <para>
   <screen>
    /your/phpsrcdir/ext/extname
   </screen>
  </para>
  <simpara>
   После этого, выполните заново сборку конфигурационного скрипта PHP и затем
   соберите PHP как обычно:
  </simpara>
  <para>
   <screen>
    $ cd /your/phpsrcdir
    $ rm configure
    $ ./buildconf --force
    $ ./configure --help
    $ ./configure --with-extname --enable-someotherext --with-foobar
    $ make
    $ make install
   </screen>
  </para>
  <note>
   <simpara>
    Для запуска 'buildconf' скрипта вам понадобится autoconf версии 2.13 и
    automake версии 1.4+ (более новые версии autoconf могут работать, но это
    не поддерживается).
   </simpara>
  </note>
  <simpara>
   В зависимости от модуля будет использоваться одна из двух
   опций <literal>--enable-extname</literal> или <literal>--with-extname
   </literal>. Обычно, если модуль не требует подключения
   внешних библиотек, используется <literal>--enable</literal>.
   Чтобы узнать это, выполните следующую команду после buildconf:
  </simpara>
  <para>
   <screen>
    $ ./configure --help | grep extname
   </screen>
  </para>
 </sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
