<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f0261e36dc250410f352fe33ad4c4e699cb18b02 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="install.unix.nginx" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Установка Nginx 1.4.x на систему Unix</title>

 <para>
  Эта документация описывает установку и настройку PHP с
  менеджером процессов PHP-FPM для HTTP-сервера Nginx 1.4.x.
 </para>

 <para>
  Это краткое руководство предполагает, что Nginx собран из исходного кода
  и поэтому бинарные файлы и файлы конфигурации лежат в директории
  <literal>/usr/local/nginx</literal>. Если нет, и вы получили Nginx другим способом, тогда,
  пожалуйста, обратитесь к <link xlink:href="&url.nginx;">Nginx Wiki</link>, чтобы получить
  похожее на это руководство для вашей установки.
 </para>

 <para>
  В этом кратком руководстве будут рассмотрены основы настройки Nginx-сервера для обработки PHP-приложений
  и их обслуживания на порту 80. Рекомендовано изучить документацию Nginx и PHP-FPM, если
  нужно оптимизировать установку за рамками этой документации.
 </para>

 <para>
  Пожалуйста, обратите внимание, что в этой документации номера версий были
  заменены на символ «x», чтобы документация оставалась корректной в будущем.
  Пожалуйста, замените «x» на необходимый номер версии.
 </para>

 <orderedlist>
  <listitem>
   <para>
    Рекомендовано зайти
    <link xlink:href="&url.nginx.wiki.install;">на страницу установки</link> Nginx Wiki,
    чтобы получить и установить HTTP-сервер Nginx на свою систему.
   </para>
  </listitem>

  <listitem>
   <para>
    Распаковать полученный исходный код PHP:
   </para>

   <informalexample xml:id="install.unix.nginx.extract.php">
    <screen>
<![CDATA[
tar zxf php-x.x.x
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Настроить и собрать PHP. Здесь вы настраиваете PHP
    с нужными параметрами.
    Запустите команду ./configure --help, чтобы получить список доступных опций.
    В примере будут сделаны простые настройки для включения менеджера процессов PHP-FPM
    с поддержкой модуля MySQLi.
   </para>

   <informalexample xml:id="install.unix.nginx.build.php">
    <screen>
<![CDATA[
cd ../php-x.x.x
./configure --enable-fpm --with-mysqli
make
sudo make install
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Переместить файлы конфигурации в правильные места
   </para>

   <informalexample xml:id="install.unix.nginx.configure.php">
    <screen>
<![CDATA[
cp php.ini-development /usr/local/php/php.ini
cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf
cp sapi/fpm/php-fpm /usr/local/bin
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Важно запретить серверу Nginx передавать запросы в бэкенд менеджера PHP-FPM,
    если файл не существует, что помогает предотвратить атаки произвольного внедрения скрипта.
   </para>
   <para>
    Это исправляют установкой для директивы
    <link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link>
    значения <literal>0</literal> в файле php.ini.
   </para>
   <para>
    Отредактировать файл php.ini:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.ini">
    <screen>
<![CDATA[
vim /usr/local/php/php.ini
]]>
    </screen>
   </informalexample>

   <para>
    Найти директиву <literal>cgi.fix_pathinfo=</literal> и изменить вот так:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.pathinfo">
    <screen>
<![CDATA[
cgi.fix_pathinfo=0
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Файл php-fpm.conf нужно изменить, чтобы указать, что модуль php-fpm должен
    работать от имени пользователем www-data и группы www-data до того, как мы запустим сервис:
   </para>

   <informalexample xml:id="install.unix.nginx.modify.phpfpm">
    <screen>
<![CDATA[
vim /usr/local/etc/php-fpm.d/www.conf
]]>
    </screen>
   </informalexample>

   <para>
    Найти и изменить следующее:
   </para>

   <informalexample xml:id="install.unix.nginx.modify.phpfpm.usergroup">
    <screen>
<![CDATA[
; Unix user/group of processes
; Замечание: Пользователь является обязательным. Если группа не установлена,
; то будет использована стандартная группа пользователя.
user = www-data
group = www-data
]]>
    </screen>
   </informalexample>

   <para>
    Теперь можно запускать сервис php-fpm:
   </para>

   <informalexample xml:id="install.unix.nginx.start.phpfpm">
    <screen>
<![CDATA[
/usr/local/bin/php-fpm
]]>
    </screen>
   </informalexample>

   <para>
    В этом руководстве другие настройки модуля php-fpm не рассматриваются. Если
    нужны дополнительные настройки, обратитесь к документации по php-fpm.
   </para>
  </listitem>

  <listitem>
   <para>
    Настроить Nginx на поддержку обработки PHP-приложений:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx">
    <programlisting>
<![CDATA[
vim /usr/local/nginx/conf/nginx.conf
]]>
    </programlisting>
   </informalexample>

   <para>
    Измените блок «location» по умолчанию так, чтобы HTTP-сервер знал,
    что он должен обслуживать файлы .php:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx.location">
    <programlisting role="nginx-conf">
<![CDATA[
location / {
    root   html;
    index  index.php index.html index.htm;
}
]]>
    </programlisting>
   </informalexample>

   <para>
    Следующий шаг — убедиться, что файлы .php передаются в бэкенд PHP-FPM.
    Введите следующее:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx.php">
    <programlisting role="nginx-conf">
<![CDATA[
location ~* \.php$ {
    fastcgi_index   index.php;
    fastcgi_pass    127.0.0.1:9000;
    include         fastcgi_params;
    fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
}
]]>
    </programlisting>
   </informalexample>

   <para>
    Перезапустить Nginx.
   </para>

   <informalexample xml:id="install.unix.nginx.restart.nginx">
    <screen>
<![CDATA[
sudo /usr/local/nginx/sbin/nginx -s stop
sudo /usr/local/nginx/sbin/nginx
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Создайть тестовый файл
   </para>

   <informalexample xml:id="install.unix.nginx.test.nginx.php">
    <screen>
<![CDATA[
rm /usr/local/nginx/html/index.html
echo "<?php phpinfo(); ?>" >> /usr/local/nginx/html/index.php
]]>
    </screen>
   </informalexample>

   <para>
    Теперь откройте в браузере адрес http://localhost.
    Должна отобразиться информация, которую выводит функция phpinfo().
   </para>
  </listitem>
 </orderedlist>

 <para>
  Выполнив описанные шаги, вы получите работающий Nginx-сервер с
  поддержкой PHP в качестве модуля интерфейса <literal>FPM</literal> <literal>SAPI</literal>.
  Конечно, для Nginx и PHP доступно больше параметров конфигурации.
  Наберите в директории с исходным кодом команду <command>./configure --help</command>,
  чтобы получить больше информации.
 </para>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
