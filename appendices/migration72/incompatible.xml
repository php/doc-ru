<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e61d2217d58d7135abd368baa1089e58c626fbcc Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<sect1 xml:id="migration72.incompatible">
 <title>Изменения, ломающие обратную совместимость</title>

 <sect2 xml:id="migration72.incompatible.number_format-no-neg-zero">
  <title>Предотвращение возврата отрицательного нуля из <function>number_format</function></title>

  <para>
   Раньше функция <function>number_format</function> возвращала <literal>-0</literal>.
   Хотя это совершенно правильно в соответствии со спецификацией чисел с плавающей точкой IEEE 754,
   эта странность нежелательна для отображения отформатированных чисел в удобочитаемой форме.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(number_format(-0.01)); // теперь выводит string(1) "0" вместо string(2) "-0"
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.incompatible.object-array-casts">
  <title>Преобразование числовых ключей при приведении объектов и массивов</title>

  <para>
   Теперь числовые ключи лучше обрабатываются при приведении массивов к объектам и
   объектов к массивам (через явное приведение, либо используя <function>settype</function>).
  </para>

  <para>
   Это означает, что числовые (или числа в виде строк) ключи из массивов, конвертированные
   в объекты теперь будут доступны:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

// приведение массива к объекту
$arr = [0 => 1];
$obj = (object)$arr;
var_dump(
    $obj,
    $obj->{'0'}, // теперь работает
    $obj->{0} // теперь работает
);
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(stdClass)#1 (1) {
  ["0"]=>    // теперь это строковый ключ, а не числовой
  int(1)
}
int(1)
int(1)
]]>
   </screen>
  </informalexample>

  <para>
   И теперь числовые (или числа в виде строк) ключи объектов доступны при конвертации в массивы:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

// приведение объекта в массив
$obj = new class {
    public function __construct()
    {
        $this->{0} = 1;
    }
};
$arr = (array)$obj;
var_dump(
    $arr,
    $arr[0], // теперь работает
    $arr['0'] // теперь работает
);
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(1) {
  [0]=>    // теперь это числовой ключ, а не строковый
  int(1)
}
int(1)
int(1)
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.incompatible.no-null-to-get_class">
  <title>Запрещена передача &null; в <function>get_class</function></title>

  <para>
   Раньше передача &null; в функцию <function>get_class</function> возвращала
   имя класса, из которого был сделан вызов. Это поведение было удалено и теперь вместо
   этого будет вызвана ошибка уровня <constant>E_WARNING</constant>. Для
   достижения того же поведения, что и раньше, следует просто опустить аргумент.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.warn-on-non-countable-types">
  <title>Предупреждение при подсчёте неисчисляемых типов</title>

  <para>
   Теперь при использовании <function>count</function> с параметром,
   который нельзя посчитать будет возникать ошибка уровня <constant>E_WARNING</constant>
   (это также касается <function>sizeof</function> как псевдонима этой функции).
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(
    count(null), // NULL нельзя подсчитать
    count(1), // числа нельзя подсчитать
    count('abc'), // строки нельзя подсчитать
    count(new stdclass), // объекты, не реализующие интерфейс Countable, нельзя подсчитать
    count([1,2]) // массивы можно подсчитать
);
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d

Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d

Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d

Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d
int(0)
int(1)
int(1)
int(1)
int(2)
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.incompatible.hash-ext-to-objects">
  <title>Переход от ресурсов к объектам в модуле Hash</title>

  <para>
   В рамках долгосрочной миграции отказа от ресурсов, модуль
   <link linkend="book.hash">Hash</link> был обновлён
   для использования объектов вместо ресурсов. Это изменение должно быть плавным
   для PHP-разработчиков, за исключением случаев, когда используются проверки <function>is_resource</function>
   (которые нужно заменить на использование <function>is_object</function>).
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.ssl-tls-defaults">
  <title>Улучшены значения по умолчанию в SSL/TLS</title>

  <para>
   Были сделаны следующие изменения в значения по умолчанию:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <literal>tls://</literal> теперь по умолчанию используется TLSv1.0 или TLSv1.1 или TLSv1.2
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>ssl://</literal> псевдоним <literal>tls://</literal>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Константы <literal>STREAM_CRYPTO_METHOD_TLS_*</literal> по умолчанию равны TLSv1.0
     или TLSv1.1 + TLSv1.2, вместо TLSv1.0
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration72.incompatible.gettype-on-closed-resource">
  <title>Возвращаемое значение <function>gettype</function> для закрытых ресурсов</title>

  <para>
   Раньше использование <function>gettype</function> на закрытом ресурсе возвращало строку <literal>"unknown type"</literal>. Теперь будет возвращена строка
   <literal>"resource (closed)"</literal>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.is_object-on-incomplete_class">
  <title><function>is_object</function> и <classname>__PHP_Incomplete_Class</classname></title>

  <para>
   Раньше использование <function>is_object</function> на классе
   <classname>__PHP_Incomplete_Class</classname> возвращало &false;.
   Теперь будет возвращаться &true;.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.undefined-constants">
  <title>Повышены уровни ошибок неопределённых констант</title>

  <para>
   Не полностью определённые ссылки на неопределённые константы теперь будут генерировать
   <constant>E_WARNING</constant> (вместо <constant>E_NOTICE</constant>).
   В следующей основной версии PHP они будут генерировать исключения <classname>Error</classname>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.windows-support">
  <title>Поддержка Windows</title>

  <para>
   Официально поддерживаемые минимальные версии Windows теперь являются Windows 7/Server
   2008 R2.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.trait-properties">
  <title>Проверка значений свойств по умолчанию трейта</title>

  <para>
   Проверки совместимости значений свойств по умолчанию трейта больше не выполняют приведение типа.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.object-reserved-word">
  <title><literal>object</literal> для имён классов</title>

  <para>
   Имя <literal>object</literal> ранее было мягко зарезервировано с PHP 7.0.
   Теперь оно полноценное зарезервированное слово,
   запрещающее использовать его в качестве имени класса, трейта или интерфейса.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.netware-support">
  <title>Поддержка NetWare</title>

  <para>
   Поддержка NetWare была удалена.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.array-unique">
  <title><function>array_unique</function> with <constant>SORT_STRING</constant></title>

  <para>
   Если <parameter>sort_flags</parameter> равен
   <constant>SORT_STRING</constant>, ранее массив
   <parameter>array</parameter> копировался, а не уникальные элементы
   удалялись (сохраняя значения цифровых индексов),
   но теперь создаётся новый массив путём добавления уникальных элементов.
   Это может привести к различным числовым индексам.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.bcmod-and-floats">
  <title>Изменения <function>bcmod</function> с числами с плавающей точкой</title>

  <para>
   Функция <function>bcmod</function> больше не обрезает числа с плавающей точкой до целых. Таким образом, её поведение теперь соответствует
   <function>fmod</function>, а не оператору <literal>%</literal>.
   Например, <literal>bcmod('4', '3.5')</literal> теперь возвращает
   <literal>0.5</literal> вместо <literal>1</literal>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.hash-functions">
  <title>Функции хеширования и некриптографические хеши</title>

  <para>
   Функции <function>hash_hmac</function>, <function>hash_hmac_file</function>,
   <function>hash_pbkdf2</function> и <function>hash_init</function> (с
   <constant>HASH_HMAC</constant>) больше не принимают некриптографические хеши.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.json_decode-changes">
  <title>Опции функции <function>json_decode</function></title>

  <para>
   Опция функции <function>json_decode</function>,
   <constant>JSON_OBJECT_AS_ARRAY</constant>, теперь используется, если второй параметр (assoc) равен &null;. Ранее
   <constant>JSON_OBJECT_AS_ARRAY</constant> всегда игнорировался.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.rand-mt_rand-output">
  <title>Вывод <function>rand</function> и <function>mt_rand</function></title>

  <para>
   Числа, генерируемые <function>rand</function> и
   <function>mt_rand</function> для определённого параметра переинициализации (seed), могут отличаться от PHP 7.1 на
   64-битных машинах (из-за исправления ошибки модульного смещения в реализации).
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.sqlsafe_mode-ini-setting">
  <title>Удаление ini-настройки <link linkend="ini.sql.safe-mode"><parameter>sql.safe_mode</parameter></link></title>

  <para>
   Настройка конфигурации <parameter>sql.safe_mode</parameter> была удалена.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.date_parse_from_format">
  <title>Изменения в <function>date_parse</function> и <function>date_parse_from_format</function></title>

  <para>
   Элемент массива <literal>zone</literal>, возвращаемого функциями
   <function>date_parse_from_format</function> и
   <function>date_parse</function> теперь отображает секунды вместо
   минут, а его знак инвертируется. Например, <literal>-120</literal>
   теперь будет <literal>7200</literal>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.cookie-decode">
  <title>Входящие Cookies</title>

  <para>
   Начиная с PHP 7.2.34 <emphasis>имена</emphasis> входящих cookie
   больше не декодируются из URL-закодированной строки из соображений безопасности.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
