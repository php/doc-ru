<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 44b298ee5daf7c79a8e63c7e80ffe65232822838 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<sect2 xml:id="migration70.incompatible.error-handling">
 <title>Изменения в обработке ошибок и исключений</title>

 <para>
  Многие фатальные и поправимые фатальные ошибки были
  переделаны в исключения в PHP 7. Эти исключения наследуют
  класс <classname>Error</classname>, который, в свою
  очередь, реализует интерфейс
  <classname>Throwable</classname>
  (новый базовый интерфейс, который наследуют все исключения).
 </para>

 <para>
  Это означает, пользовательские обработчики ошибок могут
  не быть вызваны, потому что вместо вызова ошибки, будет
  выброшено исключение (порождая новые фатальные ошибки
  из-за неперехваченных исключений класса
  <classname>Error</classname>).
 </para>

 <para>
  Более подробное описание того, как ошибки работают в PHP 7,
  можно найти на странице
  <link linkend="language.errors.php7">ошибки PHP 7</link>.
  Это руководство всего лишь перечисляет изменения, которые
  могут привести к обратной несовместимости.
 </para>

 <sect3 xml:id="migration70.incompatible.error-handling.set-exception-handler">
  <title>
   <function>set_exception_handler</function> больше не
   гарантирует получение объекта класса
   <classname>Exception</classname>
  </title>

  <para>
   Код, реализующий регистрацию обработчика исключений
   с помощью <function>set_exception_handler</function>,
   используя декларацию типа
   <classname>Exception</classname>, вызовет фатальную
   ошибку, если будет выброшено исключение
   <classname>Error</classname>.
  </para>

  <para>
   Если требуется работа обработчика в PHP 5 и 7, вы должны
   убрать объявление класса из обработчика. Если код
   предполагается использовать только в PHP 7, то можно
   просто поменять тип с <classname>Exception</classname> на
   <classname>Throwable</classname>.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// Только PHP 5. В PHP 7 может вызвать фатальную ошибку.
function handler(Exception $e) { ... }
set_exception_handler('handler');

// Будет работать PHP 5 и 7.
function handler($e) { ... }

// Только PHP 7.
function handler(Throwable $e) { ... }
?>
]]>
   </programlisting>
  </informalexample>
 </sect3>

 <sect3 xml:id="migration70.incompatible.error-handling.constructors">
  <title>Встроенные конструкторы всегда вызывают исключения в случае неудачи</title>

  <para>
   Ранее некоторые внутренние классы возвращали
   &null; или бесполезный объект, когда конструктор терпел неудачу. Все
   встроенные классы теперь в таком случае будут выбрасывать
   исключение <classname>Exception</classname>, ровно
   как это уже делают пользовательские классы.
  </para>
 </sect3>

 <sect3 xml:id="migration70.incompatible.error-handling.parse">
  <title>Ошибки разбора бросают исключение класса <classname>ParseError</classname></title>

  <para>
   Ошибки разбора бросают исключение класса <classname>ParseError</classname>.
   Обработка ошибок <function>eval</function> должна
   включать в себя блок  &catch;, который будет ловить эту ошибку.
  </para>
 </sect3>

 <sect3 xml:id="migration70.incompatible.error-handling.strict">
  <title>Изменение строгости уведомлений E_STRICT</title>

  <para>
   Все сообщения <constant>E_STRICT</constant>
   переквалифицированы по другим уровням.
   Константа <constant>E_STRICT</constant> сохранена, так что
   <literal>error_reporting(E_ALL|E_STRICT)</literal> не вызовет
   ошибки.
  </para>
  <para>
   <table>
    <title>Изменение строгости сообщений <constant>E_STRICT</constant></title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Ситуация</entry>
       <entry>Новый уровень/поведение</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Индексирование ресурсом</entry>
       <entry><constant>E_NOTICE</constant></entry>
      </row>
      <row>
       <entry>Абстрактные статические методы</entry>
       <entry>Сообщение убрано, не вызывает ошибки</entry>
      </row>
      <row>
       <entry>"Переопределение" конструктора</entry>
       <entry>Сообщение убрано, не вызывает ошибки</entry>
      </row>
      <row>
       <entry>Несоблюдение сигнатуры при наследовании</entry>
       <entry><constant>E_WARNING</constant></entry>
      </row>
      <row>
       <entry>Одинаковые (совместимые) свойства в двух разных трейтах</entry>
       <entry>Сообщение убрано, не вызывает ошибки</entry>
      </row>
      <row>
       <entry>Нестатический доступ к статическому свойству</entry>
       <entry><constant>E_NOTICE</constant></entry>
      </row>
      <row>
       <entry>Только переменные могут быть присвоены по ссылке</entry>
       <entry><constant>E_NOTICE</constant></entry>
      </row>
      <row>
       <entry>Только переменные могут быть переданы по ссылке</entry>
       <entry><constant>E_NOTICE</constant></entry>
      </row>
      <row>
       <entry>Вызов нестатического метода статически</entry>
       <entry><constant>E_DEPRECATED</constant></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect3>
</sect2>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
