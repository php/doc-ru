<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 0bbcee7822ad480c99e13ce28a72a0e97fe68c05 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration81.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Новая функциональность</title>

 <sect2 xml:id="migration81.new-features.core">
  <title>Ядро PHP</title>

  <sect3 xml:id="migration81.new-features.core.octal-literal-prefix">
   <title>Буквенный префикс восьмеричных целых чисел</title>

   <para>
    Восьмеричные целые числа теперь могут использовать явный префикс
    <literal>0o</literal>/<literal>0O</literal> в целочисленных литералах,
    аналогично двоичным и шестнадцатеричным целочисленным литералам.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
014;  // Восьмеричный литерал без префикса
0o14; // Восьмеричный литерал с префиксом
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <!-- RFC: https://wiki.php.net/rfc/explicit_octal_notation -->
  </sect3>

  <sect3 xml:id="migration81.new-features.core.unpacking-string-keys">
   <title>Распаковка массива с помощью строковых ключей</title>

   <para>
    Добавлена поддержка распаковки массивов со строковыми ключами.
    <!-- TODO Add an example -->
   </para>
   <!-- RFC: https://wiki.php.net/rfc/array_unpacking_string_keys -->
  </sect3>

  <sect3 xml:id="migration81.new-features.core.named-arg-after-unpack">
   <title>Именованный аргумент после распаковки аргумента</title>

   <para>
    Теперь можно указать именованные аргументы после распаковки аргументов.
    <!-- TODO Add an example -->
    например:
    foo(...$args, named: $arg).
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.upload-full-path-key">
   <title>Ключ с полным путём при загрузке файлов</title>

   <para>
    При загрузке файлов появился новый ключ <literal>full_path</literal>,
    который содержит полный путь (а не только относительный) загруженного файла.
    Предназначен для использования вместе с HTML-атрибутом webkitdirectory.
   </para>
   <!-- RFC: https://wiki.php.net/rfc/array_unpacking_string_keys -->
  </sect3>

  <sect3 xml:id="migration81.new-features.core.enums">
   <title>Перечисления</title>

   <para>
    Добавлена поддержка <link linkend="language.enumerations">перечислений</link>.
    <!-- RFC: https://wiki.php.net/rfc/enumerations -->
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.fibers">
   <title>Файберы</title>

   <para>
    Добавлена поддержка <!--<link linkend="language.fibers">-->файберов<!--</link>-->.
    <!-- RFC: https://wiki.php.net/rfc/fibers -->
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.callable-syntax">
   <title>Callback-функции как объекты первого класса</title>

   <para>
    Замыкания для callback-функций теперь можно создавать с помощью синтаксиса <code>myFunc(...)</code>,
    который идентичен синтаксису <code>Closure::fromCallable('myFunc')</code>.
    <!-- RFC: https://wiki.php.net/rfc/first_class_callable_syntax -->
   </para>
   <note>
    <simpara>
     <code>...</code> является частью синтаксиса, а не пропуском.
    </simpara>
   </note>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.intersection-types">
   <title>Пересечение типов</title>

   <para>
    Добавлена поддержка <!--<link linkend="language.types.declarations.intersection">-->пересечения типов<!--</link>-->.
    <!-- RFC: https://wiki.php.net/rfc/pure-intersection-types -->
   </para>
   <caution>
    <simpara>
     Пересечения типов нельзя использовать вместе с
     <link linkend="language.types.declarations.union">объединёнными типами</link>
    </simpara>
   </caution>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.never-type">
   <title>Тип never</title>

   <para>
    Добавлен новый тип возвращаемого значения &never;.
    Тип указывает на то, что функция либо вызывает <function>exit</function>,
    либо выбрасывает исключение, либо не завершается.
    <!-- RFC: https://wiki.php.net/rfc/noreturn_type -->
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.new-in-initializer">
   <title>&new; в инициализации класса</title>

   <para>
    Теперь можно использовать выражения <code>new ClassName()</code> в качестве
    значения по умолчанию для параметра, статической переменной,
    инициализаторов глобальных констант и в качестве аргументов атрибутов.
    Теперь объекты также можно передавать в <function>define</function>.
    <!-- TODO Add an example -->
   </para>
   <!-- RFC: https://wiki.php.net/rfc/new_in_initializers -->
  </sect3>

  <sect3 xml:id="migration81.new-features.core.readonly">
   <title>Readonly-свойства</title>

   <para>
    Добавлена поддержка <code>readonly</code>-свойств.
    <!-- RFC: https://wiki.php.net/rfc/readonly_properties_v2 -->
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.core.final-constants">
   <title>Окончательные константы класса</title>

   <para>
    Добавлена поддержка модификатора <modifier>final</modifier> при определении констант класса.
    <!-- RFC: https://wiki.php.net/rfc/final_class_const -->
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration81.new-features.curl">
  <title>CURL</title>

  <para>
   Добавлена опция <constant>CURLOPT_DOH_URL</constant>.
  </para>

  <para>
   Добавлены параметры для сертификата BLOB-объекта, доступные с libcurl &gt;= 7.71.0:
  </para>
  <itemizedlist>
   <listitem>
    <simpara><constant>CURLOPT_ISSUERCERT_BLOB</constant></simpara>
   </listitem>
   <listitem>
    <simpara><constant>CURLOPT_PROXY_ISSUERCERT</constant></simpara>
   </listitem>
   <listitem>
    <simpara><constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant></simpara>
   </listitem>
   <listitem>
    <simpara><constant>CURLOPT_PROXY_SSLCERT_BLOB</constant></simpara>
   </listitem>
   <listitem>
    <simpara><constant>CURLOPT_PROXY_SSLKEY_BLOB</constant></simpara>
   </listitem>
   <listitem>
    <simpara><constant>CURLOPT_SSLCERT_BLOB</constant></simpara>
   </listitem>
   <listitem>
    <simpara><constant>CURLOPT_SSLKEY_BLOB</constant></simpara>
   </listitem>
  </itemizedlist>

  <para>
   Добавлен класс <classname>CURLStringFile</classname>, который можно использовать
   для отправки файла из строки (&string;), а не из файла:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$file = new CURLStringFile($data, 'filename.txt', 'text/plain');
curl_setopt($curl, CURLOPT_POSTFIELDS, ['file' => $file]);
?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.fpm">
  <title>FPM</title>

  <para>
   Добавлен формат статуса openmetrics.
   Prometheus может использовать его для получения метрик FPM.
  </para>
  <para>
   Добавлен новый пул для диспетчера динамических процессов под названием <literal>pm.max_spawn_rate</literal>.
   Он позволяет запускать несколько дочерних процессов более быстрыми темпами, если выбран динамический pm.
   Значение по умолчанию - <literal>32</literal>, которое ранее было фиксированным значением.
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.gd">
  <title>GD</title>

  <para>
   Поддержка Avix теперь доступна с помощью <function>imagecreatefromavif</function>
   и <function>imageavif</function>, если libgd был собран с поддержкой Avix.
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.hash">
  <title>Hash</title>

  <para>
   Следующие функции <function>hash</function>, <function>hash_file</function>
   и <function>hash_init</function> теперь поддерживают дополнительный необязательный аргумент
   <parameter>options</parameter>, который можно использовать для передачи специфичных для алгоритма данных.
  </para>

  <sect3 xml:id="migration81.new-features.hash.murmurhash3">
   <title>MurmurHash3</title>

   <para>
    Добавлена поддержка <literal>MurmurHash3</literal> с поддержкой потоковой передачи.
    Реализованы следующие варианты:
   </para>
   <itemizedlist>
    <listitem>
     <simpara>murmur3a, 32-битный хеш</simpara>
    </listitem>
    <listitem>
     <simpara>murmur3c, 128-битный хеш для x86</simpara>
    </listitem>
    <listitem>
     <simpara>murmur3f, 128-битный хеш для x64</simpara>
    </listitem>
   </itemizedlist>

   <para>
    Начальное состояние хеширования можно передать с помощью ключа <literal>seed</literal>
    в массиве <parameter>options</parameter>, например:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$h = hash("murmur3f", $data, options: ["seed" => 42]);
echo $h, "\n";
?>
]]>
     </programlisting>
    </informalexample>

    Допустимое начальное значение находится в диапазоне от <literal>0</literal>
    до определённого платформой значения <constant>UINT_MAX</constant>, обычно - <literal>4294967295</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.hash.xxhash">
   <title>xxHash</title>

   <para>
    Добавлена поддержка <literal>xxHash</literal>.
    Реализованы следующие варианты:
   </para>
   <itemizedlist>
    <listitem>
     <simpara>xxh32, 32-bit hash</simpara>
    </listitem>
    <listitem>
     <simpara>xxh64, 64-bit hash</simpara>
    </listitem>
    <listitem>
     <simpara>xxh3, 64-bit hash</simpara>
    </listitem>
    <listitem>
     <simpara>xxh128, 128-bit hash</simpara>
    </listitem>
   </itemizedlist>

   <para>
    Начальное состояние хеширования можно передать с помощью ключа <literal>seed</literal>
    в массиве <parameter>options</parameter>, например:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$h = hash("xxh3", $data, options: ["seed" => 42]);
echo $h, "\n";
?>
]]>
     </programlisting>
    </informalexample>

    Использование секрета также поддерживается путём передачи ключа
    <literal>secret</literal> в массиве <parameter>options</parameter>:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$h = hash("xxh3", $data, options: ["secret" => "как минимум 136 байт секрета"]);
echo $h, "\n";
?>
]]>
     </programlisting>
    </informalexample>

    Качество пользовательского секрета имеет решающее значение для качества хеша результата.
    Для секрета настоятельно рекомендуется использовать максимально возможную энтропию.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.new-features.mysqli">
  <title>MySQLi</title>

  <sect3 xml:id="migration81.new-features.mysqli.local_infile_directory">
   <title>Новая INI-директива <literal>mysqli.local_infile_directory</literal></title>

   <para>
    Добавлена INI-директива <link linkend="ini.mysqli.local-infile-directory">mysqli.local_infile_directory</link>,
    с помощью которой можно указать каталог, из которого разрешена загрузка файлов.
    Это имеет смысл, только если <link linkend="ini.mysqli.allow-local-infile">mysqli.allow_local_infile</link>
    не включён, поскольку в этом случае разрешены все каталоги.
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.mysqli.bind-in-execute">
   <title>Привязка параметров во время выполнении</title>

   <para>
    Теперь можно привязывать параметры, передав их в виде массива в <methodname>mysqli_stmt::execute</methodname>.
    Все значения будут привязаны как строки. Разрешены только списочные массивы.
    Эта новая функция недоступна, если MySQLi скомпилирован с libmysqlclient.
    <!-- RFC: https://wiki.php.net/rfc/mysqli_bind_in_execute -->
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$stmt = $mysqli->prepare('INSERT INTO users(id, name) VALUES(?,?)');
$stmt->execute([1, $username]);
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.new-features.mysqli.mysqli_fetch_column">
   <title>Новый метод <methodname>mysqli_result::fetch_column</methodname></title>

   <para>
    Добавлен <methodname>mysqli_result::fetch_column</methodname> для
    выборки единственного скалярного значения из набора результатов.
    Новый метод принимает необязательный параметр <parameter>column</parameter>,
    начинающийся с 0, в виде целого числа (&integer;), указывающий из какого столбца производить выборку.
    <!-- RFC: https://wiki.php.net/rfc/mysqli_fetch_column -->
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$result = $mysqli->query('SELECT username FROM users WHERE id = 123');
echo $result->fetch_column();
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration81.new-features.pdo_mysql">
  <title>PDO</title>

  <para>
   Добавлен атрибут <constant>PDO::MYSQL_ATTR_LOCAL_INFILE_DIRECTORY</constant>,
   который можно использовать для указания каталога, из которого могут быть загружены файлы.
   Это имеет смысл только в том случае, если <constant>PDO::MYSQL_ATTR_LOCAL_INFILE</constant> не включён,
   поскольку в этом случае разрешены все каталоги.
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.pdo_sqlite">
  <title>PDO_SQLite</title>

  <para>
   Поддерживается новый элемент <literal>"file:"</literal> в DSN-префиксе SQLite,
   который позволяет указывать дополнительные флаги.
   Он не будет работать, если включена опция open_basedir.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
new PDO('sqlite:file:path/to/sqlite.db?mode=ro')
?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.posix">
  <title>POSIX</title>

  <para>
   Добавлены константы <constant>POSIX_RLIMIT_KQUEUES</constant> и <constant>POSIX_RLIMIT_NPTS</constant>.
   Эти ограничения доступны только во FreeBSD.
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.standard">
  <title>Стандартные функции</title>

  <para>
   <function>fputcsv</function> теперь принимает новый аргумент <parameter>eol</parameter>,
   который позволяет определять настраиваемую последовательность конца строки,
   значение по умолчанию остаётся прежним - <literal>"\n"</literal>.
  </para>
 </sect2>

 <sect2 xml:id="migration81.new-features.spl">
  <title>SPL</title>

  <para>
   <methodname>SplFileObject::fputcsv</methodname> теперь принимает новый аргумент
   <parameter>eol</parameter>, который позволяет определять настраиваемую последовательность конца строки,
   значение по умолчанию остаётся прежним - <literal>"\n"</literal>.
  </para>
 </sect2>

</sect1><!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
