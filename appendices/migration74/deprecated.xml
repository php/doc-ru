<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4642b715f374b4220884fa110b6529ac948799b5 Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<sect1 xml:id="migration74.deprecated">
 <title>Устаревшая функциональность</title>

 <sect2 xml:id="migration74.deprecated.core">
  <title>Ядро PHP</title>

  <sect3 xml:id="migration74.deprecated.core.nested-ternary">
   <title>Вложенные тернарные операторы без явного указания скобок</title>

   <para>
    Во вложенных тернарных операциях должны явно использоваться круглые скобки, чтобы определить порядок операций.
    Раньше, если скобки явно не заданы, в большинстве случаев левая ассоциативность не приводила к ожидаемому поведению.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
1 ? 2 : 3 ? 4 : 5;   // устарело
(1 ? 2 : 3) ? 4 : 5; // хорошо
1 ? 2 : (3 ? 4 : 5); // хорошо
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
    Скобки <emphasis>not</emphasis> требуются при вложении в средний операнд,
    поскольку это всегда однозначно и не зависит от ассоциативности:
    <informalexample>
     <programlisting role="php">
<![CDATA[
1 ? 2 ? 3 : 4 : 5 // хорошо
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.array-string-access-curly-brace">
   <title>Обращение к индексу массива и строки через фигурные скобки</title>

   <para>
    Синтаксис доступа к массиву и строке с использованием фигурных скобок объявлен устаревшим.
    Используйте <literal>$var[$idx]</literal> вместо <literal>$var{$idx}</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.real">
   <title>Приведение типа (real) и функция <function>is_real</function></title>

   <para>
    Приведение типа <literal>(real)</literal> объявлено устаревшим,
    вместо этого используйте <literal>(float)</literal>.
   </para>
   <para>
    Функция <function>is_real</function> также объявлена устаревшей,
    вместо неё используйте <function>is_float</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.unbind-this">
   <title>Отмена привязки <literal>$this</literal> при использовании <literal>$this</literal></title>

   <para>
    Отмена привязки <literal>$this</literal> в нестатическом замыкании,
    которое использует <literal>$this</literal>, объявлена устаревшей.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.parent">
   <title>Ключевое слово <literal>parent</literal> вне родительского класса</title>

   <para>
    Использование <literal>parent</literal> внутри класса, у которого нет родителя, объявлено устаревшим,
    а в будущем произойдёт ошибка компиляции. А пока ошибка будет только при обращении к родителю во время выполнения.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.allow-url-include">
   <title>INI-опция allow_url_include</title>

   <para>
    Конфигурационная директива <link linkend="ini.allow-url-include">allow_url_include</link>
    объявлена устаревшей. При включённой опции будет вызвано уведомление об устаревшей возможности во время загрузки.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.invalid-base-characters">
   <title>Недопустимые символы в основных функциях преобразования</title>

   <para>
    Передача недопустимых символов в <function>base_convert</function>,
    <function>bindec</function>, <function>octdec</function> теперь вызывает уведомление об устаревшей возможности.
    Результат всё равно будет вычислен так, как если бы недопустимых символов не было.
    Ведущие и завершающие пробелы, а также префиксы типа 0x (в зависимости от системы счисления) по-прежнему разрешены.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.array-key-exists-objects">
   <title>Использование <function>array_key_exists</function> с объектом</title>

   <para>
    Использование <function>array_key_exists</function> с объектом объявлено устаревшим.
    Вместо этого следует использовать либо <function>isset</function>, либо <function>property_exists</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.magic-quotes-functions">
   <title>Функции, связанные с волшебными кавычками</title>

   <para>
    Функции <function>get_magic_quotes_gpc</function> и <function>get_magic_quotes_runtime</function> объявлены устаревшими.
    Они всегда возвращают &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.hebrevc">
   <title>Функция <function>hebrevc</function></title>

   <para>
    Функция <function>hebrevc</function> объявлена устаревшей.
    Её можно заменить на выражение <literal>nl2br(hebrev($str))</literal>,
    либо лучше всего использовать поддержку Unicode RTL.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.convert-cyr-string">
   <title>Функция <function>convert_cyr_string</function></title>

   <para>
    Функция <function>convert_cyr_string</function> объявлена устаревшей.
    Её можно заменить либо на <function>mb_convert_string</function>, либо
    <function>iconv</function> или на класс <classname>UConverter</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.money-format">
   <title>Функция <function>money_format</function></title>

   <para>
    Функция <function>money_format</function> объявлена устаревшей.
    Она может быть заменена функциональностью интернационализации - классом <classname>NumberFormatter</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.ezmlm-hash">
   <title>Функция <function>ezmlm_hash</function></title>

   <para>
    Функция <function>ezmlm_hash</function> объявлена устаревшей.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.restore-include-path">
   <title>Функция <function>restore_include_path</function></title>

   <para>
    Функция <function>restore_include_path</function> объявлена устаревшей.
    Её можно заменить на <literal>ini_restore('include_path')</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.implode-reverse-parameters">
   <title>Использование implode с нерекомендуемым порядком параметров</title>

   <para>
    Передача параметров в <function>implode</function> в обратном порядке объявлена устаревшей -
    используйте <literal>implode($glue, $parts)</literal> вместо <literal>implode($parts, $glue)</literal>.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration74.deprecated.com">
  <title>COM</title>

  <para>
   Импорт библиотек типов с регистрацией констант без учёта регистра объявлен устаревшим.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.filter">
  <title>Фильтрация</title>

  <para>
   Фильтр <constant>FILTER_SANITIZE_MAGIC_QUOTES</constant> объявлен устаревшим,
   вместо него используйте <constant>FILTER_SANITIZE_ADD_SLASHES</constant>.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.mbstring">
  <title>Многобайтовые строки</title>

  <para>
   Передача нестрокового шаблона в <function>mb_ereg_replace</function> объявлена устаревшей.
   В данный момент нестроковые значения интерпретируются как кодовые точки ASCII.
   В PHP 8 шаблон будет обрабатываться как строка.
  </para>
  <para>
   Передача кодировки в качестве 3-го параметра в <function>mb_strrpos</function> объявлена устаревшей.
   Вместо этого передавайте позицию как 0, а кодировку в 4-м параметре.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.ldap">
  <title>Облегчённый протокол доступа к каталогам (LDAP)</title>

  <para>
   Функции <function>ldap_control_paged_result_response</function> и
   <function>ldap_control_paged_result</function> объявлены устаревшими.
   Для управления постраничным режимом используйте функцию
   <function>ldap_search</function>.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.reflection">
  <title>Reflection</title>

  <para>
   Вызовы <methodname>ReflectionType::__toString</methodname> теперь создают уведомление об устаревшей возможности.
   Этот метод объявлен устаревшим в пользу использования  <methodname>ReflectionNamedType::getName</methodname> в документации с PHP 7.1,
   но не выдавал соответствующего уведомления по техническим причинам.
  </para>
  <para>
   Методы <literal>export()</literal> у всех классов <classname>Reflection</classname> объявлены устаревшими.
   Теперь создавайте объект <classname>Reflection</classname> и преобразуйте его в строку:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// Вместо ReflectionClass::export(Foo::class, false) используйте:
echo new ReflectionClass(Foo::class), "\n";

// Вместо $str = ReflectionClass::export(Foo::class, true) используйте:
$str = (string) new ReflectionClass(Foo::class);
?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.socket">
  <title>Сокеты</title>

  <para>
   Флаги <constant>AI_IDN_ALLOW_UNASSIGNED</constant> и
   <constant>AI_IDN_USE_STD3_ASCII_RULES</constant> для функции
   <function>socket_addrinfo_lookup</function> объявлены устаревшими
   из-за обновления glibc.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
