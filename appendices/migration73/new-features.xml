<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 216c1d34f9c4de575cf7115107a40f90f45b21c3 Maintainer: lex Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration73.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Новые возможности</title>

 <sect2 xml:id="migration73.new-features.core">
  <title>Ядро PHP</title>

  <sect3 xml:id="migration73.new-features.core.heredoc">
   <title>Более гибкий синтаксис Heredoc и Nowdoc</title>

   <para>
    После закрывающего идентификатора в doc-строках больше не нужно ставить точку с запятой или новую строку.
    Кроме того, закрывающий идентификатор может быть с отступом, и в этом случае он будет удалён из всех строк в doc-строке.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.destruct-reference">
   <title>Деструктурирование массива поддерживает присвоение по ссылкам</title>

   <para>
    Деструктурирование массива теперь поддерживает присвоение по ссылкам с помощью синтаксиса
    <literal>[&amp;$a, [$b, &amp;$c]] = $d</literal>. То же самое поддерживается и для <function>list</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.instanceof-literals">
   <title>Оператор instanceof принимает литералы</title>

   <para>
    Оператор <literal>instanceof</literal> теперь поддерживает литералы в качестве первого операнда,
    и в этом случае результат будет всегда &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.compileerror">
   <title>Исключение CompileError вместо некоторых ошибок компиляции</title>

   <para>
    Добавлено новое исключение <classname>CompileError</classname>, которое наследуется от <classname>ParseError</classname>.
    Небольшое количество ошибок компиляции теперь будет выбрасывать <classname>CompileError</classname> вместо создания фатальной ошибки.
    В настоящее время это влияет только на ошибки компиляции, которые могут быть созданы <function>token_get_all</function>
    в режиме <constant>TOKEN_PARSE</constant>, но в будущем может быть преобразовано больше ошибок.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.trailing-commas">
   <title>В вызовах разрешена завершающая запятая</title>

   <para>
    Завершающие запятые в вызовах функций и методов теперь разрешены.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.argon2id">
   <title>Поддержка Argon2id</title>

   <para>
    С аргументом <option role="configure">--with-password-argon2[=dir]</option> скрипта configure
    теперь поддерживаются оба хеша, как Argon2i, так и Argon2id, в функциях
    <function>password_hash</function>, <function>password_verify</function>,
    <function>password_get_info</function> и
    <function>password_needs_rehash</function>. Пароли могут быть хешированы
    и проверены, используя константу <constant>PASSWORD_ARGON2ID</constant>.
    Поддержка обоих алгоритмов Argon2i и Argon2id в функциях семейства <function>password_*</function>
    теперь требует, чтобы PHP был скомпилирован с библиотекой libargon2 версии ≥
    20161029.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.fpm">
  <title>Менеджер процессов FastCGI</title>

  <para>
   Для настройки логирования FPM были добавлены новые опции:
   <variablelist>
    <varlistentry>
     <term><literal>log_limit</literal></term>
     <listitem>
      <simpara>
       Эта глобальная опция может использоваться для установки лимита логирования для строки логирования,
       позволяющая записывать сообщения длиной более 1024 символов без переноса.
       Также исправляет различные проблемы с упаковкой (wrapping).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>log_buffering</literal></term>
     <listitem>
      <simpara>
       Этот глобальная опция позволяет вести экспериментальное логирование без дополнительной буферизации.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>decorate_workers_output</literal></term>
     <listitem>
      <simpara>
       Этот вариант пула позволяет отключить отметку вывода (output decoration) для обработчиков,
       когда <literal>catch_workers_output</literal> включена.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.bc">
  <title>Функции BC Math</title>

  <para>
   Функция <function>bcscale</function> теперь также может использоваться как геттер
   для извлечения текущего используемого масштаба.
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.ldap">
  <title>Облегчённый протокол доступа к каталогам (LDAP)</title>

  <para>
   Была добавлена полная поддержка LDAP Controls к функциям запросов <link
   linkend="book.ldap">LDAP</link> и
   <function>ldap_parse_result</function>:
   <itemizedlist>
    <listitem>
     <simpara>
      Добавлен параметр <literal>$serverctrls</literal> для отправки управления серверу
      в функциях <function>ldap_add</function>,
      <function>ldap_mod_replace</function>, <function>ldap_mod_add</function>,
      <function>ldap_mod_del</function>, <function>ldap_rename</function>,
      <function>ldap_compare</function>, <function>ldap_delete</function>,
      <function>ldap_modify_batch</function>,
      <function>ldap_search</function>, <function>ldap_list</function> и
      <function>ldap_read</function>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Добавлен параметр <literal>$serverctrls</literal> для получения управления с сервера в функции
      <function>ldap_parse_result</function>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Поддержка <constant>LDAP_OPT_SERVER_CONTROLS</constant> и
      <constant>LDAP_OPT_CLIENT_CONTROLS</constant> в функциях
      <function>ldap_get_option</function> и
      <function>ldap_set_option</function> была исправлена.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.mbstring">
  <title>Функции мультибайтовых строк</title>

  <sect3 xml:id="migration73.new-features.mbstring.case-mapping-folding">
   <title>Полная поддержка case-mapping и case-folding</title>

   <para>
    Добавлен поддержка полного процесса преобразования регистра символов (case-mapping)
    и сравнение на идентичность разных регистров (case-folding).
    В отличие от простого case-mapping, полный case-mapping может изменить длину строки.
    Пример:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_strtoupper("Straße");
// Выведет STRAßE в PHP 7.2
// Выведет STRASSE в PHP 7.3
?>
]]>
     </programlisting>
    </informalexample>
    Различные режимы преобразования и сравнения регистра символов доступны
    в функции <function>mb_convert_case</function>:
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER</constant> (используется <function>mb_strtolower</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER</constant> (используется <function>mb_strtoupper</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD_SIMPLE</constant> (используется нечувствительными к регистру операциями)
      </simpara>
     </listitem>
    </itemizedlist>
    Выполняет только безусловный, независимый от языка, полный процесс преобразования.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.case-insensitive-ops">
   <title>Операции, нечувствительные к регистру используют case-folding</title>

   <para>
    Строковые операции без учёта регистра теперь используют case-folding вместо case-mapping регистра при сравнении.
    Это означает, что теперь больше символов будут считаться (без учёта регистра) равными.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.mb-case-title">
   <title>MB_CASE_TITLE выполняет преобразование title-case</title>

   <para>
    Функция <function>mb_convert_case</function> с <constant>MB_CASE_TITLE</constant> теперь выполняет преобразование title-case
    в зависимости от свойств Unicode, основанных на Cased и CaseIgnorable.
    В частности, это также улучшает обработку кавычек и апострофов.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.ucd11">
   <title>Поддержка Unicode 11</title>

   <para>
    Таблицы данных <link linkend="book.mbstring">мультибайтовых строк</link> были
    обновлены до Юникода версии 11.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.long-strings">
   <title>Поддержка больших строк</title>

   <para>
    <link linkend="ref.mbstring">Функции мультибайтовых строк</link> теперь
    корректно поддерживают строки размером более 2 Гб.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.performance">
   <title>Улучшение производительности</title>

   <para>
    Производительность модуля <link linkend="book.mbstring">мультибайтовых строк</link>
    была значительно повсеместно улучшена. Самые большие улучшения в функциях
    преобразования регистра.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.named-captures">
   <title>Поддержка именованных фрагментов</title>

   <para>
    Функции <literal>mb_ereg_*</literal> теперь поддерживают именованные фрагменты.
    Соответствующие функции, такие как <function>mb_ereg</function>, теперь будут
    возвращать именованные фрагменты как с их номером группы, так и с их именем, аналогично PCRE:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg('(?<word>\w+)', '国', $matches);
// => [0 => "国", 1 => "国", "word" => "国"];
?>
]]>
     </programlisting>
    </informalexample>
    Кроме того, функция <function>mb_ereg_replace</function> теперь поддерживает
    обозначения <code>\k&lt;&gt;</code> и <code>\k''</code> для ссылки на именованные
    фрагменты в заменяющей строке:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg_replace('\s*(?<word>\w+)\s*', "_\k<word>_\k'word'_", ' foo ');
// => "_foo_foo_"
?>
]]>
     </programlisting>
    </informalexample>
    <code>\k&lt;&gt;</code> и <code>\k''</code> также могут использоваться
    для нумерованных ссылок, которые также работают с номерами групп больше 9.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.realine">
  <title>Readline</title>

  <para>
   В функции <function>readline_info</function> добавлена поддержка параметров
   <literal>completion_append_character</literal> и <literal>completion_suppress_append</literal>.
   Эти опции доступны, только если PHP скомпилирован с библиотекой libreadline (а не libedit).
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
