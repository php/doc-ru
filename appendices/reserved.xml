<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 170b6cda37f29c39b9e08375344c5eb9523b2de3 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Список зарезервированных слов</title>
 <para>
  Раздел содержит список идентификаторов, которые разработчики PHP определили для внутренних целей языка.
  Зарезервированные идентификаторы нельзя указывать в скриптах, если только явно не указали обратное.
  В состав списков входят ключевые слова, предопределённые переменные, константы и названия классов.
  Списки не претендуют на полноту — команда переводчиков дополняет их по мере выхода новых версий языка.
 </para>
 <sect1 xml:id="reserved.keywords">
  <title>Список ключевых слов</title>
  <simpara>
   Ключевые слова — элементы синтаксиса языка PHP.
   Отдельные слова похожи на функции, другие — на константы, но корректный термин для ключевых слов — языковые конструкции.
   Следующие ключевые слова нельзя указывать как названия классов, функций или глобальных констант,
   но правила языка разрешают указывать ключевые слова как названия свойств, констант, методов
   классов, интерфейсов и трейтов, с оговоркой, слово <literal>class</literal>
   нельзя указывать как название константы.
  </simpara>

  <table>
   <title>Ключевые слова PHP</title>
   <tgroup cols="5">
    <tbody>
     <row>
      <entry>
       <function>__halt_compiler</function>
      </entry>
      <entry>
       <link linkend="language.oop5.abstract">abstract</link>
      </entry>
      <entry>
       <link linkend="language.operators.logical">and</link>
      </entry>
      <entry>
       <function>array</function>
      </entry>
      <entry>
       <link linkend="control-structures.foreach">as</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.break">break</link>
      </entry>
      <entry>
       <link linkend="language.types.callable">callable</link>
      </entry>
      <entry>
       <link linkend="control-structures.switch">case</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">catch</link>
      </entry>
      <entry>
       <link linkend="language.oop5.basic.class">class</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.oop5.cloning">clone</link>
      </entry>
      <entry>
       <link linkend="language.oop5.constants">const</link>
      </entry>
      <entry>
       <link linkend="control-structures.continue">continue</link>
      </entry>
      <entry>
       <link linkend="control-structures.declare">declare</link>
      </entry>
      <entry>
       <link linkend="control-structures.switch">default</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>die</function>
      </entry>
      <entry>
       <link linkend="control-structures.do.while">do</link>
      </entry>
      <entry>
       <function>echo</function>
      </entry>
      <entry>
       <link linkend="control-structures.else">else</link>
      </entry>
      <entry>
       <link linkend="control-structures.elseif">elseif</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>empty</function>
      </entry>
      <entry>
       <link linkend="control-structures.declare">enddeclare</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endfor</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endforeach</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endif</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.alternative-syntax">endswitch</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endwhile</link>
      </entry>
      <entry>
       <function>eval</function>
      </entry>
      <entry>
       <function>exit</function>
      </entry>
      <entry>
       <link linkend="language.oop5.basic.extends">extends</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.oop5.final">final</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">finally</link>
      </entry>
      <entry>
       <link linkend="functions.arrow">fn</link> (начиная с PHP 7.4)
      </entry>
      <entry>
       <link linkend="control-structures.for">for</link>
      </entry>
      <entry>
       <link linkend="control-structures.foreach">foreach</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="functions.user-defined">function</link>
      </entry>
      <entry>
       <link linkend="language.variables.scope">global</link>
      </entry>
      <entry>
       <link linkend="control-structures.goto">goto</link>
      </entry>
      <entry>
       <link linkend="control-structures.if">if</link>
      </entry>
      <entry>
       <link linkend="language.oop5.interfaces">implements</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>include</function>
      </entry>
      <entry>
       <function>include_once</function>
      </entry>
      <entry>
       <link linkend="language.operators.type">instanceof</link>
      </entry>
      <entry>
       <link linkend="language.oop5.traits.conflict">insteadof</link>
      </entry>
      <entry>
       <link linkend="language.oop5.interfaces">interface</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>isset</function>
      </entry>
      <entry>
       <function>list</function>
      </entry>
      <entry>
       &match; (начиная с PHP 8.0)
      </entry>
      <entry>
       <link linkend="language.namespaces">namespace</link>
      </entry>
      <entry>
       <link linkend="language.oop5.basic.new">new</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.operators.logical">or</link>
      </entry>
      <entry>
       <function>print</function>
      </entry>
      <entry>
       <link linkend="language.oop5.visibility">private</link>
      </entry>
      <entry>
       <link linkend="language.oop5.visibility">protected</link>
      </entry>
      <entry>
       <link linkend="language.oop5.visibility">public</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.oop5.properties.readonly-properties">readonly</link> (начиная с PHP 8.1.0) *
      </entry>
      <entry>
       <function>require</function>
      </entry>
      <entry>
       <function>require_once</function>
      </entry>
      <entry>
       <function>return</function>
      </entry>
      <entry>
       <link linkend="language.variables.scope">static</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.switch">switch</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">throw</link>
      </entry>
      <entry>
       <link linkend="language.oop5.traits">trait</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">try</link>
      </entry>
      <entry>
       <function>unset</function>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.namespaces.importing">use</link>
      </entry>
      <entry>
       <link linkend="language.oop5.properties">var</link>
      </entry>
      <entry>
       <link linkend="control-structures.while">while</link>
      </entry>
      <entry>
       <link linkend="language.operators.logical">xor</link>
      </entry>
      <entry>
       <link linkend="language.generators">yield</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.yield.from">yield from</link>
      </entry>
      <entry></entry>
      <entry></entry>
      <entry></entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <simpara>
   * Ключевое слово <literal>readonly</literal> — допустимое название функции.
  </simpara>

  <table>
   <title>Константы этапа компиляции</title>
   <tgroup cols="5">
    <tbody>
     <row>
      <entry>
       <link linkend="language.constants.magic">__CLASS__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__DIR__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__FILE__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__FUNCTION__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__LINE__</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.constants.magic">__METHOD__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__PROPERTY__</link>
      </entry>
      <entry>
       <link linkend="language.namespaces.nsconstants">__NAMESPACE__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__TRAIT__</link>
      </entry>
      <entry>
      </entry>
      <entry>
      </entry>
      <entry>
      </entry>
      <entry>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 xml:id="reserved.classes">
  <title>Предопределённые классы</title>
  <para>
   Раздел перечисляет названия стандартных предопределённых классов;
   модули языка определяют дополнительные классы, которые описывает справка модулей.
  </para>

  <sect2 xml:id="reserved.classes.standard">
   <title>Стандартные определённые классы</title>

   <simpara>
    Следующие классы определили вместе со стандартным набором функций ядра PHP.
   </simpara>

   <variablelist>
    <varlistentry>
     <term><classname>Directory</classname></term>
     <listitem>
      <simpara>
       Создаётся функцией <function>dir</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>stdClass</classname></term>
     <listitem>
      <simpara>
       Пустой класс общего назначения, созданный в результате
       <link linkend="language.types.object.casting">преобразования в объект</link>
       или различных стандартных функций.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>__PHP_Incomplete_Class</classname></term>
     <listitem>
      <simpara>
       Объект неполного класса создают функции наподобие <function>unserialize</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Exception</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>ErrorException</classname></term>
     <listitem>
      <simpara>

      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>php_user_filter</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Closure</classname></term>
     <listitem>
      <simpara>
       Предопределённый окончательный класс <classname>Closure</classname>,
       используется для внутренней реализации <link linkend="functions.anonymous">анонимных функций</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Generator</classname></term>
     <listitem>
      <simpara>
       Предопределённый окончательный класс <classname>Generator</classname>,
       используется для представления <link linkend="language.generators">генераторов</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>ArithmeticError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>AssertionError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>DivisionByZeroError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Error</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Throwable</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>ParseError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>TypeError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="reserved.classes.special">
   <title>Специальные классы</title>

   <simpara>
    Следующие идентификаторы нельзя указывать как название класса,
    поскольку разработчики языка зарезервировали эти слова
    для внутренних целей языка.
   </simpara>

   <variablelist>
    <varlistentry>
     <term><classname>self</classname></term>
     <listitem>
      <simpara>
       <link linkend="language.oop5.paamayim-nekudotayim">Текущий класс</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>static</classname></term>
     <listitem>
      <simpara>
       <link linkend="language.oop5.late-static-bindings">Текущий класс во время выполнения</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>parent</classname></term>
     <listitem>
      <simpara>
       <link linkend="language.oop5.paamayim-nekudotayim">Родительский класс</link>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

 </sect1>

 &appendices.reserved.constants;
 <sect1 xml:id="reserved.other-reserved-words">
  <title>Список прочих зарезервированных слов</title>
  <simpara>
   Следующие слова нельзя указывать как названия классов, интерфейсов или трейтов.
   До PHP 8.0 слова из следующего списка запрещалось указывать
   как идентификаторы пространств имён.
  </simpara>
  <para>
   <table>
    <title>Зарезервированные слова</title>
    <tgroup cols="4">
     <tbody>
      <row>
        <entry>
         parent
        </entry>
        <entry>
         self
        </entry>
       <entry>
        int
       </entry>
       <entry>
        float
       </entry>
      </row>
      <row>
       <entry>
        bool
       </entry>
       <entry>
        string
       </entry>
       <entry>
        true
       </entry>
       <entry>
        false
       </entry>
      </row>
      <row>
       <entry>
        null
       </entry>
       <entry>
        void (с PHP 7.1)
       </entry>
       <entry>
        iterable (с PHP 7.1)
       </entry>
       <entry>
        object (с PHP 7.2)
       </entry>
      </row>
      <row>
       <entry>
        mixed (с PHP 8.0)
       </entry>
       <entry>
        never (с PHP 8.1)
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   Следующий список содержит мягко зарезервированные слова.
   Они всё ещё могут использоваться в качестве имён классов, интерфейсов и трейтов,
   но использовать их крайне не рекомендуется,
   поскольку они могут стать полноценно зарезервированными в будущем.
  </para>
  <para>
   <table>
    <title>Мягко зарезервированные слова</title>
    <tgroup cols="4">
     <tbody>
      <row>
       <entry>
        enum
       </entry>
       <entry>
        resource
       </entry>
       <entry>
        numeric
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
